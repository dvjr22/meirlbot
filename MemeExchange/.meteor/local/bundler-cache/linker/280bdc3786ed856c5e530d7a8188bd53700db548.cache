[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nHTTP = Package.http.HTTP;\nHTTPInternals = Package.http.HTTPInternals;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"main.js\":[\"meteor/meteor\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/main.js                                                           //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});\n                                                                            //\nMeteor.startup(function () {                                                // 3\n    // code to run on server at startup                                     //\n    Ticker = new Mongo.Collection('ticker');                                // 5\n                                                                            //\n    var ticker = JSON.parse(Assets.getText('tickerData.json'));             // 7\n                                                                            //\n    Ticker.insert(ticker);                                                  // 9\n                                                                            //\n    var test = Ticker.find({ test: \"test\" }).fetch();                       // 11\n                                                                            //\n    console.log(test);                                                      // 13\n                                                                            //\n    console.log(ticker);                                                    // 15\n});                                                                         // 16\n//////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/server/main.js"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,MAAT,QAAuB,eAAvB;;AAEA,OAAO,OAAP,CAAe,YAAM;;AAEjB,aAAS,IAAI,MAAM,UAAV,CAAqB,QAArB,CAAT;;AAEA,QAAI,SAAS,KAAK,KAAL,CAAW,OAAO,OAAP,CAAe,iBAAf,CAAX,CAAb;;AAEA,WAAO,MAAP,CAAc,MAAd;;AAEA,QAAI,OAAO,OAAO,IAAP,CAAY,EAAE,MAAM,MAAR,EAAZ,EAA8B,KAA9B,EAAX;;AAEA,YAAQ,GAAR,CAAY,IAAZ;;AAEA,YAAQ,GAAR,CAAY,MAAZ;AACH,CAbD,gF","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n    // code to run on server at startup\n    Ticker = new Mongo.Collection('ticker');\n\n    var ticker = JSON.parse(Assets.getText('tickerData.json'));\n    \n    Ticker.insert(ticker);\n\n    var test = Ticker.find({ test: \"test\" }).fetch();\n\n    console.log(test);\n    \n    console.log(ticker);\n});\n"]}}]
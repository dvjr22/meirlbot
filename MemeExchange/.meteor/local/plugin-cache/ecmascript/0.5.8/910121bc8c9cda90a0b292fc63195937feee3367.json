{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/bundle/programs/server/packages/html-tools.js","filenameRelative":"/bundle/programs/server/packages/html-tools.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/bundle/programs/server/packages/html-tools.js.map","sourceFileName":"/bundle/programs/server/packages/html-tools.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"html-tools"},"ignored":false,"code":"(function () {\n\n  /* Imports */\n  var Meteor = Package.meteor.Meteor;\n  var global = Package.meteor.global;\n  var meteorEnv = Package.meteor.meteorEnv;\n  var HTML = Package.htmljs.HTML;\n\n  /* Package-scope variables */\n  var HTMLTools, Scanner, makeRegexMatcher, getCharacterReference, getComment, getDoctype, getHTMLToken, getTagToken, TEMPLATE_TAG_POSITION, isLookingAtEndTag, codePointToString, getContent, getRCData;\n\n  (function () {\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //                                                                                                             //\n    // packages/html-tools/utils.js                                                                                //\n    //                                                                                                             //\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //\n\n    HTMLTools = {};\n    HTMLTools.Parse = {};\n\n    var asciiLowerCase = HTMLTools.asciiLowerCase = function (str) {\n      return str.replace(/[A-Z]/g, function (c) {\n        return String.fromCharCode(c.charCodeAt(0) + 32);\n      });\n    };\n\n    var svgCamelCaseAttributes = 'attributeName attributeType baseFrequency baseProfile calcMode clipPathUnits contentScriptType contentStyleType diffuseConstant edgeMode externalResourcesRequired filterRes filterUnits glyphRef glyphRef gradientTransform gradientTransform gradientUnits gradientUnits kernelMatrix kernelUnitLength kernelUnitLength kernelUnitLength keyPoints keySplines keyTimes lengthAdjust limitingConeAngle markerHeight markerUnits markerWidth maskContentUnits maskUnits numOctaves pathLength patternContentUnits patternTransform patternUnits pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits refX refY repeatCount repeatDur requiredExtensions requiredFeatures specularConstant specularExponent specularExponent spreadMethod spreadMethod startOffset stdDeviation stitchTiles surfaceScale surfaceScale systemLanguage tableValues targetX targetY textLength textLength viewBox viewTarget xChannelSelector yChannelSelector zoomAndPan'.split(' ');\n\n    var properAttributeCaseMap = function (map) {\n      for (var i = 0; i < svgCamelCaseAttributes.length; i++) {\n        var a = svgCamelCaseAttributes[i];\n        map[asciiLowerCase(a)] = a;\n      }\n      return map;\n    }({});\n\n    var properTagCaseMap = function (map) {\n      var knownElements = HTML.knownElementNames;\n      for (var i = 0; i < knownElements.length; i++) {\n        var a = knownElements[i];\n        map[asciiLowerCase(a)] = a;\n      }\n      return map;\n    }({});\n\n    // Take a tag name in any case and make it the proper case for HTML.\n    //\n    // Modern browsers let you embed SVG in HTML, but SVG elements are special\n    // in that they have a case-sensitive DOM API (nodeName, getAttribute,\n    // setAttribute).  For example, it has to be `setAttribute(\"viewBox\")`,\n    // not `\"viewbox\"`.  However, the browser's HTML parser is NOT case sensitive\n    // and will fix the case for you, so if you write `<svg viewbox=\"...\">`\n    // you actually get a `\"viewBox\"` attribute.  Any HTML-parsing toolchain\n    // must do the same.\n    HTMLTools.properCaseTagName = function (name) {\n      var lowered = asciiLowerCase(name);\n      return properTagCaseMap.hasOwnProperty(lowered) ? properTagCaseMap[lowered] : lowered;\n    };\n\n    // See docs for properCaseTagName.\n    HTMLTools.properCaseAttributeName = function (name) {\n      var lowered = asciiLowerCase(name);\n      return properAttributeCaseMap.hasOwnProperty(lowered) ? properAttributeCaseMap[lowered] : lowered;\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  }).call(this);\n\n  (function () {\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //                                                                                                             //\n    // packages/html-tools/scanner.js                                                                              //\n    //                                                                                                             //\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //\n    // This is a Scanner class suitable for any parser/lexer/tokenizer.\n    //\n    // A Scanner has an immutable source document (string) `input` and a current\n    // position `pos`, an index into the string, which can be set at will.\n    //\n    // * `new Scanner(input)` - constructs a Scanner with source string `input`\n    // * `scanner.rest()` - returns the rest of the input after `pos`\n    // * `scanner.peek()` - returns the character at `pos`\n    // * `scanner.isEOF()` - true if `pos` is at or beyond the end of `input`\n    // * `scanner.fatal(msg)` - throw an error indicating a problem at `pos`\n\n    Scanner = HTMLTools.Scanner = function (input) {\n      this.input = input; // public, read-only\n      this.pos = 0; // public, read-write\n    };\n\n    Scanner.prototype.rest = function () {\n      // Slicing a string is O(1) in modern JavaScript VMs (including old IE).\n      return this.input.slice(this.pos);\n    };\n\n    Scanner.prototype.isEOF = function () {\n      return this.pos >= this.input.length;\n    };\n\n    Scanner.prototype.fatal = function (msg) {\n      // despite this default, you should always provide a message!\n      msg = msg || \"Parse error\";\n\n      var CONTEXT_AMOUNT = 20;\n\n      var input = this.input;\n      var pos = this.pos;\n      var pastInput = input.substring(pos - CONTEXT_AMOUNT - 1, pos);\n      if (pastInput.length > CONTEXT_AMOUNT) pastInput = '...' + pastInput.substring(-CONTEXT_AMOUNT);\n\n      var upcomingInput = input.substring(pos, pos + CONTEXT_AMOUNT + 1);\n      if (upcomingInput.length > CONTEXT_AMOUNT) upcomingInput = upcomingInput.substring(0, CONTEXT_AMOUNT) + '...';\n\n      var positionDisplay = (pastInput + upcomingInput).replace(/\\n/g, ' ') + '\\n' + new Array(pastInput.length + 1).join(' ') + \"^\";\n\n      var e = new Error(msg + \"\\n\" + positionDisplay);\n\n      e.offset = pos;\n      var allPastInput = input.substring(0, pos);\n      e.line = 1 + (allPastInput.match(/\\n/g) || []).length;\n      e.col = 1 + pos - allPastInput.lastIndexOf('\\n');\n      e.scanner = this;\n\n      throw e;\n    };\n\n    // Peek at the next character.\n    //\n    // If `isEOF`, returns an empty string.\n    Scanner.prototype.peek = function () {\n      return this.input.charAt(this.pos);\n    };\n\n    // Constructs a `getFoo` function where `foo` is specified with a regex.\n    // The regex should start with `^`.  The constructed function will return\n    // match group 1, if it exists and matches a non-empty string, or else\n    // the entire matched string (or null if there is no match).\n    //\n    // A `getFoo` function tries to match and consume a foo.  If it succeeds,\n    // the current position of the scanner is advanced.  If it fails, the\n    // current position is not advanced and a falsy value (typically null)\n    // is returned.\n    makeRegexMatcher = function makeRegexMatcher(regex) {\n      return function (scanner) {\n        var match = regex.exec(scanner.rest());\n\n        if (!match) return null;\n\n        scanner.pos += match[0].length;\n        return match[1] || match[0];\n      };\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  }).call(this);\n\n  (function () {\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //                                                                                                             //\n    // packages/html-tools/charref.js                                                                              //\n    //                                                                                                             //\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //\n\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/entities.json\n\n    // Note that some entities don't have a final semicolon!  These are used to\n    // make `&lt` (for example) with no semicolon a parse error but `&abcde` not.\n\n    var ENTITIES = {\n      \"&Aacute;\": { \"codepoints\": [193], \"characters\": 'Á' },\n      \"&Aacute\": { \"codepoints\": [193], \"characters\": 'Á' },\n      \"&aacute;\": { \"codepoints\": [225], \"characters\": 'á' },\n      \"&aacute\": { \"codepoints\": [225], \"characters\": 'á' },\n      \"&Abreve;\": { \"codepoints\": [258], \"characters\": 'Ă' },\n      \"&abreve;\": { \"codepoints\": [259], \"characters\": 'ă' },\n      \"&ac;\": { \"codepoints\": [8766], \"characters\": '∾' },\n      \"&acd;\": { \"codepoints\": [8767], \"characters\": '∿' },\n      \"&acE;\": { \"codepoints\": [8766, 819], \"characters\": '∾̳' },\n      \"&Acirc;\": { \"codepoints\": [194], \"characters\": 'Â' },\n      \"&Acirc\": { \"codepoints\": [194], \"characters\": 'Â' },\n      \"&acirc;\": { \"codepoints\": [226], \"characters\": 'â' },\n      \"&acirc\": { \"codepoints\": [226], \"characters\": 'â' },\n      \"&acute;\": { \"codepoints\": [180], \"characters\": '´' },\n      \"&acute\": { \"codepoints\": [180], \"characters\": '´' },\n      \"&Acy;\": { \"codepoints\": [1040], \"characters\": 'А' },\n      \"&acy;\": { \"codepoints\": [1072], \"characters\": 'а' },\n      \"&AElig;\": { \"codepoints\": [198], \"characters\": 'Æ' },\n      \"&AElig\": { \"codepoints\": [198], \"characters\": 'Æ' },\n      \"&aelig;\": { \"codepoints\": [230], \"characters\": 'æ' },\n      \"&aelig\": { \"codepoints\": [230], \"characters\": 'æ' },\n      \"&af;\": { \"codepoints\": [8289], \"characters\": '⁡' },\n      \"&Afr;\": { \"codepoints\": [120068], \"characters\": '𝔄' },\n      \"&afr;\": { \"codepoints\": [120094], \"characters\": '𝔞' },\n      \"&Agrave;\": { \"codepoints\": [192], \"characters\": 'À' },\n      \"&Agrave\": { \"codepoints\": [192], \"characters\": 'À' },\n      \"&agrave;\": { \"codepoints\": [224], \"characters\": 'à' },\n      \"&agrave\": { \"codepoints\": [224], \"characters\": 'à' },\n      \"&alefsym;\": { \"codepoints\": [8501], \"characters\": 'ℵ' },\n      \"&aleph;\": { \"codepoints\": [8501], \"characters\": 'ℵ' },\n      \"&Alpha;\": { \"codepoints\": [913], \"characters\": 'Α' },\n      \"&alpha;\": { \"codepoints\": [945], \"characters\": 'α' },\n      \"&Amacr;\": { \"codepoints\": [256], \"characters\": 'Ā' },\n      \"&amacr;\": { \"codepoints\": [257], \"characters\": 'ā' },\n      \"&amalg;\": { \"codepoints\": [10815], \"characters\": '⨿' },\n      \"&amp;\": { \"codepoints\": [38], \"characters\": '&' },\n      \"&amp\": { \"codepoints\": [38], \"characters\": '&' },\n      \"&AMP;\": { \"codepoints\": [38], \"characters\": '&' },\n      \"&AMP\": { \"codepoints\": [38], \"characters\": '&' },\n      \"&andand;\": { \"codepoints\": [10837], \"characters\": '⩕' },\n      \"&And;\": { \"codepoints\": [10835], \"characters\": '⩓' },\n      \"&and;\": { \"codepoints\": [8743], \"characters\": '∧' },\n      \"&andd;\": { \"codepoints\": [10844], \"characters\": '⩜' },\n      \"&andslope;\": { \"codepoints\": [10840], \"characters\": '⩘' },\n      \"&andv;\": { \"codepoints\": [10842], \"characters\": '⩚' },\n      \"&ang;\": { \"codepoints\": [8736], \"characters\": '∠' },\n      \"&ange;\": { \"codepoints\": [10660], \"characters\": '⦤' },\n      \"&angle;\": { \"codepoints\": [8736], \"characters\": '∠' },\n      \"&angmsdaa;\": { \"codepoints\": [10664], \"characters\": '⦨' },\n      \"&angmsdab;\": { \"codepoints\": [10665], \"characters\": '⦩' },\n      \"&angmsdac;\": { \"codepoints\": [10666], \"characters\": '⦪' },\n      \"&angmsdad;\": { \"codepoints\": [10667], \"characters\": '⦫' },\n      \"&angmsdae;\": { \"codepoints\": [10668], \"characters\": '⦬' },\n      \"&angmsdaf;\": { \"codepoints\": [10669], \"characters\": '⦭' },\n      \"&angmsdag;\": { \"codepoints\": [10670], \"characters\": '⦮' },\n      \"&angmsdah;\": { \"codepoints\": [10671], \"characters\": '⦯' },\n      \"&angmsd;\": { \"codepoints\": [8737], \"characters\": '∡' },\n      \"&angrt;\": { \"codepoints\": [8735], \"characters\": '∟' },\n      \"&angrtvb;\": { \"codepoints\": [8894], \"characters\": '⊾' },\n      \"&angrtvbd;\": { \"codepoints\": [10653], \"characters\": '⦝' },\n      \"&angsph;\": { \"codepoints\": [8738], \"characters\": '∢' },\n      \"&angst;\": { \"codepoints\": [197], \"characters\": 'Å' },\n      \"&angzarr;\": { \"codepoints\": [9084], \"characters\": '⍼' },\n      \"&Aogon;\": { \"codepoints\": [260], \"characters\": 'Ą' },\n      \"&aogon;\": { \"codepoints\": [261], \"characters\": 'ą' },\n      \"&Aopf;\": { \"codepoints\": [120120], \"characters\": '𝔸' },\n      \"&aopf;\": { \"codepoints\": [120146], \"characters\": '𝕒' },\n      \"&apacir;\": { \"codepoints\": [10863], \"characters\": '⩯' },\n      \"&ap;\": { \"codepoints\": [8776], \"characters\": '≈' },\n      \"&apE;\": { \"codepoints\": [10864], \"characters\": '⩰' },\n      \"&ape;\": { \"codepoints\": [8778], \"characters\": '≊' },\n      \"&apid;\": { \"codepoints\": [8779], \"characters\": '≋' },\n      \"&apos;\": { \"codepoints\": [39], \"characters\": '\\'' },\n      \"&ApplyFunction;\": { \"codepoints\": [8289], \"characters\": '⁡' },\n      \"&approx;\": { \"codepoints\": [8776], \"characters\": '≈' },\n      \"&approxeq;\": { \"codepoints\": [8778], \"characters\": '≊' },\n      \"&Aring;\": { \"codepoints\": [197], \"characters\": 'Å' },\n      \"&Aring\": { \"codepoints\": [197], \"characters\": 'Å' },\n      \"&aring;\": { \"codepoints\": [229], \"characters\": 'å' },\n      \"&aring\": { \"codepoints\": [229], \"characters\": 'å' },\n      \"&Ascr;\": { \"codepoints\": [119964], \"characters\": '𝒜' },\n      \"&ascr;\": { \"codepoints\": [119990], \"characters\": '𝒶' },\n      \"&Assign;\": { \"codepoints\": [8788], \"characters\": '≔' },\n      \"&ast;\": { \"codepoints\": [42], \"characters\": '*' },\n      \"&asymp;\": { \"codepoints\": [8776], \"characters\": '≈' },\n      \"&asympeq;\": { \"codepoints\": [8781], \"characters\": '≍' },\n      \"&Atilde;\": { \"codepoints\": [195], \"characters\": 'Ã' },\n      \"&Atilde\": { \"codepoints\": [195], \"characters\": 'Ã' },\n      \"&atilde;\": { \"codepoints\": [227], \"characters\": 'ã' },\n      \"&atilde\": { \"codepoints\": [227], \"characters\": 'ã' },\n      \"&Auml;\": { \"codepoints\": [196], \"characters\": 'Ä' },\n      \"&Auml\": { \"codepoints\": [196], \"characters\": 'Ä' },\n      \"&auml;\": { \"codepoints\": [228], \"characters\": 'ä' },\n      \"&auml\": { \"codepoints\": [228], \"characters\": 'ä' },\n      \"&awconint;\": { \"codepoints\": [8755], \"characters\": '∳' },\n      \"&awint;\": { \"codepoints\": [10769], \"characters\": '⨑' },\n      \"&backcong;\": { \"codepoints\": [8780], \"characters\": '≌' },\n      \"&backepsilon;\": { \"codepoints\": [1014], \"characters\": '϶' },\n      \"&backprime;\": { \"codepoints\": [8245], \"characters\": '‵' },\n      \"&backsim;\": { \"codepoints\": [8765], \"characters\": '∽' },\n      \"&backsimeq;\": { \"codepoints\": [8909], \"characters\": '⋍' },\n      \"&Backslash;\": { \"codepoints\": [8726], \"characters\": '∖' },\n      \"&Barv;\": { \"codepoints\": [10983], \"characters\": '⫧' },\n      \"&barvee;\": { \"codepoints\": [8893], \"characters\": '⊽' },\n      \"&barwed;\": { \"codepoints\": [8965], \"characters\": '⌅' },\n      \"&Barwed;\": { \"codepoints\": [8966], \"characters\": '⌆' },\n      \"&barwedge;\": { \"codepoints\": [8965], \"characters\": '⌅' },\n      \"&bbrk;\": { \"codepoints\": [9141], \"characters\": '⎵' },\n      \"&bbrktbrk;\": { \"codepoints\": [9142], \"characters\": '⎶' },\n      \"&bcong;\": { \"codepoints\": [8780], \"characters\": '≌' },\n      \"&Bcy;\": { \"codepoints\": [1041], \"characters\": 'Б' },\n      \"&bcy;\": { \"codepoints\": [1073], \"characters\": 'б' },\n      \"&bdquo;\": { \"codepoints\": [8222], \"characters\": '„' },\n      \"&becaus;\": { \"codepoints\": [8757], \"characters\": '∵' },\n      \"&because;\": { \"codepoints\": [8757], \"characters\": '∵' },\n      \"&Because;\": { \"codepoints\": [8757], \"characters\": '∵' },\n      \"&bemptyv;\": { \"codepoints\": [10672], \"characters\": '⦰' },\n      \"&bepsi;\": { \"codepoints\": [1014], \"characters\": '϶' },\n      \"&bernou;\": { \"codepoints\": [8492], \"characters\": 'ℬ' },\n      \"&Bernoullis;\": { \"codepoints\": [8492], \"characters\": 'ℬ' },\n      \"&Beta;\": { \"codepoints\": [914], \"characters\": 'Β' },\n      \"&beta;\": { \"codepoints\": [946], \"characters\": 'β' },\n      \"&beth;\": { \"codepoints\": [8502], \"characters\": 'ℶ' },\n      \"&between;\": { \"codepoints\": [8812], \"characters\": '≬' },\n      \"&Bfr;\": { \"codepoints\": [120069], \"characters\": '𝔅' },\n      \"&bfr;\": { \"codepoints\": [120095], \"characters\": '𝔟' },\n      \"&bigcap;\": { \"codepoints\": [8898], \"characters\": '⋂' },\n      \"&bigcirc;\": { \"codepoints\": [9711], \"characters\": '◯' },\n      \"&bigcup;\": { \"codepoints\": [8899], \"characters\": '⋃' },\n      \"&bigodot;\": { \"codepoints\": [10752], \"characters\": '⨀' },\n      \"&bigoplus;\": { \"codepoints\": [10753], \"characters\": '⨁' },\n      \"&bigotimes;\": { \"codepoints\": [10754], \"characters\": '⨂' },\n      \"&bigsqcup;\": { \"codepoints\": [10758], \"characters\": '⨆' },\n      \"&bigstar;\": { \"codepoints\": [9733], \"characters\": '★' },\n      \"&bigtriangledown;\": { \"codepoints\": [9661], \"characters\": '▽' },\n      \"&bigtriangleup;\": { \"codepoints\": [9651], \"characters\": '△' },\n      \"&biguplus;\": { \"codepoints\": [10756], \"characters\": '⨄' },\n      \"&bigvee;\": { \"codepoints\": [8897], \"characters\": '⋁' },\n      \"&bigwedge;\": { \"codepoints\": [8896], \"characters\": '⋀' },\n      \"&bkarow;\": { \"codepoints\": [10509], \"characters\": '⤍' },\n      \"&blacklozenge;\": { \"codepoints\": [10731], \"characters\": '⧫' },\n      \"&blacksquare;\": { \"codepoints\": [9642], \"characters\": '▪' },\n      \"&blacktriangle;\": { \"codepoints\": [9652], \"characters\": '▴' },\n      \"&blacktriangledown;\": { \"codepoints\": [9662], \"characters\": '▾' },\n      \"&blacktriangleleft;\": { \"codepoints\": [9666], \"characters\": '◂' },\n      \"&blacktriangleright;\": { \"codepoints\": [9656], \"characters\": '▸' },\n      \"&blank;\": { \"codepoints\": [9251], \"characters\": '␣' },\n      \"&blk12;\": { \"codepoints\": [9618], \"characters\": '▒' },\n      \"&blk14;\": { \"codepoints\": [9617], \"characters\": '░' },\n      \"&blk34;\": { \"codepoints\": [9619], \"characters\": '▓' },\n      \"&block;\": { \"codepoints\": [9608], \"characters\": '█' },\n      \"&bne;\": { \"codepoints\": [61, 8421], \"characters\": '=⃥' },\n      \"&bnequiv;\": { \"codepoints\": [8801, 8421], \"characters\": '≡⃥' },\n      \"&bNot;\": { \"codepoints\": [10989], \"characters\": '⫭' },\n      \"&bnot;\": { \"codepoints\": [8976], \"characters\": '⌐' },\n      \"&Bopf;\": { \"codepoints\": [120121], \"characters\": '𝔹' },\n      \"&bopf;\": { \"codepoints\": [120147], \"characters\": '𝕓' },\n      \"&bot;\": { \"codepoints\": [8869], \"characters\": '⊥' },\n      \"&bottom;\": { \"codepoints\": [8869], \"characters\": '⊥' },\n      \"&bowtie;\": { \"codepoints\": [8904], \"characters\": '⋈' },\n      \"&boxbox;\": { \"codepoints\": [10697], \"characters\": '⧉' },\n      \"&boxdl;\": { \"codepoints\": [9488], \"characters\": '┐' },\n      \"&boxdL;\": { \"codepoints\": [9557], \"characters\": '╕' },\n      \"&boxDl;\": { \"codepoints\": [9558], \"characters\": '╖' },\n      \"&boxDL;\": { \"codepoints\": [9559], \"characters\": '╗' },\n      \"&boxdr;\": { \"codepoints\": [9484], \"characters\": '┌' },\n      \"&boxdR;\": { \"codepoints\": [9554], \"characters\": '╒' },\n      \"&boxDr;\": { \"codepoints\": [9555], \"characters\": '╓' },\n      \"&boxDR;\": { \"codepoints\": [9556], \"characters\": '╔' },\n      \"&boxh;\": { \"codepoints\": [9472], \"characters\": '─' },\n      \"&boxH;\": { \"codepoints\": [9552], \"characters\": '═' },\n      \"&boxhd;\": { \"codepoints\": [9516], \"characters\": '┬' },\n      \"&boxHd;\": { \"codepoints\": [9572], \"characters\": '╤' },\n      \"&boxhD;\": { \"codepoints\": [9573], \"characters\": '╥' },\n      \"&boxHD;\": { \"codepoints\": [9574], \"characters\": '╦' },\n      \"&boxhu;\": { \"codepoints\": [9524], \"characters\": '┴' },\n      \"&boxHu;\": { \"codepoints\": [9575], \"characters\": '╧' },\n      \"&boxhU;\": { \"codepoints\": [9576], \"characters\": '╨' },\n      \"&boxHU;\": { \"codepoints\": [9577], \"characters\": '╩' },\n      \"&boxminus;\": { \"codepoints\": [8863], \"characters\": '⊟' },\n      \"&boxplus;\": { \"codepoints\": [8862], \"characters\": '⊞' },\n      \"&boxtimes;\": { \"codepoints\": [8864], \"characters\": '⊠' },\n      \"&boxul;\": { \"codepoints\": [9496], \"characters\": '┘' },\n      \"&boxuL;\": { \"codepoints\": [9563], \"characters\": '╛' },\n      \"&boxUl;\": { \"codepoints\": [9564], \"characters\": '╜' },\n      \"&boxUL;\": { \"codepoints\": [9565], \"characters\": '╝' },\n      \"&boxur;\": { \"codepoints\": [9492], \"characters\": '└' },\n      \"&boxuR;\": { \"codepoints\": [9560], \"characters\": '╘' },\n      \"&boxUr;\": { \"codepoints\": [9561], \"characters\": '╙' },\n      \"&boxUR;\": { \"codepoints\": [9562], \"characters\": '╚' },\n      \"&boxv;\": { \"codepoints\": [9474], \"characters\": '│' },\n      \"&boxV;\": { \"codepoints\": [9553], \"characters\": '║' },\n      \"&boxvh;\": { \"codepoints\": [9532], \"characters\": '┼' },\n      \"&boxvH;\": { \"codepoints\": [9578], \"characters\": '╪' },\n      \"&boxVh;\": { \"codepoints\": [9579], \"characters\": '╫' },\n      \"&boxVH;\": { \"codepoints\": [9580], \"characters\": '╬' },\n      \"&boxvl;\": { \"codepoints\": [9508], \"characters\": '┤' },\n      \"&boxvL;\": { \"codepoints\": [9569], \"characters\": '╡' },\n      \"&boxVl;\": { \"codepoints\": [9570], \"characters\": '╢' },\n      \"&boxVL;\": { \"codepoints\": [9571], \"characters\": '╣' },\n      \"&boxvr;\": { \"codepoints\": [9500], \"characters\": '├' },\n      \"&boxvR;\": { \"codepoints\": [9566], \"characters\": '╞' },\n      \"&boxVr;\": { \"codepoints\": [9567], \"characters\": '╟' },\n      \"&boxVR;\": { \"codepoints\": [9568], \"characters\": '╠' },\n      \"&bprime;\": { \"codepoints\": [8245], \"characters\": '‵' },\n      \"&breve;\": { \"codepoints\": [728], \"characters\": '˘' },\n      \"&Breve;\": { \"codepoints\": [728], \"characters\": '˘' },\n      \"&brvbar;\": { \"codepoints\": [166], \"characters\": '¦' },\n      \"&brvbar\": { \"codepoints\": [166], \"characters\": '¦' },\n      \"&bscr;\": { \"codepoints\": [119991], \"characters\": '𝒷' },\n      \"&Bscr;\": { \"codepoints\": [8492], \"characters\": 'ℬ' },\n      \"&bsemi;\": { \"codepoints\": [8271], \"characters\": '⁏' },\n      \"&bsim;\": { \"codepoints\": [8765], \"characters\": '∽' },\n      \"&bsime;\": { \"codepoints\": [8909], \"characters\": '⋍' },\n      \"&bsolb;\": { \"codepoints\": [10693], \"characters\": '⧅' },\n      \"&bsol;\": { \"codepoints\": [92], \"characters\": '\\\\' },\n      \"&bsolhsub;\": { \"codepoints\": [10184], \"characters\": '⟈' },\n      \"&bull;\": { \"codepoints\": [8226], \"characters\": '•' },\n      \"&bullet;\": { \"codepoints\": [8226], \"characters\": '•' },\n      \"&bump;\": { \"codepoints\": [8782], \"characters\": '≎' },\n      \"&bumpE;\": { \"codepoints\": [10926], \"characters\": '⪮' },\n      \"&bumpe;\": { \"codepoints\": [8783], \"characters\": '≏' },\n      \"&Bumpeq;\": { \"codepoints\": [8782], \"characters\": '≎' },\n      \"&bumpeq;\": { \"codepoints\": [8783], \"characters\": '≏' },\n      \"&Cacute;\": { \"codepoints\": [262], \"characters\": 'Ć' },\n      \"&cacute;\": { \"codepoints\": [263], \"characters\": 'ć' },\n      \"&capand;\": { \"codepoints\": [10820], \"characters\": '⩄' },\n      \"&capbrcup;\": { \"codepoints\": [10825], \"characters\": '⩉' },\n      \"&capcap;\": { \"codepoints\": [10827], \"characters\": '⩋' },\n      \"&cap;\": { \"codepoints\": [8745], \"characters\": '∩' },\n      \"&Cap;\": { \"codepoints\": [8914], \"characters\": '⋒' },\n      \"&capcup;\": { \"codepoints\": [10823], \"characters\": '⩇' },\n      \"&capdot;\": { \"codepoints\": [10816], \"characters\": '⩀' },\n      \"&CapitalDifferentialD;\": { \"codepoints\": [8517], \"characters\": 'ⅅ' },\n      \"&caps;\": { \"codepoints\": [8745, 65024], \"characters\": '∩︀' },\n      \"&caret;\": { \"codepoints\": [8257], \"characters\": '⁁' },\n      \"&caron;\": { \"codepoints\": [711], \"characters\": 'ˇ' },\n      \"&Cayleys;\": { \"codepoints\": [8493], \"characters\": 'ℭ' },\n      \"&ccaps;\": { \"codepoints\": [10829], \"characters\": '⩍' },\n      \"&Ccaron;\": { \"codepoints\": [268], \"characters\": 'Č' },\n      \"&ccaron;\": { \"codepoints\": [269], \"characters\": 'č' },\n      \"&Ccedil;\": { \"codepoints\": [199], \"characters\": 'Ç' },\n      \"&Ccedil\": { \"codepoints\": [199], \"characters\": 'Ç' },\n      \"&ccedil;\": { \"codepoints\": [231], \"characters\": 'ç' },\n      \"&ccedil\": { \"codepoints\": [231], \"characters\": 'ç' },\n      \"&Ccirc;\": { \"codepoints\": [264], \"characters\": 'Ĉ' },\n      \"&ccirc;\": { \"codepoints\": [265], \"characters\": 'ĉ' },\n      \"&Cconint;\": { \"codepoints\": [8752], \"characters\": '∰' },\n      \"&ccups;\": { \"codepoints\": [10828], \"characters\": '⩌' },\n      \"&ccupssm;\": { \"codepoints\": [10832], \"characters\": '⩐' },\n      \"&Cdot;\": { \"codepoints\": [266], \"characters\": 'Ċ' },\n      \"&cdot;\": { \"codepoints\": [267], \"characters\": 'ċ' },\n      \"&cedil;\": { \"codepoints\": [184], \"characters\": '¸' },\n      \"&cedil\": { \"codepoints\": [184], \"characters\": '¸' },\n      \"&Cedilla;\": { \"codepoints\": [184], \"characters\": '¸' },\n      \"&cemptyv;\": { \"codepoints\": [10674], \"characters\": '⦲' },\n      \"&cent;\": { \"codepoints\": [162], \"characters\": '¢' },\n      \"&cent\": { \"codepoints\": [162], \"characters\": '¢' },\n      \"&centerdot;\": { \"codepoints\": [183], \"characters\": '·' },\n      \"&CenterDot;\": { \"codepoints\": [183], \"characters\": '·' },\n      \"&cfr;\": { \"codepoints\": [120096], \"characters\": '𝔠' },\n      \"&Cfr;\": { \"codepoints\": [8493], \"characters\": 'ℭ' },\n      \"&CHcy;\": { \"codepoints\": [1063], \"characters\": 'Ч' },\n      \"&chcy;\": { \"codepoints\": [1095], \"characters\": 'ч' },\n      \"&check;\": { \"codepoints\": [10003], \"characters\": '✓' },\n      \"&checkmark;\": { \"codepoints\": [10003], \"characters\": '✓' },\n      \"&Chi;\": { \"codepoints\": [935], \"characters\": 'Χ' },\n      \"&chi;\": { \"codepoints\": [967], \"characters\": 'χ' },\n      \"&circ;\": { \"codepoints\": [710], \"characters\": 'ˆ' },\n      \"&circeq;\": { \"codepoints\": [8791], \"characters\": '≗' },\n      \"&circlearrowleft;\": { \"codepoints\": [8634], \"characters\": '↺' },\n      \"&circlearrowright;\": { \"codepoints\": [8635], \"characters\": '↻' },\n      \"&circledast;\": { \"codepoints\": [8859], \"characters\": '⊛' },\n      \"&circledcirc;\": { \"codepoints\": [8858], \"characters\": '⊚' },\n      \"&circleddash;\": { \"codepoints\": [8861], \"characters\": '⊝' },\n      \"&CircleDot;\": { \"codepoints\": [8857], \"characters\": '⊙' },\n      \"&circledR;\": { \"codepoints\": [174], \"characters\": '®' },\n      \"&circledS;\": { \"codepoints\": [9416], \"characters\": 'Ⓢ' },\n      \"&CircleMinus;\": { \"codepoints\": [8854], \"characters\": '⊖' },\n      \"&CirclePlus;\": { \"codepoints\": [8853], \"characters\": '⊕' },\n      \"&CircleTimes;\": { \"codepoints\": [8855], \"characters\": '⊗' },\n      \"&cir;\": { \"codepoints\": [9675], \"characters\": '○' },\n      \"&cirE;\": { \"codepoints\": [10691], \"characters\": '⧃' },\n      \"&cire;\": { \"codepoints\": [8791], \"characters\": '≗' },\n      \"&cirfnint;\": { \"codepoints\": [10768], \"characters\": '⨐' },\n      \"&cirmid;\": { \"codepoints\": [10991], \"characters\": '⫯' },\n      \"&cirscir;\": { \"codepoints\": [10690], \"characters\": '⧂' },\n      \"&ClockwiseContourIntegral;\": { \"codepoints\": [8754], \"characters\": '∲' },\n      \"&CloseCurlyDoubleQuote;\": { \"codepoints\": [8221], \"characters\": '”' },\n      \"&CloseCurlyQuote;\": { \"codepoints\": [8217], \"characters\": '’' },\n      \"&clubs;\": { \"codepoints\": [9827], \"characters\": '♣' },\n      \"&clubsuit;\": { \"codepoints\": [9827], \"characters\": '♣' },\n      \"&colon;\": { \"codepoints\": [58], \"characters\": ':' },\n      \"&Colon;\": { \"codepoints\": [8759], \"characters\": '∷' },\n      \"&Colone;\": { \"codepoints\": [10868], \"characters\": '⩴' },\n      \"&colone;\": { \"codepoints\": [8788], \"characters\": '≔' },\n      \"&coloneq;\": { \"codepoints\": [8788], \"characters\": '≔' },\n      \"&comma;\": { \"codepoints\": [44], \"characters\": ',' },\n      \"&commat;\": { \"codepoints\": [64], \"characters\": '@' },\n      \"&comp;\": { \"codepoints\": [8705], \"characters\": '∁' },\n      \"&compfn;\": { \"codepoints\": [8728], \"characters\": '∘' },\n      \"&complement;\": { \"codepoints\": [8705], \"characters\": '∁' },\n      \"&complexes;\": { \"codepoints\": [8450], \"characters\": 'ℂ' },\n      \"&cong;\": { \"codepoints\": [8773], \"characters\": '≅' },\n      \"&congdot;\": { \"codepoints\": [10861], \"characters\": '⩭' },\n      \"&Congruent;\": { \"codepoints\": [8801], \"characters\": '≡' },\n      \"&conint;\": { \"codepoints\": [8750], \"characters\": '∮' },\n      \"&Conint;\": { \"codepoints\": [8751], \"characters\": '∯' },\n      \"&ContourIntegral;\": { \"codepoints\": [8750], \"characters\": '∮' },\n      \"&copf;\": { \"codepoints\": [120148], \"characters\": '𝕔' },\n      \"&Copf;\": { \"codepoints\": [8450], \"characters\": 'ℂ' },\n      \"&coprod;\": { \"codepoints\": [8720], \"characters\": '∐' },\n      \"&Coproduct;\": { \"codepoints\": [8720], \"characters\": '∐' },\n      \"&copy;\": { \"codepoints\": [169], \"characters\": '©' },\n      \"&copy\": { \"codepoints\": [169], \"characters\": '©' },\n      \"&COPY;\": { \"codepoints\": [169], \"characters\": '©' },\n      \"&COPY\": { \"codepoints\": [169], \"characters\": '©' },\n      \"&copysr;\": { \"codepoints\": [8471], \"characters\": '℗' },\n      \"&CounterClockwiseContourIntegral;\": { \"codepoints\": [8755], \"characters\": '∳' },\n      \"&crarr;\": { \"codepoints\": [8629], \"characters\": '↵' },\n      \"&cross;\": { \"codepoints\": [10007], \"characters\": '✗' },\n      \"&Cross;\": { \"codepoints\": [10799], \"characters\": '⨯' },\n      \"&Cscr;\": { \"codepoints\": [119966], \"characters\": '𝒞' },\n      \"&cscr;\": { \"codepoints\": [119992], \"characters\": '𝒸' },\n      \"&csub;\": { \"codepoints\": [10959], \"characters\": '⫏' },\n      \"&csube;\": { \"codepoints\": [10961], \"characters\": '⫑' },\n      \"&csup;\": { \"codepoints\": [10960], \"characters\": '⫐' },\n      \"&csupe;\": { \"codepoints\": [10962], \"characters\": '⫒' },\n      \"&ctdot;\": { \"codepoints\": [8943], \"characters\": '⋯' },\n      \"&cudarrl;\": { \"codepoints\": [10552], \"characters\": '⤸' },\n      \"&cudarrr;\": { \"codepoints\": [10549], \"characters\": '⤵' },\n      \"&cuepr;\": { \"codepoints\": [8926], \"characters\": '⋞' },\n      \"&cuesc;\": { \"codepoints\": [8927], \"characters\": '⋟' },\n      \"&cularr;\": { \"codepoints\": [8630], \"characters\": '↶' },\n      \"&cularrp;\": { \"codepoints\": [10557], \"characters\": '⤽' },\n      \"&cupbrcap;\": { \"codepoints\": [10824], \"characters\": '⩈' },\n      \"&cupcap;\": { \"codepoints\": [10822], \"characters\": '⩆' },\n      \"&CupCap;\": { \"codepoints\": [8781], \"characters\": '≍' },\n      \"&cup;\": { \"codepoints\": [8746], \"characters\": '∪' },\n      \"&Cup;\": { \"codepoints\": [8915], \"characters\": '⋓' },\n      \"&cupcup;\": { \"codepoints\": [10826], \"characters\": '⩊' },\n      \"&cupdot;\": { \"codepoints\": [8845], \"characters\": '⊍' },\n      \"&cupor;\": { \"codepoints\": [10821], \"characters\": '⩅' },\n      \"&cups;\": { \"codepoints\": [8746, 65024], \"characters\": '∪︀' },\n      \"&curarr;\": { \"codepoints\": [8631], \"characters\": '↷' },\n      \"&curarrm;\": { \"codepoints\": [10556], \"characters\": '⤼' },\n      \"&curlyeqprec;\": { \"codepoints\": [8926], \"characters\": '⋞' },\n      \"&curlyeqsucc;\": { \"codepoints\": [8927], \"characters\": '⋟' },\n      \"&curlyvee;\": { \"codepoints\": [8910], \"characters\": '⋎' },\n      \"&curlywedge;\": { \"codepoints\": [8911], \"characters\": '⋏' },\n      \"&curren;\": { \"codepoints\": [164], \"characters\": '¤' },\n      \"&curren\": { \"codepoints\": [164], \"characters\": '¤' },\n      \"&curvearrowleft;\": { \"codepoints\": [8630], \"characters\": '↶' },\n      \"&curvearrowright;\": { \"codepoints\": [8631], \"characters\": '↷' },\n      \"&cuvee;\": { \"codepoints\": [8910], \"characters\": '⋎' },\n      \"&cuwed;\": { \"codepoints\": [8911], \"characters\": '⋏' },\n      \"&cwconint;\": { \"codepoints\": [8754], \"characters\": '∲' },\n      \"&cwint;\": { \"codepoints\": [8753], \"characters\": '∱' },\n      \"&cylcty;\": { \"codepoints\": [9005], \"characters\": '⌭' },\n      \"&dagger;\": { \"codepoints\": [8224], \"characters\": '†' },\n      \"&Dagger;\": { \"codepoints\": [8225], \"characters\": '‡' },\n      \"&daleth;\": { \"codepoints\": [8504], \"characters\": 'ℸ' },\n      \"&darr;\": { \"codepoints\": [8595], \"characters\": '↓' },\n      \"&Darr;\": { \"codepoints\": [8609], \"characters\": '↡' },\n      \"&dArr;\": { \"codepoints\": [8659], \"characters\": '⇓' },\n      \"&dash;\": { \"codepoints\": [8208], \"characters\": '‐' },\n      \"&Dashv;\": { \"codepoints\": [10980], \"characters\": '⫤' },\n      \"&dashv;\": { \"codepoints\": [8867], \"characters\": '⊣' },\n      \"&dbkarow;\": { \"codepoints\": [10511], \"characters\": '⤏' },\n      \"&dblac;\": { \"codepoints\": [733], \"characters\": '˝' },\n      \"&Dcaron;\": { \"codepoints\": [270], \"characters\": 'Ď' },\n      \"&dcaron;\": { \"codepoints\": [271], \"characters\": 'ď' },\n      \"&Dcy;\": { \"codepoints\": [1044], \"characters\": 'Д' },\n      \"&dcy;\": { \"codepoints\": [1076], \"characters\": 'д' },\n      \"&ddagger;\": { \"codepoints\": [8225], \"characters\": '‡' },\n      \"&ddarr;\": { \"codepoints\": [8650], \"characters\": '⇊' },\n      \"&DD;\": { \"codepoints\": [8517], \"characters\": 'ⅅ' },\n      \"&dd;\": { \"codepoints\": [8518], \"characters\": 'ⅆ' },\n      \"&DDotrahd;\": { \"codepoints\": [10513], \"characters\": '⤑' },\n      \"&ddotseq;\": { \"codepoints\": [10871], \"characters\": '⩷' },\n      \"&deg;\": { \"codepoints\": [176], \"characters\": '°' },\n      \"&deg\": { \"codepoints\": [176], \"characters\": '°' },\n      \"&Del;\": { \"codepoints\": [8711], \"characters\": '∇' },\n      \"&Delta;\": { \"codepoints\": [916], \"characters\": 'Δ' },\n      \"&delta;\": { \"codepoints\": [948], \"characters\": 'δ' },\n      \"&demptyv;\": { \"codepoints\": [10673], \"characters\": '⦱' },\n      \"&dfisht;\": { \"codepoints\": [10623], \"characters\": '⥿' },\n      \"&Dfr;\": { \"codepoints\": [120071], \"characters\": '𝔇' },\n      \"&dfr;\": { \"codepoints\": [120097], \"characters\": '𝔡' },\n      \"&dHar;\": { \"codepoints\": [10597], \"characters\": '⥥' },\n      \"&dharl;\": { \"codepoints\": [8643], \"characters\": '⇃' },\n      \"&dharr;\": { \"codepoints\": [8642], \"characters\": '⇂' },\n      \"&DiacriticalAcute;\": { \"codepoints\": [180], \"characters\": '´' },\n      \"&DiacriticalDot;\": { \"codepoints\": [729], \"characters\": '˙' },\n      \"&DiacriticalDoubleAcute;\": { \"codepoints\": [733], \"characters\": '˝' },\n      \"&DiacriticalGrave;\": { \"codepoints\": [96], \"characters\": '`' },\n      \"&DiacriticalTilde;\": { \"codepoints\": [732], \"characters\": '˜' },\n      \"&diam;\": { \"codepoints\": [8900], \"characters\": '⋄' },\n      \"&diamond;\": { \"codepoints\": [8900], \"characters\": '⋄' },\n      \"&Diamond;\": { \"codepoints\": [8900], \"characters\": '⋄' },\n      \"&diamondsuit;\": { \"codepoints\": [9830], \"characters\": '♦' },\n      \"&diams;\": { \"codepoints\": [9830], \"characters\": '♦' },\n      \"&die;\": { \"codepoints\": [168], \"characters\": '¨' },\n      \"&DifferentialD;\": { \"codepoints\": [8518], \"characters\": 'ⅆ' },\n      \"&digamma;\": { \"codepoints\": [989], \"characters\": 'ϝ' },\n      \"&disin;\": { \"codepoints\": [8946], \"characters\": '⋲' },\n      \"&div;\": { \"codepoints\": [247], \"characters\": '÷' },\n      \"&divide;\": { \"codepoints\": [247], \"characters\": '÷' },\n      \"&divide\": { \"codepoints\": [247], \"characters\": '÷' },\n      \"&divideontimes;\": { \"codepoints\": [8903], \"characters\": '⋇' },\n      \"&divonx;\": { \"codepoints\": [8903], \"characters\": '⋇' },\n      \"&DJcy;\": { \"codepoints\": [1026], \"characters\": 'Ђ' },\n      \"&djcy;\": { \"codepoints\": [1106], \"characters\": 'ђ' },\n      \"&dlcorn;\": { \"codepoints\": [8990], \"characters\": '⌞' },\n      \"&dlcrop;\": { \"codepoints\": [8973], \"characters\": '⌍' },\n      \"&dollar;\": { \"codepoints\": [36], \"characters\": '$' },\n      \"&Dopf;\": { \"codepoints\": [120123], \"characters\": '𝔻' },\n      \"&dopf;\": { \"codepoints\": [120149], \"characters\": '𝕕' },\n      \"&Dot;\": { \"codepoints\": [168], \"characters\": '¨' },\n      \"&dot;\": { \"codepoints\": [729], \"characters\": '˙' },\n      \"&DotDot;\": { \"codepoints\": [8412], \"characters\": '⃜' },\n      \"&doteq;\": { \"codepoints\": [8784], \"characters\": '≐' },\n      \"&doteqdot;\": { \"codepoints\": [8785], \"characters\": '≑' },\n      \"&DotEqual;\": { \"codepoints\": [8784], \"characters\": '≐' },\n      \"&dotminus;\": { \"codepoints\": [8760], \"characters\": '∸' },\n      \"&dotplus;\": { \"codepoints\": [8724], \"characters\": '∔' },\n      \"&dotsquare;\": { \"codepoints\": [8865], \"characters\": '⊡' },\n      \"&doublebarwedge;\": { \"codepoints\": [8966], \"characters\": '⌆' },\n      \"&DoubleContourIntegral;\": { \"codepoints\": [8751], \"characters\": '∯' },\n      \"&DoubleDot;\": { \"codepoints\": [168], \"characters\": '¨' },\n      \"&DoubleDownArrow;\": { \"codepoints\": [8659], \"characters\": '⇓' },\n      \"&DoubleLeftArrow;\": { \"codepoints\": [8656], \"characters\": '⇐' },\n      \"&DoubleLeftRightArrow;\": { \"codepoints\": [8660], \"characters\": '⇔' },\n      \"&DoubleLeftTee;\": { \"codepoints\": [10980], \"characters\": '⫤' },\n      \"&DoubleLongLeftArrow;\": { \"codepoints\": [10232], \"characters\": '⟸' },\n      \"&DoubleLongLeftRightArrow;\": { \"codepoints\": [10234], \"characters\": '⟺' },\n      \"&DoubleLongRightArrow;\": { \"codepoints\": [10233], \"characters\": '⟹' },\n      \"&DoubleRightArrow;\": { \"codepoints\": [8658], \"characters\": '⇒' },\n      \"&DoubleRightTee;\": { \"codepoints\": [8872], \"characters\": '⊨' },\n      \"&DoubleUpArrow;\": { \"codepoints\": [8657], \"characters\": '⇑' },\n      \"&DoubleUpDownArrow;\": { \"codepoints\": [8661], \"characters\": '⇕' },\n      \"&DoubleVerticalBar;\": { \"codepoints\": [8741], \"characters\": '∥' },\n      \"&DownArrowBar;\": { \"codepoints\": [10515], \"characters\": '⤓' },\n      \"&downarrow;\": { \"codepoints\": [8595], \"characters\": '↓' },\n      \"&DownArrow;\": { \"codepoints\": [8595], \"characters\": '↓' },\n      \"&Downarrow;\": { \"codepoints\": [8659], \"characters\": '⇓' },\n      \"&DownArrowUpArrow;\": { \"codepoints\": [8693], \"characters\": '⇵' },\n      \"&DownBreve;\": { \"codepoints\": [785], \"characters\": '̑' },\n      \"&downdownarrows;\": { \"codepoints\": [8650], \"characters\": '⇊' },\n      \"&downharpoonleft;\": { \"codepoints\": [8643], \"characters\": '⇃' },\n      \"&downharpoonright;\": { \"codepoints\": [8642], \"characters\": '⇂' },\n      \"&DownLeftRightVector;\": { \"codepoints\": [10576], \"characters\": '⥐' },\n      \"&DownLeftTeeVector;\": { \"codepoints\": [10590], \"characters\": '⥞' },\n      \"&DownLeftVectorBar;\": { \"codepoints\": [10582], \"characters\": '⥖' },\n      \"&DownLeftVector;\": { \"codepoints\": [8637], \"characters\": '↽' },\n      \"&DownRightTeeVector;\": { \"codepoints\": [10591], \"characters\": '⥟' },\n      \"&DownRightVectorBar;\": { \"codepoints\": [10583], \"characters\": '⥗' },\n      \"&DownRightVector;\": { \"codepoints\": [8641], \"characters\": '⇁' },\n      \"&DownTeeArrow;\": { \"codepoints\": [8615], \"characters\": '↧' },\n      \"&DownTee;\": { \"codepoints\": [8868], \"characters\": '⊤' },\n      \"&drbkarow;\": { \"codepoints\": [10512], \"characters\": '⤐' },\n      \"&drcorn;\": { \"codepoints\": [8991], \"characters\": '⌟' },\n      \"&drcrop;\": { \"codepoints\": [8972], \"characters\": '⌌' },\n      \"&Dscr;\": { \"codepoints\": [119967], \"characters\": '𝒟' },\n      \"&dscr;\": { \"codepoints\": [119993], \"characters\": '𝒹' },\n      \"&DScy;\": { \"codepoints\": [1029], \"characters\": 'Ѕ' },\n      \"&dscy;\": { \"codepoints\": [1109], \"characters\": 'ѕ' },\n      \"&dsol;\": { \"codepoints\": [10742], \"characters\": '⧶' },\n      \"&Dstrok;\": { \"codepoints\": [272], \"characters\": 'Đ' },\n      \"&dstrok;\": { \"codepoints\": [273], \"characters\": 'đ' },\n      \"&dtdot;\": { \"codepoints\": [8945], \"characters\": '⋱' },\n      \"&dtri;\": { \"codepoints\": [9663], \"characters\": '▿' },\n      \"&dtrif;\": { \"codepoints\": [9662], \"characters\": '▾' },\n      \"&duarr;\": { \"codepoints\": [8693], \"characters\": '⇵' },\n      \"&duhar;\": { \"codepoints\": [10607], \"characters\": '⥯' },\n      \"&dwangle;\": { \"codepoints\": [10662], \"characters\": '⦦' },\n      \"&DZcy;\": { \"codepoints\": [1039], \"characters\": 'Џ' },\n      \"&dzcy;\": { \"codepoints\": [1119], \"characters\": 'џ' },\n      \"&dzigrarr;\": { \"codepoints\": [10239], \"characters\": '⟿' },\n      \"&Eacute;\": { \"codepoints\": [201], \"characters\": 'É' },\n      \"&Eacute\": { \"codepoints\": [201], \"characters\": 'É' },\n      \"&eacute;\": { \"codepoints\": [233], \"characters\": 'é' },\n      \"&eacute\": { \"codepoints\": [233], \"characters\": 'é' },\n      \"&easter;\": { \"codepoints\": [10862], \"characters\": '⩮' },\n      \"&Ecaron;\": { \"codepoints\": [282], \"characters\": 'Ě' },\n      \"&ecaron;\": { \"codepoints\": [283], \"characters\": 'ě' },\n      \"&Ecirc;\": { \"codepoints\": [202], \"characters\": 'Ê' },\n      \"&Ecirc\": { \"codepoints\": [202], \"characters\": 'Ê' },\n      \"&ecirc;\": { \"codepoints\": [234], \"characters\": 'ê' },\n      \"&ecirc\": { \"codepoints\": [234], \"characters\": 'ê' },\n      \"&ecir;\": { \"codepoints\": [8790], \"characters\": '≖' },\n      \"&ecolon;\": { \"codepoints\": [8789], \"characters\": '≕' },\n      \"&Ecy;\": { \"codepoints\": [1069], \"characters\": 'Э' },\n      \"&ecy;\": { \"codepoints\": [1101], \"characters\": 'э' },\n      \"&eDDot;\": { \"codepoints\": [10871], \"characters\": '⩷' },\n      \"&Edot;\": { \"codepoints\": [278], \"characters\": 'Ė' },\n      \"&edot;\": { \"codepoints\": [279], \"characters\": 'ė' },\n      \"&eDot;\": { \"codepoints\": [8785], \"characters\": '≑' },\n      \"&ee;\": { \"codepoints\": [8519], \"characters\": 'ⅇ' },\n      \"&efDot;\": { \"codepoints\": [8786], \"characters\": '≒' },\n      \"&Efr;\": { \"codepoints\": [120072], \"characters\": '𝔈' },\n      \"&efr;\": { \"codepoints\": [120098], \"characters\": '𝔢' },\n      \"&eg;\": { \"codepoints\": [10906], \"characters\": '⪚' },\n      \"&Egrave;\": { \"codepoints\": [200], \"characters\": 'È' },\n      \"&Egrave\": { \"codepoints\": [200], \"characters\": 'È' },\n      \"&egrave;\": { \"codepoints\": [232], \"characters\": 'è' },\n      \"&egrave\": { \"codepoints\": [232], \"characters\": 'è' },\n      \"&egs;\": { \"codepoints\": [10902], \"characters\": '⪖' },\n      \"&egsdot;\": { \"codepoints\": [10904], \"characters\": '⪘' },\n      \"&el;\": { \"codepoints\": [10905], \"characters\": '⪙' },\n      \"&Element;\": { \"codepoints\": [8712], \"characters\": '∈' },\n      \"&elinters;\": { \"codepoints\": [9191], \"characters\": '⏧' },\n      \"&ell;\": { \"codepoints\": [8467], \"characters\": 'ℓ' },\n      \"&els;\": { \"codepoints\": [10901], \"characters\": '⪕' },\n      \"&elsdot;\": { \"codepoints\": [10903], \"characters\": '⪗' },\n      \"&Emacr;\": { \"codepoints\": [274], \"characters\": 'Ē' },\n      \"&emacr;\": { \"codepoints\": [275], \"characters\": 'ē' },\n      \"&empty;\": { \"codepoints\": [8709], \"characters\": '∅' },\n      \"&emptyset;\": { \"codepoints\": [8709], \"characters\": '∅' },\n      \"&EmptySmallSquare;\": { \"codepoints\": [9723], \"characters\": '◻' },\n      \"&emptyv;\": { \"codepoints\": [8709], \"characters\": '∅' },\n      \"&EmptyVerySmallSquare;\": { \"codepoints\": [9643], \"characters\": '▫' },\n      \"&emsp13;\": { \"codepoints\": [8196], \"characters\": ' ' },\n      \"&emsp14;\": { \"codepoints\": [8197], \"characters\": ' ' },\n      \"&emsp;\": { \"codepoints\": [8195], \"characters\": ' ' },\n      \"&ENG;\": { \"codepoints\": [330], \"characters\": 'Ŋ' },\n      \"&eng;\": { \"codepoints\": [331], \"characters\": 'ŋ' },\n      \"&ensp;\": { \"codepoints\": [8194], \"characters\": ' ' },\n      \"&Eogon;\": { \"codepoints\": [280], \"characters\": 'Ę' },\n      \"&eogon;\": { \"codepoints\": [281], \"characters\": 'ę' },\n      \"&Eopf;\": { \"codepoints\": [120124], \"characters\": '𝔼' },\n      \"&eopf;\": { \"codepoints\": [120150], \"characters\": '𝕖' },\n      \"&epar;\": { \"codepoints\": [8917], \"characters\": '⋕' },\n      \"&eparsl;\": { \"codepoints\": [10723], \"characters\": '⧣' },\n      \"&eplus;\": { \"codepoints\": [10865], \"characters\": '⩱' },\n      \"&epsi;\": { \"codepoints\": [949], \"characters\": 'ε' },\n      \"&Epsilon;\": { \"codepoints\": [917], \"characters\": 'Ε' },\n      \"&epsilon;\": { \"codepoints\": [949], \"characters\": 'ε' },\n      \"&epsiv;\": { \"codepoints\": [1013], \"characters\": 'ϵ' },\n      \"&eqcirc;\": { \"codepoints\": [8790], \"characters\": '≖' },\n      \"&eqcolon;\": { \"codepoints\": [8789], \"characters\": '≕' },\n      \"&eqsim;\": { \"codepoints\": [8770], \"characters\": '≂' },\n      \"&eqslantgtr;\": { \"codepoints\": [10902], \"characters\": '⪖' },\n      \"&eqslantless;\": { \"codepoints\": [10901], \"characters\": '⪕' },\n      \"&Equal;\": { \"codepoints\": [10869], \"characters\": '⩵' },\n      \"&equals;\": { \"codepoints\": [61], \"characters\": '=' },\n      \"&EqualTilde;\": { \"codepoints\": [8770], \"characters\": '≂' },\n      \"&equest;\": { \"codepoints\": [8799], \"characters\": '≟' },\n      \"&Equilibrium;\": { \"codepoints\": [8652], \"characters\": '⇌' },\n      \"&equiv;\": { \"codepoints\": [8801], \"characters\": '≡' },\n      \"&equivDD;\": { \"codepoints\": [10872], \"characters\": '⩸' },\n      \"&eqvparsl;\": { \"codepoints\": [10725], \"characters\": '⧥' },\n      \"&erarr;\": { \"codepoints\": [10609], \"characters\": '⥱' },\n      \"&erDot;\": { \"codepoints\": [8787], \"characters\": '≓' },\n      \"&escr;\": { \"codepoints\": [8495], \"characters\": 'ℯ' },\n      \"&Escr;\": { \"codepoints\": [8496], \"characters\": 'ℰ' },\n      \"&esdot;\": { \"codepoints\": [8784], \"characters\": '≐' },\n      \"&Esim;\": { \"codepoints\": [10867], \"characters\": '⩳' },\n      \"&esim;\": { \"codepoints\": [8770], \"characters\": '≂' },\n      \"&Eta;\": { \"codepoints\": [919], \"characters\": 'Η' },\n      \"&eta;\": { \"codepoints\": [951], \"characters\": 'η' },\n      \"&ETH;\": { \"codepoints\": [208], \"characters\": 'Ð' },\n      \"&ETH\": { \"codepoints\": [208], \"characters\": 'Ð' },\n      \"&eth;\": { \"codepoints\": [240], \"characters\": 'ð' },\n      \"&eth\": { \"codepoints\": [240], \"characters\": 'ð' },\n      \"&Euml;\": { \"codepoints\": [203], \"characters\": 'Ë' },\n      \"&Euml\": { \"codepoints\": [203], \"characters\": 'Ë' },\n      \"&euml;\": { \"codepoints\": [235], \"characters\": 'ë' },\n      \"&euml\": { \"codepoints\": [235], \"characters\": 'ë' },\n      \"&euro;\": { \"codepoints\": [8364], \"characters\": '€' },\n      \"&excl;\": { \"codepoints\": [33], \"characters\": '!' },\n      \"&exist;\": { \"codepoints\": [8707], \"characters\": '∃' },\n      \"&Exists;\": { \"codepoints\": [8707], \"characters\": '∃' },\n      \"&expectation;\": { \"codepoints\": [8496], \"characters\": 'ℰ' },\n      \"&exponentiale;\": { \"codepoints\": [8519], \"characters\": 'ⅇ' },\n      \"&ExponentialE;\": { \"codepoints\": [8519], \"characters\": 'ⅇ' },\n      \"&fallingdotseq;\": { \"codepoints\": [8786], \"characters\": '≒' },\n      \"&Fcy;\": { \"codepoints\": [1060], \"characters\": 'Ф' },\n      \"&fcy;\": { \"codepoints\": [1092], \"characters\": 'ф' },\n      \"&female;\": { \"codepoints\": [9792], \"characters\": '♀' },\n      \"&ffilig;\": { \"codepoints\": [64259], \"characters\": 'ﬃ' },\n      \"&fflig;\": { \"codepoints\": [64256], \"characters\": 'ﬀ' },\n      \"&ffllig;\": { \"codepoints\": [64260], \"characters\": 'ﬄ' },\n      \"&Ffr;\": { \"codepoints\": [120073], \"characters\": '𝔉' },\n      \"&ffr;\": { \"codepoints\": [120099], \"characters\": '𝔣' },\n      \"&filig;\": { \"codepoints\": [64257], \"characters\": 'ﬁ' },\n      \"&FilledSmallSquare;\": { \"codepoints\": [9724], \"characters\": '◼' },\n      \"&FilledVerySmallSquare;\": { \"codepoints\": [9642], \"characters\": '▪' },\n      \"&fjlig;\": { \"codepoints\": [102, 106], \"characters\": 'fj' },\n      \"&flat;\": { \"codepoints\": [9837], \"characters\": '♭' },\n      \"&fllig;\": { \"codepoints\": [64258], \"characters\": 'ﬂ' },\n      \"&fltns;\": { \"codepoints\": [9649], \"characters\": '▱' },\n      \"&fnof;\": { \"codepoints\": [402], \"characters\": 'ƒ' },\n      \"&Fopf;\": { \"codepoints\": [120125], \"characters\": '𝔽' },\n      \"&fopf;\": { \"codepoints\": [120151], \"characters\": '𝕗' },\n      \"&forall;\": { \"codepoints\": [8704], \"characters\": '∀' },\n      \"&ForAll;\": { \"codepoints\": [8704], \"characters\": '∀' },\n      \"&fork;\": { \"codepoints\": [8916], \"characters\": '⋔' },\n      \"&forkv;\": { \"codepoints\": [10969], \"characters\": '⫙' },\n      \"&Fouriertrf;\": { \"codepoints\": [8497], \"characters\": 'ℱ' },\n      \"&fpartint;\": { \"codepoints\": [10765], \"characters\": '⨍' },\n      \"&frac12;\": { \"codepoints\": [189], \"characters\": '½' },\n      \"&frac12\": { \"codepoints\": [189], \"characters\": '½' },\n      \"&frac13;\": { \"codepoints\": [8531], \"characters\": '⅓' },\n      \"&frac14;\": { \"codepoints\": [188], \"characters\": '¼' },\n      \"&frac14\": { \"codepoints\": [188], \"characters\": '¼' },\n      \"&frac15;\": { \"codepoints\": [8533], \"characters\": '⅕' },\n      \"&frac16;\": { \"codepoints\": [8537], \"characters\": '⅙' },\n      \"&frac18;\": { \"codepoints\": [8539], \"characters\": '⅛' },\n      \"&frac23;\": { \"codepoints\": [8532], \"characters\": '⅔' },\n      \"&frac25;\": { \"codepoints\": [8534], \"characters\": '⅖' },\n      \"&frac34;\": { \"codepoints\": [190], \"characters\": '¾' },\n      \"&frac34\": { \"codepoints\": [190], \"characters\": '¾' },\n      \"&frac35;\": { \"codepoints\": [8535], \"characters\": '⅗' },\n      \"&frac38;\": { \"codepoints\": [8540], \"characters\": '⅜' },\n      \"&frac45;\": { \"codepoints\": [8536], \"characters\": '⅘' },\n      \"&frac56;\": { \"codepoints\": [8538], \"characters\": '⅚' },\n      \"&frac58;\": { \"codepoints\": [8541], \"characters\": '⅝' },\n      \"&frac78;\": { \"codepoints\": [8542], \"characters\": '⅞' },\n      \"&frasl;\": { \"codepoints\": [8260], \"characters\": '⁄' },\n      \"&frown;\": { \"codepoints\": [8994], \"characters\": '⌢' },\n      \"&fscr;\": { \"codepoints\": [119995], \"characters\": '𝒻' },\n      \"&Fscr;\": { \"codepoints\": [8497], \"characters\": 'ℱ' },\n      \"&gacute;\": { \"codepoints\": [501], \"characters\": 'ǵ' },\n      \"&Gamma;\": { \"codepoints\": [915], \"characters\": 'Γ' },\n      \"&gamma;\": { \"codepoints\": [947], \"characters\": 'γ' },\n      \"&Gammad;\": { \"codepoints\": [988], \"characters\": 'Ϝ' },\n      \"&gammad;\": { \"codepoints\": [989], \"characters\": 'ϝ' },\n      \"&gap;\": { \"codepoints\": [10886], \"characters\": '⪆' },\n      \"&Gbreve;\": { \"codepoints\": [286], \"characters\": 'Ğ' },\n      \"&gbreve;\": { \"codepoints\": [287], \"characters\": 'ğ' },\n      \"&Gcedil;\": { \"codepoints\": [290], \"characters\": 'Ģ' },\n      \"&Gcirc;\": { \"codepoints\": [284], \"characters\": 'Ĝ' },\n      \"&gcirc;\": { \"codepoints\": [285], \"characters\": 'ĝ' },\n      \"&Gcy;\": { \"codepoints\": [1043], \"characters\": 'Г' },\n      \"&gcy;\": { \"codepoints\": [1075], \"characters\": 'г' },\n      \"&Gdot;\": { \"codepoints\": [288], \"characters\": 'Ġ' },\n      \"&gdot;\": { \"codepoints\": [289], \"characters\": 'ġ' },\n      \"&ge;\": { \"codepoints\": [8805], \"characters\": '≥' },\n      \"&gE;\": { \"codepoints\": [8807], \"characters\": '≧' },\n      \"&gEl;\": { \"codepoints\": [10892], \"characters\": '⪌' },\n      \"&gel;\": { \"codepoints\": [8923], \"characters\": '⋛' },\n      \"&geq;\": { \"codepoints\": [8805], \"characters\": '≥' },\n      \"&geqq;\": { \"codepoints\": [8807], \"characters\": '≧' },\n      \"&geqslant;\": { \"codepoints\": [10878], \"characters\": '⩾' },\n      \"&gescc;\": { \"codepoints\": [10921], \"characters\": '⪩' },\n      \"&ges;\": { \"codepoints\": [10878], \"characters\": '⩾' },\n      \"&gesdot;\": { \"codepoints\": [10880], \"characters\": '⪀' },\n      \"&gesdoto;\": { \"codepoints\": [10882], \"characters\": '⪂' },\n      \"&gesdotol;\": { \"codepoints\": [10884], \"characters\": '⪄' },\n      \"&gesl;\": { \"codepoints\": [8923, 65024], \"characters\": '⋛︀' },\n      \"&gesles;\": { \"codepoints\": [10900], \"characters\": '⪔' },\n      \"&Gfr;\": { \"codepoints\": [120074], \"characters\": '𝔊' },\n      \"&gfr;\": { \"codepoints\": [120100], \"characters\": '𝔤' },\n      \"&gg;\": { \"codepoints\": [8811], \"characters\": '≫' },\n      \"&Gg;\": { \"codepoints\": [8921], \"characters\": '⋙' },\n      \"&ggg;\": { \"codepoints\": [8921], \"characters\": '⋙' },\n      \"&gimel;\": { \"codepoints\": [8503], \"characters\": 'ℷ' },\n      \"&GJcy;\": { \"codepoints\": [1027], \"characters\": 'Ѓ' },\n      \"&gjcy;\": { \"codepoints\": [1107], \"characters\": 'ѓ' },\n      \"&gla;\": { \"codepoints\": [10917], \"characters\": '⪥' },\n      \"&gl;\": { \"codepoints\": [8823], \"characters\": '≷' },\n      \"&glE;\": { \"codepoints\": [10898], \"characters\": '⪒' },\n      \"&glj;\": { \"codepoints\": [10916], \"characters\": '⪤' },\n      \"&gnap;\": { \"codepoints\": [10890], \"characters\": '⪊' },\n      \"&gnapprox;\": { \"codepoints\": [10890], \"characters\": '⪊' },\n      \"&gne;\": { \"codepoints\": [10888], \"characters\": '⪈' },\n      \"&gnE;\": { \"codepoints\": [8809], \"characters\": '≩' },\n      \"&gneq;\": { \"codepoints\": [10888], \"characters\": '⪈' },\n      \"&gneqq;\": { \"codepoints\": [8809], \"characters\": '≩' },\n      \"&gnsim;\": { \"codepoints\": [8935], \"characters\": '⋧' },\n      \"&Gopf;\": { \"codepoints\": [120126], \"characters\": '𝔾' },\n      \"&gopf;\": { \"codepoints\": [120152], \"characters\": '𝕘' },\n      \"&grave;\": { \"codepoints\": [96], \"characters\": '`' },\n      \"&GreaterEqual;\": { \"codepoints\": [8805], \"characters\": '≥' },\n      \"&GreaterEqualLess;\": { \"codepoints\": [8923], \"characters\": '⋛' },\n      \"&GreaterFullEqual;\": { \"codepoints\": [8807], \"characters\": '≧' },\n      \"&GreaterGreater;\": { \"codepoints\": [10914], \"characters\": '⪢' },\n      \"&GreaterLess;\": { \"codepoints\": [8823], \"characters\": '≷' },\n      \"&GreaterSlantEqual;\": { \"codepoints\": [10878], \"characters\": '⩾' },\n      \"&GreaterTilde;\": { \"codepoints\": [8819], \"characters\": '≳' },\n      \"&Gscr;\": { \"codepoints\": [119970], \"characters\": '𝒢' },\n      \"&gscr;\": { \"codepoints\": [8458], \"characters\": 'ℊ' },\n      \"&gsim;\": { \"codepoints\": [8819], \"characters\": '≳' },\n      \"&gsime;\": { \"codepoints\": [10894], \"characters\": '⪎' },\n      \"&gsiml;\": { \"codepoints\": [10896], \"characters\": '⪐' },\n      \"&gtcc;\": { \"codepoints\": [10919], \"characters\": '⪧' },\n      \"&gtcir;\": { \"codepoints\": [10874], \"characters\": '⩺' },\n      \"&gt;\": { \"codepoints\": [62], \"characters\": '>' },\n      \"&gt\": { \"codepoints\": [62], \"characters\": '>' },\n      \"&GT;\": { \"codepoints\": [62], \"characters\": '>' },\n      \"&GT\": { \"codepoints\": [62], \"characters\": '>' },\n      \"&Gt;\": { \"codepoints\": [8811], \"characters\": '≫' },\n      \"&gtdot;\": { \"codepoints\": [8919], \"characters\": '⋗' },\n      \"&gtlPar;\": { \"codepoints\": [10645], \"characters\": '⦕' },\n      \"&gtquest;\": { \"codepoints\": [10876], \"characters\": '⩼' },\n      \"&gtrapprox;\": { \"codepoints\": [10886], \"characters\": '⪆' },\n      \"&gtrarr;\": { \"codepoints\": [10616], \"characters\": '⥸' },\n      \"&gtrdot;\": { \"codepoints\": [8919], \"characters\": '⋗' },\n      \"&gtreqless;\": { \"codepoints\": [8923], \"characters\": '⋛' },\n      \"&gtreqqless;\": { \"codepoints\": [10892], \"characters\": '⪌' },\n      \"&gtrless;\": { \"codepoints\": [8823], \"characters\": '≷' },\n      \"&gtrsim;\": { \"codepoints\": [8819], \"characters\": '≳' },\n      \"&gvertneqq;\": { \"codepoints\": [8809, 65024], \"characters\": '≩︀' },\n      \"&gvnE;\": { \"codepoints\": [8809, 65024], \"characters\": '≩︀' },\n      \"&Hacek;\": { \"codepoints\": [711], \"characters\": 'ˇ' },\n      \"&hairsp;\": { \"codepoints\": [8202], \"characters\": ' ' },\n      \"&half;\": { \"codepoints\": [189], \"characters\": '½' },\n      \"&hamilt;\": { \"codepoints\": [8459], \"characters\": 'ℋ' },\n      \"&HARDcy;\": { \"codepoints\": [1066], \"characters\": 'Ъ' },\n      \"&hardcy;\": { \"codepoints\": [1098], \"characters\": 'ъ' },\n      \"&harrcir;\": { \"codepoints\": [10568], \"characters\": '⥈' },\n      \"&harr;\": { \"codepoints\": [8596], \"characters\": '↔' },\n      \"&hArr;\": { \"codepoints\": [8660], \"characters\": '⇔' },\n      \"&harrw;\": { \"codepoints\": [8621], \"characters\": '↭' },\n      \"&Hat;\": { \"codepoints\": [94], \"characters\": '^' },\n      \"&hbar;\": { \"codepoints\": [8463], \"characters\": 'ℏ' },\n      \"&Hcirc;\": { \"codepoints\": [292], \"characters\": 'Ĥ' },\n      \"&hcirc;\": { \"codepoints\": [293], \"characters\": 'ĥ' },\n      \"&hearts;\": { \"codepoints\": [9829], \"characters\": '♥' },\n      \"&heartsuit;\": { \"codepoints\": [9829], \"characters\": '♥' },\n      \"&hellip;\": { \"codepoints\": [8230], \"characters\": '…' },\n      \"&hercon;\": { \"codepoints\": [8889], \"characters\": '⊹' },\n      \"&hfr;\": { \"codepoints\": [120101], \"characters\": '𝔥' },\n      \"&Hfr;\": { \"codepoints\": [8460], \"characters\": 'ℌ' },\n      \"&HilbertSpace;\": { \"codepoints\": [8459], \"characters\": 'ℋ' },\n      \"&hksearow;\": { \"codepoints\": [10533], \"characters\": '⤥' },\n      \"&hkswarow;\": { \"codepoints\": [10534], \"characters\": '⤦' },\n      \"&hoarr;\": { \"codepoints\": [8703], \"characters\": '⇿' },\n      \"&homtht;\": { \"codepoints\": [8763], \"characters\": '∻' },\n      \"&hookleftarrow;\": { \"codepoints\": [8617], \"characters\": '↩' },\n      \"&hookrightarrow;\": { \"codepoints\": [8618], \"characters\": '↪' },\n      \"&hopf;\": { \"codepoints\": [120153], \"characters\": '𝕙' },\n      \"&Hopf;\": { \"codepoints\": [8461], \"characters\": 'ℍ' },\n      \"&horbar;\": { \"codepoints\": [8213], \"characters\": '―' },\n      \"&HorizontalLine;\": { \"codepoints\": [9472], \"characters\": '─' },\n      \"&hscr;\": { \"codepoints\": [119997], \"characters\": '𝒽' },\n      \"&Hscr;\": { \"codepoints\": [8459], \"characters\": 'ℋ' },\n      \"&hslash;\": { \"codepoints\": [8463], \"characters\": 'ℏ' },\n      \"&Hstrok;\": { \"codepoints\": [294], \"characters\": 'Ħ' },\n      \"&hstrok;\": { \"codepoints\": [295], \"characters\": 'ħ' },\n      \"&HumpDownHump;\": { \"codepoints\": [8782], \"characters\": '≎' },\n      \"&HumpEqual;\": { \"codepoints\": [8783], \"characters\": '≏' },\n      \"&hybull;\": { \"codepoints\": [8259], \"characters\": '⁃' },\n      \"&hyphen;\": { \"codepoints\": [8208], \"characters\": '‐' },\n      \"&Iacute;\": { \"codepoints\": [205], \"characters\": 'Í' },\n      \"&Iacute\": { \"codepoints\": [205], \"characters\": 'Í' },\n      \"&iacute;\": { \"codepoints\": [237], \"characters\": 'í' },\n      \"&iacute\": { \"codepoints\": [237], \"characters\": 'í' },\n      \"&ic;\": { \"codepoints\": [8291], \"characters\": '⁣' },\n      \"&Icirc;\": { \"codepoints\": [206], \"characters\": 'Î' },\n      \"&Icirc\": { \"codepoints\": [206], \"characters\": 'Î' },\n      \"&icirc;\": { \"codepoints\": [238], \"characters\": 'î' },\n      \"&icirc\": { \"codepoints\": [238], \"characters\": 'î' },\n      \"&Icy;\": { \"codepoints\": [1048], \"characters\": 'И' },\n      \"&icy;\": { \"codepoints\": [1080], \"characters\": 'и' },\n      \"&Idot;\": { \"codepoints\": [304], \"characters\": 'İ' },\n      \"&IEcy;\": { \"codepoints\": [1045], \"characters\": 'Е' },\n      \"&iecy;\": { \"codepoints\": [1077], \"characters\": 'е' },\n      \"&iexcl;\": { \"codepoints\": [161], \"characters\": '¡' },\n      \"&iexcl\": { \"codepoints\": [161], \"characters\": '¡' },\n      \"&iff;\": { \"codepoints\": [8660], \"characters\": '⇔' },\n      \"&ifr;\": { \"codepoints\": [120102], \"characters\": '𝔦' },\n      \"&Ifr;\": { \"codepoints\": [8465], \"characters\": 'ℑ' },\n      \"&Igrave;\": { \"codepoints\": [204], \"characters\": 'Ì' },\n      \"&Igrave\": { \"codepoints\": [204], \"characters\": 'Ì' },\n      \"&igrave;\": { \"codepoints\": [236], \"characters\": 'ì' },\n      \"&igrave\": { \"codepoints\": [236], \"characters\": 'ì' },\n      \"&ii;\": { \"codepoints\": [8520], \"characters\": 'ⅈ' },\n      \"&iiiint;\": { \"codepoints\": [10764], \"characters\": '⨌' },\n      \"&iiint;\": { \"codepoints\": [8749], \"characters\": '∭' },\n      \"&iinfin;\": { \"codepoints\": [10716], \"characters\": '⧜' },\n      \"&iiota;\": { \"codepoints\": [8489], \"characters\": '℩' },\n      \"&IJlig;\": { \"codepoints\": [306], \"characters\": 'Ĳ' },\n      \"&ijlig;\": { \"codepoints\": [307], \"characters\": 'ĳ' },\n      \"&Imacr;\": { \"codepoints\": [298], \"characters\": 'Ī' },\n      \"&imacr;\": { \"codepoints\": [299], \"characters\": 'ī' },\n      \"&image;\": { \"codepoints\": [8465], \"characters\": 'ℑ' },\n      \"&ImaginaryI;\": { \"codepoints\": [8520], \"characters\": 'ⅈ' },\n      \"&imagline;\": { \"codepoints\": [8464], \"characters\": 'ℐ' },\n      \"&imagpart;\": { \"codepoints\": [8465], \"characters\": 'ℑ' },\n      \"&imath;\": { \"codepoints\": [305], \"characters\": 'ı' },\n      \"&Im;\": { \"codepoints\": [8465], \"characters\": 'ℑ' },\n      \"&imof;\": { \"codepoints\": [8887], \"characters\": '⊷' },\n      \"&imped;\": { \"codepoints\": [437], \"characters\": 'Ƶ' },\n      \"&Implies;\": { \"codepoints\": [8658], \"characters\": '⇒' },\n      \"&incare;\": { \"codepoints\": [8453], \"characters\": '℅' },\n      \"&in;\": { \"codepoints\": [8712], \"characters\": '∈' },\n      \"&infin;\": { \"codepoints\": [8734], \"characters\": '∞' },\n      \"&infintie;\": { \"codepoints\": [10717], \"characters\": '⧝' },\n      \"&inodot;\": { \"codepoints\": [305], \"characters\": 'ı' },\n      \"&intcal;\": { \"codepoints\": [8890], \"characters\": '⊺' },\n      \"&int;\": { \"codepoints\": [8747], \"characters\": '∫' },\n      \"&Int;\": { \"codepoints\": [8748], \"characters\": '∬' },\n      \"&integers;\": { \"codepoints\": [8484], \"characters\": 'ℤ' },\n      \"&Integral;\": { \"codepoints\": [8747], \"characters\": '∫' },\n      \"&intercal;\": { \"codepoints\": [8890], \"characters\": '⊺' },\n      \"&Intersection;\": { \"codepoints\": [8898], \"characters\": '⋂' },\n      \"&intlarhk;\": { \"codepoints\": [10775], \"characters\": '⨗' },\n      \"&intprod;\": { \"codepoints\": [10812], \"characters\": '⨼' },\n      \"&InvisibleComma;\": { \"codepoints\": [8291], \"characters\": '⁣' },\n      \"&InvisibleTimes;\": { \"codepoints\": [8290], \"characters\": '⁢' },\n      \"&IOcy;\": { \"codepoints\": [1025], \"characters\": 'Ё' },\n      \"&iocy;\": { \"codepoints\": [1105], \"characters\": 'ё' },\n      \"&Iogon;\": { \"codepoints\": [302], \"characters\": 'Į' },\n      \"&iogon;\": { \"codepoints\": [303], \"characters\": 'į' },\n      \"&Iopf;\": { \"codepoints\": [120128], \"characters\": '𝕀' },\n      \"&iopf;\": { \"codepoints\": [120154], \"characters\": '𝕚' },\n      \"&Iota;\": { \"codepoints\": [921], \"characters\": 'Ι' },\n      \"&iota;\": { \"codepoints\": [953], \"characters\": 'ι' },\n      \"&iprod;\": { \"codepoints\": [10812], \"characters\": '⨼' },\n      \"&iquest;\": { \"codepoints\": [191], \"characters\": '¿' },\n      \"&iquest\": { \"codepoints\": [191], \"characters\": '¿' },\n      \"&iscr;\": { \"codepoints\": [119998], \"characters\": '𝒾' },\n      \"&Iscr;\": { \"codepoints\": [8464], \"characters\": 'ℐ' },\n      \"&isin;\": { \"codepoints\": [8712], \"characters\": '∈' },\n      \"&isindot;\": { \"codepoints\": [8949], \"characters\": '⋵' },\n      \"&isinE;\": { \"codepoints\": [8953], \"characters\": '⋹' },\n      \"&isins;\": { \"codepoints\": [8948], \"characters\": '⋴' },\n      \"&isinsv;\": { \"codepoints\": [8947], \"characters\": '⋳' },\n      \"&isinv;\": { \"codepoints\": [8712], \"characters\": '∈' },\n      \"&it;\": { \"codepoints\": [8290], \"characters\": '⁢' },\n      \"&Itilde;\": { \"codepoints\": [296], \"characters\": 'Ĩ' },\n      \"&itilde;\": { \"codepoints\": [297], \"characters\": 'ĩ' },\n      \"&Iukcy;\": { \"codepoints\": [1030], \"characters\": 'І' },\n      \"&iukcy;\": { \"codepoints\": [1110], \"characters\": 'і' },\n      \"&Iuml;\": { \"codepoints\": [207], \"characters\": 'Ï' },\n      \"&Iuml\": { \"codepoints\": [207], \"characters\": 'Ï' },\n      \"&iuml;\": { \"codepoints\": [239], \"characters\": 'ï' },\n      \"&iuml\": { \"codepoints\": [239], \"characters\": 'ï' },\n      \"&Jcirc;\": { \"codepoints\": [308], \"characters\": 'Ĵ' },\n      \"&jcirc;\": { \"codepoints\": [309], \"characters\": 'ĵ' },\n      \"&Jcy;\": { \"codepoints\": [1049], \"characters\": 'Й' },\n      \"&jcy;\": { \"codepoints\": [1081], \"characters\": 'й' },\n      \"&Jfr;\": { \"codepoints\": [120077], \"characters\": '𝔍' },\n      \"&jfr;\": { \"codepoints\": [120103], \"characters\": '𝔧' },\n      \"&jmath;\": { \"codepoints\": [567], \"characters\": 'ȷ' },\n      \"&Jopf;\": { \"codepoints\": [120129], \"characters\": '𝕁' },\n      \"&jopf;\": { \"codepoints\": [120155], \"characters\": '𝕛' },\n      \"&Jscr;\": { \"codepoints\": [119973], \"characters\": '𝒥' },\n      \"&jscr;\": { \"codepoints\": [119999], \"characters\": '𝒿' },\n      \"&Jsercy;\": { \"codepoints\": [1032], \"characters\": 'Ј' },\n      \"&jsercy;\": { \"codepoints\": [1112], \"characters\": 'ј' },\n      \"&Jukcy;\": { \"codepoints\": [1028], \"characters\": 'Є' },\n      \"&jukcy;\": { \"codepoints\": [1108], \"characters\": 'є' },\n      \"&Kappa;\": { \"codepoints\": [922], \"characters\": 'Κ' },\n      \"&kappa;\": { \"codepoints\": [954], \"characters\": 'κ' },\n      \"&kappav;\": { \"codepoints\": [1008], \"characters\": 'ϰ' },\n      \"&Kcedil;\": { \"codepoints\": [310], \"characters\": 'Ķ' },\n      \"&kcedil;\": { \"codepoints\": [311], \"characters\": 'ķ' },\n      \"&Kcy;\": { \"codepoints\": [1050], \"characters\": 'К' },\n      \"&kcy;\": { \"codepoints\": [1082], \"characters\": 'к' },\n      \"&Kfr;\": { \"codepoints\": [120078], \"characters\": '𝔎' },\n      \"&kfr;\": { \"codepoints\": [120104], \"characters\": '𝔨' },\n      \"&kgreen;\": { \"codepoints\": [312], \"characters\": 'ĸ' },\n      \"&KHcy;\": { \"codepoints\": [1061], \"characters\": 'Х' },\n      \"&khcy;\": { \"codepoints\": [1093], \"characters\": 'х' },\n      \"&KJcy;\": { \"codepoints\": [1036], \"characters\": 'Ќ' },\n      \"&kjcy;\": { \"codepoints\": [1116], \"characters\": 'ќ' },\n      \"&Kopf;\": { \"codepoints\": [120130], \"characters\": '𝕂' },\n      \"&kopf;\": { \"codepoints\": [120156], \"characters\": '𝕜' },\n      \"&Kscr;\": { \"codepoints\": [119974], \"characters\": '𝒦' },\n      \"&kscr;\": { \"codepoints\": [120000], \"characters\": '𝓀' },\n      \"&lAarr;\": { \"codepoints\": [8666], \"characters\": '⇚' },\n      \"&Lacute;\": { \"codepoints\": [313], \"characters\": 'Ĺ' },\n      \"&lacute;\": { \"codepoints\": [314], \"characters\": 'ĺ' },\n      \"&laemptyv;\": { \"codepoints\": [10676], \"characters\": '⦴' },\n      \"&lagran;\": { \"codepoints\": [8466], \"characters\": 'ℒ' },\n      \"&Lambda;\": { \"codepoints\": [923], \"characters\": 'Λ' },\n      \"&lambda;\": { \"codepoints\": [955], \"characters\": 'λ' },\n      \"&lang;\": { \"codepoints\": [10216], \"characters\": '⟨' },\n      \"&Lang;\": { \"codepoints\": [10218], \"characters\": '⟪' },\n      \"&langd;\": { \"codepoints\": [10641], \"characters\": '⦑' },\n      \"&langle;\": { \"codepoints\": [10216], \"characters\": '⟨' },\n      \"&lap;\": { \"codepoints\": [10885], \"characters\": '⪅' },\n      \"&Laplacetrf;\": { \"codepoints\": [8466], \"characters\": 'ℒ' },\n      \"&laquo;\": { \"codepoints\": [171], \"characters\": '«' },\n      \"&laquo\": { \"codepoints\": [171], \"characters\": '«' },\n      \"&larrb;\": { \"codepoints\": [8676], \"characters\": '⇤' },\n      \"&larrbfs;\": { \"codepoints\": [10527], \"characters\": '⤟' },\n      \"&larr;\": { \"codepoints\": [8592], \"characters\": '←' },\n      \"&Larr;\": { \"codepoints\": [8606], \"characters\": '↞' },\n      \"&lArr;\": { \"codepoints\": [8656], \"characters\": '⇐' },\n      \"&larrfs;\": { \"codepoints\": [10525], \"characters\": '⤝' },\n      \"&larrhk;\": { \"codepoints\": [8617], \"characters\": '↩' },\n      \"&larrlp;\": { \"codepoints\": [8619], \"characters\": '↫' },\n      \"&larrpl;\": { \"codepoints\": [10553], \"characters\": '⤹' },\n      \"&larrsim;\": { \"codepoints\": [10611], \"characters\": '⥳' },\n      \"&larrtl;\": { \"codepoints\": [8610], \"characters\": '↢' },\n      \"&latail;\": { \"codepoints\": [10521], \"characters\": '⤙' },\n      \"&lAtail;\": { \"codepoints\": [10523], \"characters\": '⤛' },\n      \"&lat;\": { \"codepoints\": [10923], \"characters\": '⪫' },\n      \"&late;\": { \"codepoints\": [10925], \"characters\": '⪭' },\n      \"&lates;\": { \"codepoints\": [10925, 65024], \"characters\": '⪭︀' },\n      \"&lbarr;\": { \"codepoints\": [10508], \"characters\": '⤌' },\n      \"&lBarr;\": { \"codepoints\": [10510], \"characters\": '⤎' },\n      \"&lbbrk;\": { \"codepoints\": [10098], \"characters\": '❲' },\n      \"&lbrace;\": { \"codepoints\": [123], \"characters\": '{' },\n      \"&lbrack;\": { \"codepoints\": [91], \"characters\": '[' },\n      \"&lbrke;\": { \"codepoints\": [10635], \"characters\": '⦋' },\n      \"&lbrksld;\": { \"codepoints\": [10639], \"characters\": '⦏' },\n      \"&lbrkslu;\": { \"codepoints\": [10637], \"characters\": '⦍' },\n      \"&Lcaron;\": { \"codepoints\": [317], \"characters\": 'Ľ' },\n      \"&lcaron;\": { \"codepoints\": [318], \"characters\": 'ľ' },\n      \"&Lcedil;\": { \"codepoints\": [315], \"characters\": 'Ļ' },\n      \"&lcedil;\": { \"codepoints\": [316], \"characters\": 'ļ' },\n      \"&lceil;\": { \"codepoints\": [8968], \"characters\": '⌈' },\n      \"&lcub;\": { \"codepoints\": [123], \"characters\": '{' },\n      \"&Lcy;\": { \"codepoints\": [1051], \"characters\": 'Л' },\n      \"&lcy;\": { \"codepoints\": [1083], \"characters\": 'л' },\n      \"&ldca;\": { \"codepoints\": [10550], \"characters\": '⤶' },\n      \"&ldquo;\": { \"codepoints\": [8220], \"characters\": '“' },\n      \"&ldquor;\": { \"codepoints\": [8222], \"characters\": '„' },\n      \"&ldrdhar;\": { \"codepoints\": [10599], \"characters\": '⥧' },\n      \"&ldrushar;\": { \"codepoints\": [10571], \"characters\": '⥋' },\n      \"&ldsh;\": { \"codepoints\": [8626], \"characters\": '↲' },\n      \"&le;\": { \"codepoints\": [8804], \"characters\": '≤' },\n      \"&lE;\": { \"codepoints\": [8806], \"characters\": '≦' },\n      \"&LeftAngleBracket;\": { \"codepoints\": [10216], \"characters\": '⟨' },\n      \"&LeftArrowBar;\": { \"codepoints\": [8676], \"characters\": '⇤' },\n      \"&leftarrow;\": { \"codepoints\": [8592], \"characters\": '←' },\n      \"&LeftArrow;\": { \"codepoints\": [8592], \"characters\": '←' },\n      \"&Leftarrow;\": { \"codepoints\": [8656], \"characters\": '⇐' },\n      \"&LeftArrowRightArrow;\": { \"codepoints\": [8646], \"characters\": '⇆' },\n      \"&leftarrowtail;\": { \"codepoints\": [8610], \"characters\": '↢' },\n      \"&LeftCeiling;\": { \"codepoints\": [8968], \"characters\": '⌈' },\n      \"&LeftDoubleBracket;\": { \"codepoints\": [10214], \"characters\": '⟦' },\n      \"&LeftDownTeeVector;\": { \"codepoints\": [10593], \"characters\": '⥡' },\n      \"&LeftDownVectorBar;\": { \"codepoints\": [10585], \"characters\": '⥙' },\n      \"&LeftDownVector;\": { \"codepoints\": [8643], \"characters\": '⇃' },\n      \"&LeftFloor;\": { \"codepoints\": [8970], \"characters\": '⌊' },\n      \"&leftharpoondown;\": { \"codepoints\": [8637], \"characters\": '↽' },\n      \"&leftharpoonup;\": { \"codepoints\": [8636], \"characters\": '↼' },\n      \"&leftleftarrows;\": { \"codepoints\": [8647], \"characters\": '⇇' },\n      \"&leftrightarrow;\": { \"codepoints\": [8596], \"characters\": '↔' },\n      \"&LeftRightArrow;\": { \"codepoints\": [8596], \"characters\": '↔' },\n      \"&Leftrightarrow;\": { \"codepoints\": [8660], \"characters\": '⇔' },\n      \"&leftrightarrows;\": { \"codepoints\": [8646], \"characters\": '⇆' },\n      \"&leftrightharpoons;\": { \"codepoints\": [8651], \"characters\": '⇋' },\n      \"&leftrightsquigarrow;\": { \"codepoints\": [8621], \"characters\": '↭' },\n      \"&LeftRightVector;\": { \"codepoints\": [10574], \"characters\": '⥎' },\n      \"&LeftTeeArrow;\": { \"codepoints\": [8612], \"characters\": '↤' },\n      \"&LeftTee;\": { \"codepoints\": [8867], \"characters\": '⊣' },\n      \"&LeftTeeVector;\": { \"codepoints\": [10586], \"characters\": '⥚' },\n      \"&leftthreetimes;\": { \"codepoints\": [8907], \"characters\": '⋋' },\n      \"&LeftTriangleBar;\": { \"codepoints\": [10703], \"characters\": '⧏' },\n      \"&LeftTriangle;\": { \"codepoints\": [8882], \"characters\": '⊲' },\n      \"&LeftTriangleEqual;\": { \"codepoints\": [8884], \"characters\": '⊴' },\n      \"&LeftUpDownVector;\": { \"codepoints\": [10577], \"characters\": '⥑' },\n      \"&LeftUpTeeVector;\": { \"codepoints\": [10592], \"characters\": '⥠' },\n      \"&LeftUpVectorBar;\": { \"codepoints\": [10584], \"characters\": '⥘' },\n      \"&LeftUpVector;\": { \"codepoints\": [8639], \"characters\": '↿' },\n      \"&LeftVectorBar;\": { \"codepoints\": [10578], \"characters\": '⥒' },\n      \"&LeftVector;\": { \"codepoints\": [8636], \"characters\": '↼' },\n      \"&lEg;\": { \"codepoints\": [10891], \"characters\": '⪋' },\n      \"&leg;\": { \"codepoints\": [8922], \"characters\": '⋚' },\n      \"&leq;\": { \"codepoints\": [8804], \"characters\": '≤' },\n      \"&leqq;\": { \"codepoints\": [8806], \"characters\": '≦' },\n      \"&leqslant;\": { \"codepoints\": [10877], \"characters\": '⩽' },\n      \"&lescc;\": { \"codepoints\": [10920], \"characters\": '⪨' },\n      \"&les;\": { \"codepoints\": [10877], \"characters\": '⩽' },\n      \"&lesdot;\": { \"codepoints\": [10879], \"characters\": '⩿' },\n      \"&lesdoto;\": { \"codepoints\": [10881], \"characters\": '⪁' },\n      \"&lesdotor;\": { \"codepoints\": [10883], \"characters\": '⪃' },\n      \"&lesg;\": { \"codepoints\": [8922, 65024], \"characters\": '⋚︀' },\n      \"&lesges;\": { \"codepoints\": [10899], \"characters\": '⪓' },\n      \"&lessapprox;\": { \"codepoints\": [10885], \"characters\": '⪅' },\n      \"&lessdot;\": { \"codepoints\": [8918], \"characters\": '⋖' },\n      \"&lesseqgtr;\": { \"codepoints\": [8922], \"characters\": '⋚' },\n      \"&lesseqqgtr;\": { \"codepoints\": [10891], \"characters\": '⪋' },\n      \"&LessEqualGreater;\": { \"codepoints\": [8922], \"characters\": '⋚' },\n      \"&LessFullEqual;\": { \"codepoints\": [8806], \"characters\": '≦' },\n      \"&LessGreater;\": { \"codepoints\": [8822], \"characters\": '≶' },\n      \"&lessgtr;\": { \"codepoints\": [8822], \"characters\": '≶' },\n      \"&LessLess;\": { \"codepoints\": [10913], \"characters\": '⪡' },\n      \"&lesssim;\": { \"codepoints\": [8818], \"characters\": '≲' },\n      \"&LessSlantEqual;\": { \"codepoints\": [10877], \"characters\": '⩽' },\n      \"&LessTilde;\": { \"codepoints\": [8818], \"characters\": '≲' },\n      \"&lfisht;\": { \"codepoints\": [10620], \"characters\": '⥼' },\n      \"&lfloor;\": { \"codepoints\": [8970], \"characters\": '⌊' },\n      \"&Lfr;\": { \"codepoints\": [120079], \"characters\": '𝔏' },\n      \"&lfr;\": { \"codepoints\": [120105], \"characters\": '𝔩' },\n      \"&lg;\": { \"codepoints\": [8822], \"characters\": '≶' },\n      \"&lgE;\": { \"codepoints\": [10897], \"characters\": '⪑' },\n      \"&lHar;\": { \"codepoints\": [10594], \"characters\": '⥢' },\n      \"&lhard;\": { \"codepoints\": [8637], \"characters\": '↽' },\n      \"&lharu;\": { \"codepoints\": [8636], \"characters\": '↼' },\n      \"&lharul;\": { \"codepoints\": [10602], \"characters\": '⥪' },\n      \"&lhblk;\": { \"codepoints\": [9604], \"characters\": '▄' },\n      \"&LJcy;\": { \"codepoints\": [1033], \"characters\": 'Љ' },\n      \"&ljcy;\": { \"codepoints\": [1113], \"characters\": 'љ' },\n      \"&llarr;\": { \"codepoints\": [8647], \"characters\": '⇇' },\n      \"&ll;\": { \"codepoints\": [8810], \"characters\": '≪' },\n      \"&Ll;\": { \"codepoints\": [8920], \"characters\": '⋘' },\n      \"&llcorner;\": { \"codepoints\": [8990], \"characters\": '⌞' },\n      \"&Lleftarrow;\": { \"codepoints\": [8666], \"characters\": '⇚' },\n      \"&llhard;\": { \"codepoints\": [10603], \"characters\": '⥫' },\n      \"&lltri;\": { \"codepoints\": [9722], \"characters\": '◺' },\n      \"&Lmidot;\": { \"codepoints\": [319], \"characters\": 'Ŀ' },\n      \"&lmidot;\": { \"codepoints\": [320], \"characters\": 'ŀ' },\n      \"&lmoustache;\": { \"codepoints\": [9136], \"characters\": '⎰' },\n      \"&lmoust;\": { \"codepoints\": [9136], \"characters\": '⎰' },\n      \"&lnap;\": { \"codepoints\": [10889], \"characters\": '⪉' },\n      \"&lnapprox;\": { \"codepoints\": [10889], \"characters\": '⪉' },\n      \"&lne;\": { \"codepoints\": [10887], \"characters\": '⪇' },\n      \"&lnE;\": { \"codepoints\": [8808], \"characters\": '≨' },\n      \"&lneq;\": { \"codepoints\": [10887], \"characters\": '⪇' },\n      \"&lneqq;\": { \"codepoints\": [8808], \"characters\": '≨' },\n      \"&lnsim;\": { \"codepoints\": [8934], \"characters\": '⋦' },\n      \"&loang;\": { \"codepoints\": [10220], \"characters\": '⟬' },\n      \"&loarr;\": { \"codepoints\": [8701], \"characters\": '⇽' },\n      \"&lobrk;\": { \"codepoints\": [10214], \"characters\": '⟦' },\n      \"&longleftarrow;\": { \"codepoints\": [10229], \"characters\": '⟵' },\n      \"&LongLeftArrow;\": { \"codepoints\": [10229], \"characters\": '⟵' },\n      \"&Longleftarrow;\": { \"codepoints\": [10232], \"characters\": '⟸' },\n      \"&longleftrightarrow;\": { \"codepoints\": [10231], \"characters\": '⟷' },\n      \"&LongLeftRightArrow;\": { \"codepoints\": [10231], \"characters\": '⟷' },\n      \"&Longleftrightarrow;\": { \"codepoints\": [10234], \"characters\": '⟺' },\n      \"&longmapsto;\": { \"codepoints\": [10236], \"characters\": '⟼' },\n      \"&longrightarrow;\": { \"codepoints\": [10230], \"characters\": '⟶' },\n      \"&LongRightArrow;\": { \"codepoints\": [10230], \"characters\": '⟶' },\n      \"&Longrightarrow;\": { \"codepoints\": [10233], \"characters\": '⟹' },\n      \"&looparrowleft;\": { \"codepoints\": [8619], \"characters\": '↫' },\n      \"&looparrowright;\": { \"codepoints\": [8620], \"characters\": '↬' },\n      \"&lopar;\": { \"codepoints\": [10629], \"characters\": '⦅' },\n      \"&Lopf;\": { \"codepoints\": [120131], \"characters\": '𝕃' },\n      \"&lopf;\": { \"codepoints\": [120157], \"characters\": '𝕝' },\n      \"&loplus;\": { \"codepoints\": [10797], \"characters\": '⨭' },\n      \"&lotimes;\": { \"codepoints\": [10804], \"characters\": '⨴' },\n      \"&lowast;\": { \"codepoints\": [8727], \"characters\": '∗' },\n      \"&lowbar;\": { \"codepoints\": [95], \"characters\": '_' },\n      \"&LowerLeftArrow;\": { \"codepoints\": [8601], \"characters\": '↙' },\n      \"&LowerRightArrow;\": { \"codepoints\": [8600], \"characters\": '↘' },\n      \"&loz;\": { \"codepoints\": [9674], \"characters\": '◊' },\n      \"&lozenge;\": { \"codepoints\": [9674], \"characters\": '◊' },\n      \"&lozf;\": { \"codepoints\": [10731], \"characters\": '⧫' },\n      \"&lpar;\": { \"codepoints\": [40], \"characters\": '(' },\n      \"&lparlt;\": { \"codepoints\": [10643], \"characters\": '⦓' },\n      \"&lrarr;\": { \"codepoints\": [8646], \"characters\": '⇆' },\n      \"&lrcorner;\": { \"codepoints\": [8991], \"characters\": '⌟' },\n      \"&lrhar;\": { \"codepoints\": [8651], \"characters\": '⇋' },\n      \"&lrhard;\": { \"codepoints\": [10605], \"characters\": '⥭' },\n      \"&lrm;\": { \"codepoints\": [8206], \"characters\": '‎' },\n      \"&lrtri;\": { \"codepoints\": [8895], \"characters\": '⊿' },\n      \"&lsaquo;\": { \"codepoints\": [8249], \"characters\": '‹' },\n      \"&lscr;\": { \"codepoints\": [120001], \"characters\": '𝓁' },\n      \"&Lscr;\": { \"codepoints\": [8466], \"characters\": 'ℒ' },\n      \"&lsh;\": { \"codepoints\": [8624], \"characters\": '↰' },\n      \"&Lsh;\": { \"codepoints\": [8624], \"characters\": '↰' },\n      \"&lsim;\": { \"codepoints\": [8818], \"characters\": '≲' },\n      \"&lsime;\": { \"codepoints\": [10893], \"characters\": '⪍' },\n      \"&lsimg;\": { \"codepoints\": [10895], \"characters\": '⪏' },\n      \"&lsqb;\": { \"codepoints\": [91], \"characters\": '[' },\n      \"&lsquo;\": { \"codepoints\": [8216], \"characters\": '‘' },\n      \"&lsquor;\": { \"codepoints\": [8218], \"characters\": '‚' },\n      \"&Lstrok;\": { \"codepoints\": [321], \"characters\": 'Ł' },\n      \"&lstrok;\": { \"codepoints\": [322], \"characters\": 'ł' },\n      \"&ltcc;\": { \"codepoints\": [10918], \"characters\": '⪦' },\n      \"&ltcir;\": { \"codepoints\": [10873], \"characters\": '⩹' },\n      \"&lt;\": { \"codepoints\": [60], \"characters\": '<' },\n      \"&lt\": { \"codepoints\": [60], \"characters\": '<' },\n      \"&LT;\": { \"codepoints\": [60], \"characters\": '<' },\n      \"&LT\": { \"codepoints\": [60], \"characters\": '<' },\n      \"&Lt;\": { \"codepoints\": [8810], \"characters\": '≪' },\n      \"&ltdot;\": { \"codepoints\": [8918], \"characters\": '⋖' },\n      \"&lthree;\": { \"codepoints\": [8907], \"characters\": '⋋' },\n      \"&ltimes;\": { \"codepoints\": [8905], \"characters\": '⋉' },\n      \"&ltlarr;\": { \"codepoints\": [10614], \"characters\": '⥶' },\n      \"&ltquest;\": { \"codepoints\": [10875], \"characters\": '⩻' },\n      \"&ltri;\": { \"codepoints\": [9667], \"characters\": '◃' },\n      \"&ltrie;\": { \"codepoints\": [8884], \"characters\": '⊴' },\n      \"&ltrif;\": { \"codepoints\": [9666], \"characters\": '◂' },\n      \"&ltrPar;\": { \"codepoints\": [10646], \"characters\": '⦖' },\n      \"&lurdshar;\": { \"codepoints\": [10570], \"characters\": '⥊' },\n      \"&luruhar;\": { \"codepoints\": [10598], \"characters\": '⥦' },\n      \"&lvertneqq;\": { \"codepoints\": [8808, 65024], \"characters\": '≨︀' },\n      \"&lvnE;\": { \"codepoints\": [8808, 65024], \"characters\": '≨︀' },\n      \"&macr;\": { \"codepoints\": [175], \"characters\": '¯' },\n      \"&macr\": { \"codepoints\": [175], \"characters\": '¯' },\n      \"&male;\": { \"codepoints\": [9794], \"characters\": '♂' },\n      \"&malt;\": { \"codepoints\": [10016], \"characters\": '✠' },\n      \"&maltese;\": { \"codepoints\": [10016], \"characters\": '✠' },\n      \"&Map;\": { \"codepoints\": [10501], \"characters\": '⤅' },\n      \"&map;\": { \"codepoints\": [8614], \"characters\": '↦' },\n      \"&mapsto;\": { \"codepoints\": [8614], \"characters\": '↦' },\n      \"&mapstodown;\": { \"codepoints\": [8615], \"characters\": '↧' },\n      \"&mapstoleft;\": { \"codepoints\": [8612], \"characters\": '↤' },\n      \"&mapstoup;\": { \"codepoints\": [8613], \"characters\": '↥' },\n      \"&marker;\": { \"codepoints\": [9646], \"characters\": '▮' },\n      \"&mcomma;\": { \"codepoints\": [10793], \"characters\": '⨩' },\n      \"&Mcy;\": { \"codepoints\": [1052], \"characters\": 'М' },\n      \"&mcy;\": { \"codepoints\": [1084], \"characters\": 'м' },\n      \"&mdash;\": { \"codepoints\": [8212], \"characters\": '—' },\n      \"&mDDot;\": { \"codepoints\": [8762], \"characters\": '∺' },\n      \"&measuredangle;\": { \"codepoints\": [8737], \"characters\": '∡' },\n      \"&MediumSpace;\": { \"codepoints\": [8287], \"characters\": ' ' },\n      \"&Mellintrf;\": { \"codepoints\": [8499], \"characters\": 'ℳ' },\n      \"&Mfr;\": { \"codepoints\": [120080], \"characters\": '𝔐' },\n      \"&mfr;\": { \"codepoints\": [120106], \"characters\": '𝔪' },\n      \"&mho;\": { \"codepoints\": [8487], \"characters\": '℧' },\n      \"&micro;\": { \"codepoints\": [181], \"characters\": 'µ' },\n      \"&micro\": { \"codepoints\": [181], \"characters\": 'µ' },\n      \"&midast;\": { \"codepoints\": [42], \"characters\": '*' },\n      \"&midcir;\": { \"codepoints\": [10992], \"characters\": '⫰' },\n      \"&mid;\": { \"codepoints\": [8739], \"characters\": '∣' },\n      \"&middot;\": { \"codepoints\": [183], \"characters\": '·' },\n      \"&middot\": { \"codepoints\": [183], \"characters\": '·' },\n      \"&minusb;\": { \"codepoints\": [8863], \"characters\": '⊟' },\n      \"&minus;\": { \"codepoints\": [8722], \"characters\": '−' },\n      \"&minusd;\": { \"codepoints\": [8760], \"characters\": '∸' },\n      \"&minusdu;\": { \"codepoints\": [10794], \"characters\": '⨪' },\n      \"&MinusPlus;\": { \"codepoints\": [8723], \"characters\": '∓' },\n      \"&mlcp;\": { \"codepoints\": [10971], \"characters\": '⫛' },\n      \"&mldr;\": { \"codepoints\": [8230], \"characters\": '…' },\n      \"&mnplus;\": { \"codepoints\": [8723], \"characters\": '∓' },\n      \"&models;\": { \"codepoints\": [8871], \"characters\": '⊧' },\n      \"&Mopf;\": { \"codepoints\": [120132], \"characters\": '𝕄' },\n      \"&mopf;\": { \"codepoints\": [120158], \"characters\": '𝕞' },\n      \"&mp;\": { \"codepoints\": [8723], \"characters\": '∓' },\n      \"&mscr;\": { \"codepoints\": [120002], \"characters\": '𝓂' },\n      \"&Mscr;\": { \"codepoints\": [8499], \"characters\": 'ℳ' },\n      \"&mstpos;\": { \"codepoints\": [8766], \"characters\": '∾' },\n      \"&Mu;\": { \"codepoints\": [924], \"characters\": 'Μ' },\n      \"&mu;\": { \"codepoints\": [956], \"characters\": 'μ' },\n      \"&multimap;\": { \"codepoints\": [8888], \"characters\": '⊸' },\n      \"&mumap;\": { \"codepoints\": [8888], \"characters\": '⊸' },\n      \"&nabla;\": { \"codepoints\": [8711], \"characters\": '∇' },\n      \"&Nacute;\": { \"codepoints\": [323], \"characters\": 'Ń' },\n      \"&nacute;\": { \"codepoints\": [324], \"characters\": 'ń' },\n      \"&nang;\": { \"codepoints\": [8736, 8402], \"characters\": '∠⃒' },\n      \"&nap;\": { \"codepoints\": [8777], \"characters\": '≉' },\n      \"&napE;\": { \"codepoints\": [10864, 824], \"characters\": '⩰̸' },\n      \"&napid;\": { \"codepoints\": [8779, 824], \"characters\": '≋̸' },\n      \"&napos;\": { \"codepoints\": [329], \"characters\": 'ŉ' },\n      \"&napprox;\": { \"codepoints\": [8777], \"characters\": '≉' },\n      \"&natural;\": { \"codepoints\": [9838], \"characters\": '♮' },\n      \"&naturals;\": { \"codepoints\": [8469], \"characters\": 'ℕ' },\n      \"&natur;\": { \"codepoints\": [9838], \"characters\": '♮' },\n      \"&nbsp;\": { \"codepoints\": [160], \"characters\": ' ' },\n      \"&nbsp\": { \"codepoints\": [160], \"characters\": ' ' },\n      \"&nbump;\": { \"codepoints\": [8782, 824], \"characters\": '≎̸' },\n      \"&nbumpe;\": { \"codepoints\": [8783, 824], \"characters\": '≏̸' },\n      \"&ncap;\": { \"codepoints\": [10819], \"characters\": '⩃' },\n      \"&Ncaron;\": { \"codepoints\": [327], \"characters\": 'Ň' },\n      \"&ncaron;\": { \"codepoints\": [328], \"characters\": 'ň' },\n      \"&Ncedil;\": { \"codepoints\": [325], \"characters\": 'Ņ' },\n      \"&ncedil;\": { \"codepoints\": [326], \"characters\": 'ņ' },\n      \"&ncong;\": { \"codepoints\": [8775], \"characters\": '≇' },\n      \"&ncongdot;\": { \"codepoints\": [10861, 824], \"characters\": '⩭̸' },\n      \"&ncup;\": { \"codepoints\": [10818], \"characters\": '⩂' },\n      \"&Ncy;\": { \"codepoints\": [1053], \"characters\": 'Н' },\n      \"&ncy;\": { \"codepoints\": [1085], \"characters\": 'н' },\n      \"&ndash;\": { \"codepoints\": [8211], \"characters\": '–' },\n      \"&nearhk;\": { \"codepoints\": [10532], \"characters\": '⤤' },\n      \"&nearr;\": { \"codepoints\": [8599], \"characters\": '↗' },\n      \"&neArr;\": { \"codepoints\": [8663], \"characters\": '⇗' },\n      \"&nearrow;\": { \"codepoints\": [8599], \"characters\": '↗' },\n      \"&ne;\": { \"codepoints\": [8800], \"characters\": '≠' },\n      \"&nedot;\": { \"codepoints\": [8784, 824], \"characters\": '≐̸' },\n      \"&NegativeMediumSpace;\": { \"codepoints\": [8203], \"characters\": '​' },\n      \"&NegativeThickSpace;\": { \"codepoints\": [8203], \"characters\": '​' },\n      \"&NegativeThinSpace;\": { \"codepoints\": [8203], \"characters\": '​' },\n      \"&NegativeVeryThinSpace;\": { \"codepoints\": [8203], \"characters\": '​' },\n      \"&nequiv;\": { \"codepoints\": [8802], \"characters\": '≢' },\n      \"&nesear;\": { \"codepoints\": [10536], \"characters\": '⤨' },\n      \"&nesim;\": { \"codepoints\": [8770, 824], \"characters\": '≂̸' },\n      \"&NestedGreaterGreater;\": { \"codepoints\": [8811], \"characters\": '≫' },\n      \"&NestedLessLess;\": { \"codepoints\": [8810], \"characters\": '≪' },\n      \"&NewLine;\": { \"codepoints\": [10], \"characters\": '\\n' },\n      \"&nexist;\": { \"codepoints\": [8708], \"characters\": '∄' },\n      \"&nexists;\": { \"codepoints\": [8708], \"characters\": '∄' },\n      \"&Nfr;\": { \"codepoints\": [120081], \"characters\": '𝔑' },\n      \"&nfr;\": { \"codepoints\": [120107], \"characters\": '𝔫' },\n      \"&ngE;\": { \"codepoints\": [8807, 824], \"characters\": '≧̸' },\n      \"&nge;\": { \"codepoints\": [8817], \"characters\": '≱' },\n      \"&ngeq;\": { \"codepoints\": [8817], \"characters\": '≱' },\n      \"&ngeqq;\": { \"codepoints\": [8807, 824], \"characters\": '≧̸' },\n      \"&ngeqslant;\": { \"codepoints\": [10878, 824], \"characters\": '⩾̸' },\n      \"&nges;\": { \"codepoints\": [10878, 824], \"characters\": '⩾̸' },\n      \"&nGg;\": { \"codepoints\": [8921, 824], \"characters\": '⋙̸' },\n      \"&ngsim;\": { \"codepoints\": [8821], \"characters\": '≵' },\n      \"&nGt;\": { \"codepoints\": [8811, 8402], \"characters\": '≫⃒' },\n      \"&ngt;\": { \"codepoints\": [8815], \"characters\": '≯' },\n      \"&ngtr;\": { \"codepoints\": [8815], \"characters\": '≯' },\n      \"&nGtv;\": { \"codepoints\": [8811, 824], \"characters\": '≫̸' },\n      \"&nharr;\": { \"codepoints\": [8622], \"characters\": '↮' },\n      \"&nhArr;\": { \"codepoints\": [8654], \"characters\": '⇎' },\n      \"&nhpar;\": { \"codepoints\": [10994], \"characters\": '⫲' },\n      \"&ni;\": { \"codepoints\": [8715], \"characters\": '∋' },\n      \"&nis;\": { \"codepoints\": [8956], \"characters\": '⋼' },\n      \"&nisd;\": { \"codepoints\": [8954], \"characters\": '⋺' },\n      \"&niv;\": { \"codepoints\": [8715], \"characters\": '∋' },\n      \"&NJcy;\": { \"codepoints\": [1034], \"characters\": 'Њ' },\n      \"&njcy;\": { \"codepoints\": [1114], \"characters\": 'њ' },\n      \"&nlarr;\": { \"codepoints\": [8602], \"characters\": '↚' },\n      \"&nlArr;\": { \"codepoints\": [8653], \"characters\": '⇍' },\n      \"&nldr;\": { \"codepoints\": [8229], \"characters\": '‥' },\n      \"&nlE;\": { \"codepoints\": [8806, 824], \"characters\": '≦̸' },\n      \"&nle;\": { \"codepoints\": [8816], \"characters\": '≰' },\n      \"&nleftarrow;\": { \"codepoints\": [8602], \"characters\": '↚' },\n      \"&nLeftarrow;\": { \"codepoints\": [8653], \"characters\": '⇍' },\n      \"&nleftrightarrow;\": { \"codepoints\": [8622], \"characters\": '↮' },\n      \"&nLeftrightarrow;\": { \"codepoints\": [8654], \"characters\": '⇎' },\n      \"&nleq;\": { \"codepoints\": [8816], \"characters\": '≰' },\n      \"&nleqq;\": { \"codepoints\": [8806, 824], \"characters\": '≦̸' },\n      \"&nleqslant;\": { \"codepoints\": [10877, 824], \"characters\": '⩽̸' },\n      \"&nles;\": { \"codepoints\": [10877, 824], \"characters\": '⩽̸' },\n      \"&nless;\": { \"codepoints\": [8814], \"characters\": '≮' },\n      \"&nLl;\": { \"codepoints\": [8920, 824], \"characters\": '⋘̸' },\n      \"&nlsim;\": { \"codepoints\": [8820], \"characters\": '≴' },\n      \"&nLt;\": { \"codepoints\": [8810, 8402], \"characters\": '≪⃒' },\n      \"&nlt;\": { \"codepoints\": [8814], \"characters\": '≮' },\n      \"&nltri;\": { \"codepoints\": [8938], \"characters\": '⋪' },\n      \"&nltrie;\": { \"codepoints\": [8940], \"characters\": '⋬' },\n      \"&nLtv;\": { \"codepoints\": [8810, 824], \"characters\": '≪̸' },\n      \"&nmid;\": { \"codepoints\": [8740], \"characters\": '∤' },\n      \"&NoBreak;\": { \"codepoints\": [8288], \"characters\": '⁠' },\n      \"&NonBreakingSpace;\": { \"codepoints\": [160], \"characters\": ' ' },\n      \"&nopf;\": { \"codepoints\": [120159], \"characters\": '𝕟' },\n      \"&Nopf;\": { \"codepoints\": [8469], \"characters\": 'ℕ' },\n      \"&Not;\": { \"codepoints\": [10988], \"characters\": '⫬' },\n      \"&not;\": { \"codepoints\": [172], \"characters\": '¬' },\n      \"&not\": { \"codepoints\": [172], \"characters\": '¬' },\n      \"&NotCongruent;\": { \"codepoints\": [8802], \"characters\": '≢' },\n      \"&NotCupCap;\": { \"codepoints\": [8813], \"characters\": '≭' },\n      \"&NotDoubleVerticalBar;\": { \"codepoints\": [8742], \"characters\": '∦' },\n      \"&NotElement;\": { \"codepoints\": [8713], \"characters\": '∉' },\n      \"&NotEqual;\": { \"codepoints\": [8800], \"characters\": '≠' },\n      \"&NotEqualTilde;\": { \"codepoints\": [8770, 824], \"characters\": '≂̸' },\n      \"&NotExists;\": { \"codepoints\": [8708], \"characters\": '∄' },\n      \"&NotGreater;\": { \"codepoints\": [8815], \"characters\": '≯' },\n      \"&NotGreaterEqual;\": { \"codepoints\": [8817], \"characters\": '≱' },\n      \"&NotGreaterFullEqual;\": { \"codepoints\": [8807, 824], \"characters\": '≧̸' },\n      \"&NotGreaterGreater;\": { \"codepoints\": [8811, 824], \"characters\": '≫̸' },\n      \"&NotGreaterLess;\": { \"codepoints\": [8825], \"characters\": '≹' },\n      \"&NotGreaterSlantEqual;\": { \"codepoints\": [10878, 824], \"characters\": '⩾̸' },\n      \"&NotGreaterTilde;\": { \"codepoints\": [8821], \"characters\": '≵' },\n      \"&NotHumpDownHump;\": { \"codepoints\": [8782, 824], \"characters\": '≎̸' },\n      \"&NotHumpEqual;\": { \"codepoints\": [8783, 824], \"characters\": '≏̸' },\n      \"&notin;\": { \"codepoints\": [8713], \"characters\": '∉' },\n      \"&notindot;\": { \"codepoints\": [8949, 824], \"characters\": '⋵̸' },\n      \"&notinE;\": { \"codepoints\": [8953, 824], \"characters\": '⋹̸' },\n      \"&notinva;\": { \"codepoints\": [8713], \"characters\": '∉' },\n      \"&notinvb;\": { \"codepoints\": [8951], \"characters\": '⋷' },\n      \"&notinvc;\": { \"codepoints\": [8950], \"characters\": '⋶' },\n      \"&NotLeftTriangleBar;\": { \"codepoints\": [10703, 824], \"characters\": '⧏̸' },\n      \"&NotLeftTriangle;\": { \"codepoints\": [8938], \"characters\": '⋪' },\n      \"&NotLeftTriangleEqual;\": { \"codepoints\": [8940], \"characters\": '⋬' },\n      \"&NotLess;\": { \"codepoints\": [8814], \"characters\": '≮' },\n      \"&NotLessEqual;\": { \"codepoints\": [8816], \"characters\": '≰' },\n      \"&NotLessGreater;\": { \"codepoints\": [8824], \"characters\": '≸' },\n      \"&NotLessLess;\": { \"codepoints\": [8810, 824], \"characters\": '≪̸' },\n      \"&NotLessSlantEqual;\": { \"codepoints\": [10877, 824], \"characters\": '⩽̸' },\n      \"&NotLessTilde;\": { \"codepoints\": [8820], \"characters\": '≴' },\n      \"&NotNestedGreaterGreater;\": { \"codepoints\": [10914, 824], \"characters\": '⪢̸' },\n      \"&NotNestedLessLess;\": { \"codepoints\": [10913, 824], \"characters\": '⪡̸' },\n      \"&notni;\": { \"codepoints\": [8716], \"characters\": '∌' },\n      \"&notniva;\": { \"codepoints\": [8716], \"characters\": '∌' },\n      \"&notnivb;\": { \"codepoints\": [8958], \"characters\": '⋾' },\n      \"&notnivc;\": { \"codepoints\": [8957], \"characters\": '⋽' },\n      \"&NotPrecedes;\": { \"codepoints\": [8832], \"characters\": '⊀' },\n      \"&NotPrecedesEqual;\": { \"codepoints\": [10927, 824], \"characters\": '⪯̸' },\n      \"&NotPrecedesSlantEqual;\": { \"codepoints\": [8928], \"characters\": '⋠' },\n      \"&NotReverseElement;\": { \"codepoints\": [8716], \"characters\": '∌' },\n      \"&NotRightTriangleBar;\": { \"codepoints\": [10704, 824], \"characters\": '⧐̸' },\n      \"&NotRightTriangle;\": { \"codepoints\": [8939], \"characters\": '⋫' },\n      \"&NotRightTriangleEqual;\": { \"codepoints\": [8941], \"characters\": '⋭' },\n      \"&NotSquareSubset;\": { \"codepoints\": [8847, 824], \"characters\": '⊏̸' },\n      \"&NotSquareSubsetEqual;\": { \"codepoints\": [8930], \"characters\": '⋢' },\n      \"&NotSquareSuperset;\": { \"codepoints\": [8848, 824], \"characters\": '⊐̸' },\n      \"&NotSquareSupersetEqual;\": { \"codepoints\": [8931], \"characters\": '⋣' },\n      \"&NotSubset;\": { \"codepoints\": [8834, 8402], \"characters\": '⊂⃒' },\n      \"&NotSubsetEqual;\": { \"codepoints\": [8840], \"characters\": '⊈' },\n      \"&NotSucceeds;\": { \"codepoints\": [8833], \"characters\": '⊁' },\n      \"&NotSucceedsEqual;\": { \"codepoints\": [10928, 824], \"characters\": '⪰̸' },\n      \"&NotSucceedsSlantEqual;\": { \"codepoints\": [8929], \"characters\": '⋡' },\n      \"&NotSucceedsTilde;\": { \"codepoints\": [8831, 824], \"characters\": '≿̸' },\n      \"&NotSuperset;\": { \"codepoints\": [8835, 8402], \"characters\": '⊃⃒' },\n      \"&NotSupersetEqual;\": { \"codepoints\": [8841], \"characters\": '⊉' },\n      \"&NotTilde;\": { \"codepoints\": [8769], \"characters\": '≁' },\n      \"&NotTildeEqual;\": { \"codepoints\": [8772], \"characters\": '≄' },\n      \"&NotTildeFullEqual;\": { \"codepoints\": [8775], \"characters\": '≇' },\n      \"&NotTildeTilde;\": { \"codepoints\": [8777], \"characters\": '≉' },\n      \"&NotVerticalBar;\": { \"codepoints\": [8740], \"characters\": '∤' },\n      \"&nparallel;\": { \"codepoints\": [8742], \"characters\": '∦' },\n      \"&npar;\": { \"codepoints\": [8742], \"characters\": '∦' },\n      \"&nparsl;\": { \"codepoints\": [11005, 8421], \"characters\": '⫽⃥' },\n      \"&npart;\": { \"codepoints\": [8706, 824], \"characters\": '∂̸' },\n      \"&npolint;\": { \"codepoints\": [10772], \"characters\": '⨔' },\n      \"&npr;\": { \"codepoints\": [8832], \"characters\": '⊀' },\n      \"&nprcue;\": { \"codepoints\": [8928], \"characters\": '⋠' },\n      \"&nprec;\": { \"codepoints\": [8832], \"characters\": '⊀' },\n      \"&npreceq;\": { \"codepoints\": [10927, 824], \"characters\": '⪯̸' },\n      \"&npre;\": { \"codepoints\": [10927, 824], \"characters\": '⪯̸' },\n      \"&nrarrc;\": { \"codepoints\": [10547, 824], \"characters\": '⤳̸' },\n      \"&nrarr;\": { \"codepoints\": [8603], \"characters\": '↛' },\n      \"&nrArr;\": { \"codepoints\": [8655], \"characters\": '⇏' },\n      \"&nrarrw;\": { \"codepoints\": [8605, 824], \"characters\": '↝̸' },\n      \"&nrightarrow;\": { \"codepoints\": [8603], \"characters\": '↛' },\n      \"&nRightarrow;\": { \"codepoints\": [8655], \"characters\": '⇏' },\n      \"&nrtri;\": { \"codepoints\": [8939], \"characters\": '⋫' },\n      \"&nrtrie;\": { \"codepoints\": [8941], \"characters\": '⋭' },\n      \"&nsc;\": { \"codepoints\": [8833], \"characters\": '⊁' },\n      \"&nsccue;\": { \"codepoints\": [8929], \"characters\": '⋡' },\n      \"&nsce;\": { \"codepoints\": [10928, 824], \"characters\": '⪰̸' },\n      \"&Nscr;\": { \"codepoints\": [119977], \"characters\": '𝒩' },\n      \"&nscr;\": { \"codepoints\": [120003], \"characters\": '𝓃' },\n      \"&nshortmid;\": { \"codepoints\": [8740], \"characters\": '∤' },\n      \"&nshortparallel;\": { \"codepoints\": [8742], \"characters\": '∦' },\n      \"&nsim;\": { \"codepoints\": [8769], \"characters\": '≁' },\n      \"&nsime;\": { \"codepoints\": [8772], \"characters\": '≄' },\n      \"&nsimeq;\": { \"codepoints\": [8772], \"characters\": '≄' },\n      \"&nsmid;\": { \"codepoints\": [8740], \"characters\": '∤' },\n      \"&nspar;\": { \"codepoints\": [8742], \"characters\": '∦' },\n      \"&nsqsube;\": { \"codepoints\": [8930], \"characters\": '⋢' },\n      \"&nsqsupe;\": { \"codepoints\": [8931], \"characters\": '⋣' },\n      \"&nsub;\": { \"codepoints\": [8836], \"characters\": '⊄' },\n      \"&nsubE;\": { \"codepoints\": [10949, 824], \"characters\": '⫅̸' },\n      \"&nsube;\": { \"codepoints\": [8840], \"characters\": '⊈' },\n      \"&nsubset;\": { \"codepoints\": [8834, 8402], \"characters\": '⊂⃒' },\n      \"&nsubseteq;\": { \"codepoints\": [8840], \"characters\": '⊈' },\n      \"&nsubseteqq;\": { \"codepoints\": [10949, 824], \"characters\": '⫅̸' },\n      \"&nsucc;\": { \"codepoints\": [8833], \"characters\": '⊁' },\n      \"&nsucceq;\": { \"codepoints\": [10928, 824], \"characters\": '⪰̸' },\n      \"&nsup;\": { \"codepoints\": [8837], \"characters\": '⊅' },\n      \"&nsupE;\": { \"codepoints\": [10950, 824], \"characters\": '⫆̸' },\n      \"&nsupe;\": { \"codepoints\": [8841], \"characters\": '⊉' },\n      \"&nsupset;\": { \"codepoints\": [8835, 8402], \"characters\": '⊃⃒' },\n      \"&nsupseteq;\": { \"codepoints\": [8841], \"characters\": '⊉' },\n      \"&nsupseteqq;\": { \"codepoints\": [10950, 824], \"characters\": '⫆̸' },\n      \"&ntgl;\": { \"codepoints\": [8825], \"characters\": '≹' },\n      \"&Ntilde;\": { \"codepoints\": [209], \"characters\": 'Ñ' },\n      \"&Ntilde\": { \"codepoints\": [209], \"characters\": 'Ñ' },\n      \"&ntilde;\": { \"codepoints\": [241], \"characters\": 'ñ' },\n      \"&ntilde\": { \"codepoints\": [241], \"characters\": 'ñ' },\n      \"&ntlg;\": { \"codepoints\": [8824], \"characters\": '≸' },\n      \"&ntriangleleft;\": { \"codepoints\": [8938], \"characters\": '⋪' },\n      \"&ntrianglelefteq;\": { \"codepoints\": [8940], \"characters\": '⋬' },\n      \"&ntriangleright;\": { \"codepoints\": [8939], \"characters\": '⋫' },\n      \"&ntrianglerighteq;\": { \"codepoints\": [8941], \"characters\": '⋭' },\n      \"&Nu;\": { \"codepoints\": [925], \"characters\": 'Ν' },\n      \"&nu;\": { \"codepoints\": [957], \"characters\": 'ν' },\n      \"&num;\": { \"codepoints\": [35], \"characters\": '#' },\n      \"&numero;\": { \"codepoints\": [8470], \"characters\": '№' },\n      \"&numsp;\": { \"codepoints\": [8199], \"characters\": ' ' },\n      \"&nvap;\": { \"codepoints\": [8781, 8402], \"characters\": '≍⃒' },\n      \"&nvdash;\": { \"codepoints\": [8876], \"characters\": '⊬' },\n      \"&nvDash;\": { \"codepoints\": [8877], \"characters\": '⊭' },\n      \"&nVdash;\": { \"codepoints\": [8878], \"characters\": '⊮' },\n      \"&nVDash;\": { \"codepoints\": [8879], \"characters\": '⊯' },\n      \"&nvge;\": { \"codepoints\": [8805, 8402], \"characters\": '≥⃒' },\n      \"&nvgt;\": { \"codepoints\": [62, 8402], \"characters\": '>⃒' },\n      \"&nvHarr;\": { \"codepoints\": [10500], \"characters\": '⤄' },\n      \"&nvinfin;\": { \"codepoints\": [10718], \"characters\": '⧞' },\n      \"&nvlArr;\": { \"codepoints\": [10498], \"characters\": '⤂' },\n      \"&nvle;\": { \"codepoints\": [8804, 8402], \"characters\": '≤⃒' },\n      \"&nvlt;\": { \"codepoints\": [60, 8402], \"characters\": '<⃒' },\n      \"&nvltrie;\": { \"codepoints\": [8884, 8402], \"characters\": '⊴⃒' },\n      \"&nvrArr;\": { \"codepoints\": [10499], \"characters\": '⤃' },\n      \"&nvrtrie;\": { \"codepoints\": [8885, 8402], \"characters\": '⊵⃒' },\n      \"&nvsim;\": { \"codepoints\": [8764, 8402], \"characters\": '∼⃒' },\n      \"&nwarhk;\": { \"codepoints\": [10531], \"characters\": '⤣' },\n      \"&nwarr;\": { \"codepoints\": [8598], \"characters\": '↖' },\n      \"&nwArr;\": { \"codepoints\": [8662], \"characters\": '⇖' },\n      \"&nwarrow;\": { \"codepoints\": [8598], \"characters\": '↖' },\n      \"&nwnear;\": { \"codepoints\": [10535], \"characters\": '⤧' },\n      \"&Oacute;\": { \"codepoints\": [211], \"characters\": 'Ó' },\n      \"&Oacute\": { \"codepoints\": [211], \"characters\": 'Ó' },\n      \"&oacute;\": { \"codepoints\": [243], \"characters\": 'ó' },\n      \"&oacute\": { \"codepoints\": [243], \"characters\": 'ó' },\n      \"&oast;\": { \"codepoints\": [8859], \"characters\": '⊛' },\n      \"&Ocirc;\": { \"codepoints\": [212], \"characters\": 'Ô' },\n      \"&Ocirc\": { \"codepoints\": [212], \"characters\": 'Ô' },\n      \"&ocirc;\": { \"codepoints\": [244], \"characters\": 'ô' },\n      \"&ocirc\": { \"codepoints\": [244], \"characters\": 'ô' },\n      \"&ocir;\": { \"codepoints\": [8858], \"characters\": '⊚' },\n      \"&Ocy;\": { \"codepoints\": [1054], \"characters\": 'О' },\n      \"&ocy;\": { \"codepoints\": [1086], \"characters\": 'о' },\n      \"&odash;\": { \"codepoints\": [8861], \"characters\": '⊝' },\n      \"&Odblac;\": { \"codepoints\": [336], \"characters\": 'Ő' },\n      \"&odblac;\": { \"codepoints\": [337], \"characters\": 'ő' },\n      \"&odiv;\": { \"codepoints\": [10808], \"characters\": '⨸' },\n      \"&odot;\": { \"codepoints\": [8857], \"characters\": '⊙' },\n      \"&odsold;\": { \"codepoints\": [10684], \"characters\": '⦼' },\n      \"&OElig;\": { \"codepoints\": [338], \"characters\": 'Œ' },\n      \"&oelig;\": { \"codepoints\": [339], \"characters\": 'œ' },\n      \"&ofcir;\": { \"codepoints\": [10687], \"characters\": '⦿' },\n      \"&Ofr;\": { \"codepoints\": [120082], \"characters\": '𝔒' },\n      \"&ofr;\": { \"codepoints\": [120108], \"characters\": '𝔬' },\n      \"&ogon;\": { \"codepoints\": [731], \"characters\": '˛' },\n      \"&Ograve;\": { \"codepoints\": [210], \"characters\": 'Ò' },\n      \"&Ograve\": { \"codepoints\": [210], \"characters\": 'Ò' },\n      \"&ograve;\": { \"codepoints\": [242], \"characters\": 'ò' },\n      \"&ograve\": { \"codepoints\": [242], \"characters\": 'ò' },\n      \"&ogt;\": { \"codepoints\": [10689], \"characters\": '⧁' },\n      \"&ohbar;\": { \"codepoints\": [10677], \"characters\": '⦵' },\n      \"&ohm;\": { \"codepoints\": [937], \"characters\": 'Ω' },\n      \"&oint;\": { \"codepoints\": [8750], \"characters\": '∮' },\n      \"&olarr;\": { \"codepoints\": [8634], \"characters\": '↺' },\n      \"&olcir;\": { \"codepoints\": [10686], \"characters\": '⦾' },\n      \"&olcross;\": { \"codepoints\": [10683], \"characters\": '⦻' },\n      \"&oline;\": { \"codepoints\": [8254], \"characters\": '‾' },\n      \"&olt;\": { \"codepoints\": [10688], \"characters\": '⧀' },\n      \"&Omacr;\": { \"codepoints\": [332], \"characters\": 'Ō' },\n      \"&omacr;\": { \"codepoints\": [333], \"characters\": 'ō' },\n      \"&Omega;\": { \"codepoints\": [937], \"characters\": 'Ω' },\n      \"&omega;\": { \"codepoints\": [969], \"characters\": 'ω' },\n      \"&Omicron;\": { \"codepoints\": [927], \"characters\": 'Ο' },\n      \"&omicron;\": { \"codepoints\": [959], \"characters\": 'ο' },\n      \"&omid;\": { \"codepoints\": [10678], \"characters\": '⦶' },\n      \"&ominus;\": { \"codepoints\": [8854], \"characters\": '⊖' },\n      \"&Oopf;\": { \"codepoints\": [120134], \"characters\": '𝕆' },\n      \"&oopf;\": { \"codepoints\": [120160], \"characters\": '𝕠' },\n      \"&opar;\": { \"codepoints\": [10679], \"characters\": '⦷' },\n      \"&OpenCurlyDoubleQuote;\": { \"codepoints\": [8220], \"characters\": '“' },\n      \"&OpenCurlyQuote;\": { \"codepoints\": [8216], \"characters\": '‘' },\n      \"&operp;\": { \"codepoints\": [10681], \"characters\": '⦹' },\n      \"&oplus;\": { \"codepoints\": [8853], \"characters\": '⊕' },\n      \"&orarr;\": { \"codepoints\": [8635], \"characters\": '↻' },\n      \"&Or;\": { \"codepoints\": [10836], \"characters\": '⩔' },\n      \"&or;\": { \"codepoints\": [8744], \"characters\": '∨' },\n      \"&ord;\": { \"codepoints\": [10845], \"characters\": '⩝' },\n      \"&order;\": { \"codepoints\": [8500], \"characters\": 'ℴ' },\n      \"&orderof;\": { \"codepoints\": [8500], \"characters\": 'ℴ' },\n      \"&ordf;\": { \"codepoints\": [170], \"characters\": 'ª' },\n      \"&ordf\": { \"codepoints\": [170], \"characters\": 'ª' },\n      \"&ordm;\": { \"codepoints\": [186], \"characters\": 'º' },\n      \"&ordm\": { \"codepoints\": [186], \"characters\": 'º' },\n      \"&origof;\": { \"codepoints\": [8886], \"characters\": '⊶' },\n      \"&oror;\": { \"codepoints\": [10838], \"characters\": '⩖' },\n      \"&orslope;\": { \"codepoints\": [10839], \"characters\": '⩗' },\n      \"&orv;\": { \"codepoints\": [10843], \"characters\": '⩛' },\n      \"&oS;\": { \"codepoints\": [9416], \"characters\": 'Ⓢ' },\n      \"&Oscr;\": { \"codepoints\": [119978], \"characters\": '𝒪' },\n      \"&oscr;\": { \"codepoints\": [8500], \"characters\": 'ℴ' },\n      \"&Oslash;\": { \"codepoints\": [216], \"characters\": 'Ø' },\n      \"&Oslash\": { \"codepoints\": [216], \"characters\": 'Ø' },\n      \"&oslash;\": { \"codepoints\": [248], \"characters\": 'ø' },\n      \"&oslash\": { \"codepoints\": [248], \"characters\": 'ø' },\n      \"&osol;\": { \"codepoints\": [8856], \"characters\": '⊘' },\n      \"&Otilde;\": { \"codepoints\": [213], \"characters\": 'Õ' },\n      \"&Otilde\": { \"codepoints\": [213], \"characters\": 'Õ' },\n      \"&otilde;\": { \"codepoints\": [245], \"characters\": 'õ' },\n      \"&otilde\": { \"codepoints\": [245], \"characters\": 'õ' },\n      \"&otimesas;\": { \"codepoints\": [10806], \"characters\": '⨶' },\n      \"&Otimes;\": { \"codepoints\": [10807], \"characters\": '⨷' },\n      \"&otimes;\": { \"codepoints\": [8855], \"characters\": '⊗' },\n      \"&Ouml;\": { \"codepoints\": [214], \"characters\": 'Ö' },\n      \"&Ouml\": { \"codepoints\": [214], \"characters\": 'Ö' },\n      \"&ouml;\": { \"codepoints\": [246], \"characters\": 'ö' },\n      \"&ouml\": { \"codepoints\": [246], \"characters\": 'ö' },\n      \"&ovbar;\": { \"codepoints\": [9021], \"characters\": '⌽' },\n      \"&OverBar;\": { \"codepoints\": [8254], \"characters\": '‾' },\n      \"&OverBrace;\": { \"codepoints\": [9182], \"characters\": '⏞' },\n      \"&OverBracket;\": { \"codepoints\": [9140], \"characters\": '⎴' },\n      \"&OverParenthesis;\": { \"codepoints\": [9180], \"characters\": '⏜' },\n      \"&para;\": { \"codepoints\": [182], \"characters\": '¶' },\n      \"&para\": { \"codepoints\": [182], \"characters\": '¶' },\n      \"&parallel;\": { \"codepoints\": [8741], \"characters\": '∥' },\n      \"&par;\": { \"codepoints\": [8741], \"characters\": '∥' },\n      \"&parsim;\": { \"codepoints\": [10995], \"characters\": '⫳' },\n      \"&parsl;\": { \"codepoints\": [11005], \"characters\": '⫽' },\n      \"&part;\": { \"codepoints\": [8706], \"characters\": '∂' },\n      \"&PartialD;\": { \"codepoints\": [8706], \"characters\": '∂' },\n      \"&Pcy;\": { \"codepoints\": [1055], \"characters\": 'П' },\n      \"&pcy;\": { \"codepoints\": [1087], \"characters\": 'п' },\n      \"&percnt;\": { \"codepoints\": [37], \"characters\": '%' },\n      \"&period;\": { \"codepoints\": [46], \"characters\": '.' },\n      \"&permil;\": { \"codepoints\": [8240], \"characters\": '‰' },\n      \"&perp;\": { \"codepoints\": [8869], \"characters\": '⊥' },\n      \"&pertenk;\": { \"codepoints\": [8241], \"characters\": '‱' },\n      \"&Pfr;\": { \"codepoints\": [120083], \"characters\": '𝔓' },\n      \"&pfr;\": { \"codepoints\": [120109], \"characters\": '𝔭' },\n      \"&Phi;\": { \"codepoints\": [934], \"characters\": 'Φ' },\n      \"&phi;\": { \"codepoints\": [966], \"characters\": 'φ' },\n      \"&phiv;\": { \"codepoints\": [981], \"characters\": 'ϕ' },\n      \"&phmmat;\": { \"codepoints\": [8499], \"characters\": 'ℳ' },\n      \"&phone;\": { \"codepoints\": [9742], \"characters\": '☎' },\n      \"&Pi;\": { \"codepoints\": [928], \"characters\": 'Π' },\n      \"&pi;\": { \"codepoints\": [960], \"characters\": 'π' },\n      \"&pitchfork;\": { \"codepoints\": [8916], \"characters\": '⋔' },\n      \"&piv;\": { \"codepoints\": [982], \"characters\": 'ϖ' },\n      \"&planck;\": { \"codepoints\": [8463], \"characters\": 'ℏ' },\n      \"&planckh;\": { \"codepoints\": [8462], \"characters\": 'ℎ' },\n      \"&plankv;\": { \"codepoints\": [8463], \"characters\": 'ℏ' },\n      \"&plusacir;\": { \"codepoints\": [10787], \"characters\": '⨣' },\n      \"&plusb;\": { \"codepoints\": [8862], \"characters\": '⊞' },\n      \"&pluscir;\": { \"codepoints\": [10786], \"characters\": '⨢' },\n      \"&plus;\": { \"codepoints\": [43], \"characters\": '+' },\n      \"&plusdo;\": { \"codepoints\": [8724], \"characters\": '∔' },\n      \"&plusdu;\": { \"codepoints\": [10789], \"characters\": '⨥' },\n      \"&pluse;\": { \"codepoints\": [10866], \"characters\": '⩲' },\n      \"&PlusMinus;\": { \"codepoints\": [177], \"characters\": '±' },\n      \"&plusmn;\": { \"codepoints\": [177], \"characters\": '±' },\n      \"&plusmn\": { \"codepoints\": [177], \"characters\": '±' },\n      \"&plussim;\": { \"codepoints\": [10790], \"characters\": '⨦' },\n      \"&plustwo;\": { \"codepoints\": [10791], \"characters\": '⨧' },\n      \"&pm;\": { \"codepoints\": [177], \"characters\": '±' },\n      \"&Poincareplane;\": { \"codepoints\": [8460], \"characters\": 'ℌ' },\n      \"&pointint;\": { \"codepoints\": [10773], \"characters\": '⨕' },\n      \"&popf;\": { \"codepoints\": [120161], \"characters\": '𝕡' },\n      \"&Popf;\": { \"codepoints\": [8473], \"characters\": 'ℙ' },\n      \"&pound;\": { \"codepoints\": [163], \"characters\": '£' },\n      \"&pound\": { \"codepoints\": [163], \"characters\": '£' },\n      \"&prap;\": { \"codepoints\": [10935], \"characters\": '⪷' },\n      \"&Pr;\": { \"codepoints\": [10939], \"characters\": '⪻' },\n      \"&pr;\": { \"codepoints\": [8826], \"characters\": '≺' },\n      \"&prcue;\": { \"codepoints\": [8828], \"characters\": '≼' },\n      \"&precapprox;\": { \"codepoints\": [10935], \"characters\": '⪷' },\n      \"&prec;\": { \"codepoints\": [8826], \"characters\": '≺' },\n      \"&preccurlyeq;\": { \"codepoints\": [8828], \"characters\": '≼' },\n      \"&Precedes;\": { \"codepoints\": [8826], \"characters\": '≺' },\n      \"&PrecedesEqual;\": { \"codepoints\": [10927], \"characters\": '⪯' },\n      \"&PrecedesSlantEqual;\": { \"codepoints\": [8828], \"characters\": '≼' },\n      \"&PrecedesTilde;\": { \"codepoints\": [8830], \"characters\": '≾' },\n      \"&preceq;\": { \"codepoints\": [10927], \"characters\": '⪯' },\n      \"&precnapprox;\": { \"codepoints\": [10937], \"characters\": '⪹' },\n      \"&precneqq;\": { \"codepoints\": [10933], \"characters\": '⪵' },\n      \"&precnsim;\": { \"codepoints\": [8936], \"characters\": '⋨' },\n      \"&pre;\": { \"codepoints\": [10927], \"characters\": '⪯' },\n      \"&prE;\": { \"codepoints\": [10931], \"characters\": '⪳' },\n      \"&precsim;\": { \"codepoints\": [8830], \"characters\": '≾' },\n      \"&prime;\": { \"codepoints\": [8242], \"characters\": '′' },\n      \"&Prime;\": { \"codepoints\": [8243], \"characters\": '″' },\n      \"&primes;\": { \"codepoints\": [8473], \"characters\": 'ℙ' },\n      \"&prnap;\": { \"codepoints\": [10937], \"characters\": '⪹' },\n      \"&prnE;\": { \"codepoints\": [10933], \"characters\": '⪵' },\n      \"&prnsim;\": { \"codepoints\": [8936], \"characters\": '⋨' },\n      \"&prod;\": { \"codepoints\": [8719], \"characters\": '∏' },\n      \"&Product;\": { \"codepoints\": [8719], \"characters\": '∏' },\n      \"&profalar;\": { \"codepoints\": [9006], \"characters\": '⌮' },\n      \"&profline;\": { \"codepoints\": [8978], \"characters\": '⌒' },\n      \"&profsurf;\": { \"codepoints\": [8979], \"characters\": '⌓' },\n      \"&prop;\": { \"codepoints\": [8733], \"characters\": '∝' },\n      \"&Proportional;\": { \"codepoints\": [8733], \"characters\": '∝' },\n      \"&Proportion;\": { \"codepoints\": [8759], \"characters\": '∷' },\n      \"&propto;\": { \"codepoints\": [8733], \"characters\": '∝' },\n      \"&prsim;\": { \"codepoints\": [8830], \"characters\": '≾' },\n      \"&prurel;\": { \"codepoints\": [8880], \"characters\": '⊰' },\n      \"&Pscr;\": { \"codepoints\": [119979], \"characters\": '𝒫' },\n      \"&pscr;\": { \"codepoints\": [120005], \"characters\": '𝓅' },\n      \"&Psi;\": { \"codepoints\": [936], \"characters\": 'Ψ' },\n      \"&psi;\": { \"codepoints\": [968], \"characters\": 'ψ' },\n      \"&puncsp;\": { \"codepoints\": [8200], \"characters\": ' ' },\n      \"&Qfr;\": { \"codepoints\": [120084], \"characters\": '𝔔' },\n      \"&qfr;\": { \"codepoints\": [120110], \"characters\": '𝔮' },\n      \"&qint;\": { \"codepoints\": [10764], \"characters\": '⨌' },\n      \"&qopf;\": { \"codepoints\": [120162], \"characters\": '𝕢' },\n      \"&Qopf;\": { \"codepoints\": [8474], \"characters\": 'ℚ' },\n      \"&qprime;\": { \"codepoints\": [8279], \"characters\": '⁗' },\n      \"&Qscr;\": { \"codepoints\": [119980], \"characters\": '𝒬' },\n      \"&qscr;\": { \"codepoints\": [120006], \"characters\": '𝓆' },\n      \"&quaternions;\": { \"codepoints\": [8461], \"characters\": 'ℍ' },\n      \"&quatint;\": { \"codepoints\": [10774], \"characters\": '⨖' },\n      \"&quest;\": { \"codepoints\": [63], \"characters\": '?' },\n      \"&questeq;\": { \"codepoints\": [8799], \"characters\": '≟' },\n      \"&quot;\": { \"codepoints\": [34], \"characters\": '\"' },\n      \"&quot\": { \"codepoints\": [34], \"characters\": '\"' },\n      \"&QUOT;\": { \"codepoints\": [34], \"characters\": '\"' },\n      \"&QUOT\": { \"codepoints\": [34], \"characters\": '\"' },\n      \"&rAarr;\": { \"codepoints\": [8667], \"characters\": '⇛' },\n      \"&race;\": { \"codepoints\": [8765, 817], \"characters\": '∽̱' },\n      \"&Racute;\": { \"codepoints\": [340], \"characters\": 'Ŕ' },\n      \"&racute;\": { \"codepoints\": [341], \"characters\": 'ŕ' },\n      \"&radic;\": { \"codepoints\": [8730], \"characters\": '√' },\n      \"&raemptyv;\": { \"codepoints\": [10675], \"characters\": '⦳' },\n      \"&rang;\": { \"codepoints\": [10217], \"characters\": '⟩' },\n      \"&Rang;\": { \"codepoints\": [10219], \"characters\": '⟫' },\n      \"&rangd;\": { \"codepoints\": [10642], \"characters\": '⦒' },\n      \"&range;\": { \"codepoints\": [10661], \"characters\": '⦥' },\n      \"&rangle;\": { \"codepoints\": [10217], \"characters\": '⟩' },\n      \"&raquo;\": { \"codepoints\": [187], \"characters\": '»' },\n      \"&raquo\": { \"codepoints\": [187], \"characters\": '»' },\n      \"&rarrap;\": { \"codepoints\": [10613], \"characters\": '⥵' },\n      \"&rarrb;\": { \"codepoints\": [8677], \"characters\": '⇥' },\n      \"&rarrbfs;\": { \"codepoints\": [10528], \"characters\": '⤠' },\n      \"&rarrc;\": { \"codepoints\": [10547], \"characters\": '⤳' },\n      \"&rarr;\": { \"codepoints\": [8594], \"characters\": '→' },\n      \"&Rarr;\": { \"codepoints\": [8608], \"characters\": '↠' },\n      \"&rArr;\": { \"codepoints\": [8658], \"characters\": '⇒' },\n      \"&rarrfs;\": { \"codepoints\": [10526], \"characters\": '⤞' },\n      \"&rarrhk;\": { \"codepoints\": [8618], \"characters\": '↪' },\n      \"&rarrlp;\": { \"codepoints\": [8620], \"characters\": '↬' },\n      \"&rarrpl;\": { \"codepoints\": [10565], \"characters\": '⥅' },\n      \"&rarrsim;\": { \"codepoints\": [10612], \"characters\": '⥴' },\n      \"&Rarrtl;\": { \"codepoints\": [10518], \"characters\": '⤖' },\n      \"&rarrtl;\": { \"codepoints\": [8611], \"characters\": '↣' },\n      \"&rarrw;\": { \"codepoints\": [8605], \"characters\": '↝' },\n      \"&ratail;\": { \"codepoints\": [10522], \"characters\": '⤚' },\n      \"&rAtail;\": { \"codepoints\": [10524], \"characters\": '⤜' },\n      \"&ratio;\": { \"codepoints\": [8758], \"characters\": '∶' },\n      \"&rationals;\": { \"codepoints\": [8474], \"characters\": 'ℚ' },\n      \"&rbarr;\": { \"codepoints\": [10509], \"characters\": '⤍' },\n      \"&rBarr;\": { \"codepoints\": [10511], \"characters\": '⤏' },\n      \"&RBarr;\": { \"codepoints\": [10512], \"characters\": '⤐' },\n      \"&rbbrk;\": { \"codepoints\": [10099], \"characters\": '❳' },\n      \"&rbrace;\": { \"codepoints\": [125], \"characters\": '}' },\n      \"&rbrack;\": { \"codepoints\": [93], \"characters\": ']' },\n      \"&rbrke;\": { \"codepoints\": [10636], \"characters\": '⦌' },\n      \"&rbrksld;\": { \"codepoints\": [10638], \"characters\": '⦎' },\n      \"&rbrkslu;\": { \"codepoints\": [10640], \"characters\": '⦐' },\n      \"&Rcaron;\": { \"codepoints\": [344], \"characters\": 'Ř' },\n      \"&rcaron;\": { \"codepoints\": [345], \"characters\": 'ř' },\n      \"&Rcedil;\": { \"codepoints\": [342], \"characters\": 'Ŗ' },\n      \"&rcedil;\": { \"codepoints\": [343], \"characters\": 'ŗ' },\n      \"&rceil;\": { \"codepoints\": [8969], \"characters\": '⌉' },\n      \"&rcub;\": { \"codepoints\": [125], \"characters\": '}' },\n      \"&Rcy;\": { \"codepoints\": [1056], \"characters\": 'Р' },\n      \"&rcy;\": { \"codepoints\": [1088], \"characters\": 'р' },\n      \"&rdca;\": { \"codepoints\": [10551], \"characters\": '⤷' },\n      \"&rdldhar;\": { \"codepoints\": [10601], \"characters\": '⥩' },\n      \"&rdquo;\": { \"codepoints\": [8221], \"characters\": '”' },\n      \"&rdquor;\": { \"codepoints\": [8221], \"characters\": '”' },\n      \"&rdsh;\": { \"codepoints\": [8627], \"characters\": '↳' },\n      \"&real;\": { \"codepoints\": [8476], \"characters\": 'ℜ' },\n      \"&realine;\": { \"codepoints\": [8475], \"characters\": 'ℛ' },\n      \"&realpart;\": { \"codepoints\": [8476], \"characters\": 'ℜ' },\n      \"&reals;\": { \"codepoints\": [8477], \"characters\": 'ℝ' },\n      \"&Re;\": { \"codepoints\": [8476], \"characters\": 'ℜ' },\n      \"&rect;\": { \"codepoints\": [9645], \"characters\": '▭' },\n      \"&reg;\": { \"codepoints\": [174], \"characters\": '®' },\n      \"&reg\": { \"codepoints\": [174], \"characters\": '®' },\n      \"&REG;\": { \"codepoints\": [174], \"characters\": '®' },\n      \"&REG\": { \"codepoints\": [174], \"characters\": '®' },\n      \"&ReverseElement;\": { \"codepoints\": [8715], \"characters\": '∋' },\n      \"&ReverseEquilibrium;\": { \"codepoints\": [8651], \"characters\": '⇋' },\n      \"&ReverseUpEquilibrium;\": { \"codepoints\": [10607], \"characters\": '⥯' },\n      \"&rfisht;\": { \"codepoints\": [10621], \"characters\": '⥽' },\n      \"&rfloor;\": { \"codepoints\": [8971], \"characters\": '⌋' },\n      \"&rfr;\": { \"codepoints\": [120111], \"characters\": '𝔯' },\n      \"&Rfr;\": { \"codepoints\": [8476], \"characters\": 'ℜ' },\n      \"&rHar;\": { \"codepoints\": [10596], \"characters\": '⥤' },\n      \"&rhard;\": { \"codepoints\": [8641], \"characters\": '⇁' },\n      \"&rharu;\": { \"codepoints\": [8640], \"characters\": '⇀' },\n      \"&rharul;\": { \"codepoints\": [10604], \"characters\": '⥬' },\n      \"&Rho;\": { \"codepoints\": [929], \"characters\": 'Ρ' },\n      \"&rho;\": { \"codepoints\": [961], \"characters\": 'ρ' },\n      \"&rhov;\": { \"codepoints\": [1009], \"characters\": 'ϱ' },\n      \"&RightAngleBracket;\": { \"codepoints\": [10217], \"characters\": '⟩' },\n      \"&RightArrowBar;\": { \"codepoints\": [8677], \"characters\": '⇥' },\n      \"&rightarrow;\": { \"codepoints\": [8594], \"characters\": '→' },\n      \"&RightArrow;\": { \"codepoints\": [8594], \"characters\": '→' },\n      \"&Rightarrow;\": { \"codepoints\": [8658], \"characters\": '⇒' },\n      \"&RightArrowLeftArrow;\": { \"codepoints\": [8644], \"characters\": '⇄' },\n      \"&rightarrowtail;\": { \"codepoints\": [8611], \"characters\": '↣' },\n      \"&RightCeiling;\": { \"codepoints\": [8969], \"characters\": '⌉' },\n      \"&RightDoubleBracket;\": { \"codepoints\": [10215], \"characters\": '⟧' },\n      \"&RightDownTeeVector;\": { \"codepoints\": [10589], \"characters\": '⥝' },\n      \"&RightDownVectorBar;\": { \"codepoints\": [10581], \"characters\": '⥕' },\n      \"&RightDownVector;\": { \"codepoints\": [8642], \"characters\": '⇂' },\n      \"&RightFloor;\": { \"codepoints\": [8971], \"characters\": '⌋' },\n      \"&rightharpoondown;\": { \"codepoints\": [8641], \"characters\": '⇁' },\n      \"&rightharpoonup;\": { \"codepoints\": [8640], \"characters\": '⇀' },\n      \"&rightleftarrows;\": { \"codepoints\": [8644], \"characters\": '⇄' },\n      \"&rightleftharpoons;\": { \"codepoints\": [8652], \"characters\": '⇌' },\n      \"&rightrightarrows;\": { \"codepoints\": [8649], \"characters\": '⇉' },\n      \"&rightsquigarrow;\": { \"codepoints\": [8605], \"characters\": '↝' },\n      \"&RightTeeArrow;\": { \"codepoints\": [8614], \"characters\": '↦' },\n      \"&RightTee;\": { \"codepoints\": [8866], \"characters\": '⊢' },\n      \"&RightTeeVector;\": { \"codepoints\": [10587], \"characters\": '⥛' },\n      \"&rightthreetimes;\": { \"codepoints\": [8908], \"characters\": '⋌' },\n      \"&RightTriangleBar;\": { \"codepoints\": [10704], \"characters\": '⧐' },\n      \"&RightTriangle;\": { \"codepoints\": [8883], \"characters\": '⊳' },\n      \"&RightTriangleEqual;\": { \"codepoints\": [8885], \"characters\": '⊵' },\n      \"&RightUpDownVector;\": { \"codepoints\": [10575], \"characters\": '⥏' },\n      \"&RightUpTeeVector;\": { \"codepoints\": [10588], \"characters\": '⥜' },\n      \"&RightUpVectorBar;\": { \"codepoints\": [10580], \"characters\": '⥔' },\n      \"&RightUpVector;\": { \"codepoints\": [8638], \"characters\": '↾' },\n      \"&RightVectorBar;\": { \"codepoints\": [10579], \"characters\": '⥓' },\n      \"&RightVector;\": { \"codepoints\": [8640], \"characters\": '⇀' },\n      \"&ring;\": { \"codepoints\": [730], \"characters\": '˚' },\n      \"&risingdotseq;\": { \"codepoints\": [8787], \"characters\": '≓' },\n      \"&rlarr;\": { \"codepoints\": [8644], \"characters\": '⇄' },\n      \"&rlhar;\": { \"codepoints\": [8652], \"characters\": '⇌' },\n      \"&rlm;\": { \"codepoints\": [8207], \"characters\": '‏' },\n      \"&rmoustache;\": { \"codepoints\": [9137], \"characters\": '⎱' },\n      \"&rmoust;\": { \"codepoints\": [9137], \"characters\": '⎱' },\n      \"&rnmid;\": { \"codepoints\": [10990], \"characters\": '⫮' },\n      \"&roang;\": { \"codepoints\": [10221], \"characters\": '⟭' },\n      \"&roarr;\": { \"codepoints\": [8702], \"characters\": '⇾' },\n      \"&robrk;\": { \"codepoints\": [10215], \"characters\": '⟧' },\n      \"&ropar;\": { \"codepoints\": [10630], \"characters\": '⦆' },\n      \"&ropf;\": { \"codepoints\": [120163], \"characters\": '𝕣' },\n      \"&Ropf;\": { \"codepoints\": [8477], \"characters\": 'ℝ' },\n      \"&roplus;\": { \"codepoints\": [10798], \"characters\": '⨮' },\n      \"&rotimes;\": { \"codepoints\": [10805], \"characters\": '⨵' },\n      \"&RoundImplies;\": { \"codepoints\": [10608], \"characters\": '⥰' },\n      \"&rpar;\": { \"codepoints\": [41], \"characters\": ')' },\n      \"&rpargt;\": { \"codepoints\": [10644], \"characters\": '⦔' },\n      \"&rppolint;\": { \"codepoints\": [10770], \"characters\": '⨒' },\n      \"&rrarr;\": { \"codepoints\": [8649], \"characters\": '⇉' },\n      \"&Rrightarrow;\": { \"codepoints\": [8667], \"characters\": '⇛' },\n      \"&rsaquo;\": { \"codepoints\": [8250], \"characters\": '›' },\n      \"&rscr;\": { \"codepoints\": [120007], \"characters\": '𝓇' },\n      \"&Rscr;\": { \"codepoints\": [8475], \"characters\": 'ℛ' },\n      \"&rsh;\": { \"codepoints\": [8625], \"characters\": '↱' },\n      \"&Rsh;\": { \"codepoints\": [8625], \"characters\": '↱' },\n      \"&rsqb;\": { \"codepoints\": [93], \"characters\": ']' },\n      \"&rsquo;\": { \"codepoints\": [8217], \"characters\": '’' },\n      \"&rsquor;\": { \"codepoints\": [8217], \"characters\": '’' },\n      \"&rthree;\": { \"codepoints\": [8908], \"characters\": '⋌' },\n      \"&rtimes;\": { \"codepoints\": [8906], \"characters\": '⋊' },\n      \"&rtri;\": { \"codepoints\": [9657], \"characters\": '▹' },\n      \"&rtrie;\": { \"codepoints\": [8885], \"characters\": '⊵' },\n      \"&rtrif;\": { \"codepoints\": [9656], \"characters\": '▸' },\n      \"&rtriltri;\": { \"codepoints\": [10702], \"characters\": '⧎' },\n      \"&RuleDelayed;\": { \"codepoints\": [10740], \"characters\": '⧴' },\n      \"&ruluhar;\": { \"codepoints\": [10600], \"characters\": '⥨' },\n      \"&rx;\": { \"codepoints\": [8478], \"characters\": '℞' },\n      \"&Sacute;\": { \"codepoints\": [346], \"characters\": 'Ś' },\n      \"&sacute;\": { \"codepoints\": [347], \"characters\": 'ś' },\n      \"&sbquo;\": { \"codepoints\": [8218], \"characters\": '‚' },\n      \"&scap;\": { \"codepoints\": [10936], \"characters\": '⪸' },\n      \"&Scaron;\": { \"codepoints\": [352], \"characters\": 'Š' },\n      \"&scaron;\": { \"codepoints\": [353], \"characters\": 'š' },\n      \"&Sc;\": { \"codepoints\": [10940], \"characters\": '⪼' },\n      \"&sc;\": { \"codepoints\": [8827], \"characters\": '≻' },\n      \"&sccue;\": { \"codepoints\": [8829], \"characters\": '≽' },\n      \"&sce;\": { \"codepoints\": [10928], \"characters\": '⪰' },\n      \"&scE;\": { \"codepoints\": [10932], \"characters\": '⪴' },\n      \"&Scedil;\": { \"codepoints\": [350], \"characters\": 'Ş' },\n      \"&scedil;\": { \"codepoints\": [351], \"characters\": 'ş' },\n      \"&Scirc;\": { \"codepoints\": [348], \"characters\": 'Ŝ' },\n      \"&scirc;\": { \"codepoints\": [349], \"characters\": 'ŝ' },\n      \"&scnap;\": { \"codepoints\": [10938], \"characters\": '⪺' },\n      \"&scnE;\": { \"codepoints\": [10934], \"characters\": '⪶' },\n      \"&scnsim;\": { \"codepoints\": [8937], \"characters\": '⋩' },\n      \"&scpolint;\": { \"codepoints\": [10771], \"characters\": '⨓' },\n      \"&scsim;\": { \"codepoints\": [8831], \"characters\": '≿' },\n      \"&Scy;\": { \"codepoints\": [1057], \"characters\": 'С' },\n      \"&scy;\": { \"codepoints\": [1089], \"characters\": 'с' },\n      \"&sdotb;\": { \"codepoints\": [8865], \"characters\": '⊡' },\n      \"&sdot;\": { \"codepoints\": [8901], \"characters\": '⋅' },\n      \"&sdote;\": { \"codepoints\": [10854], \"characters\": '⩦' },\n      \"&searhk;\": { \"codepoints\": [10533], \"characters\": '⤥' },\n      \"&searr;\": { \"codepoints\": [8600], \"characters\": '↘' },\n      \"&seArr;\": { \"codepoints\": [8664], \"characters\": '⇘' },\n      \"&searrow;\": { \"codepoints\": [8600], \"characters\": '↘' },\n      \"&sect;\": { \"codepoints\": [167], \"characters\": '§' },\n      \"&sect\": { \"codepoints\": [167], \"characters\": '§' },\n      \"&semi;\": { \"codepoints\": [59], \"characters\": ';' },\n      \"&seswar;\": { \"codepoints\": [10537], \"characters\": '⤩' },\n      \"&setminus;\": { \"codepoints\": [8726], \"characters\": '∖' },\n      \"&setmn;\": { \"codepoints\": [8726], \"characters\": '∖' },\n      \"&sext;\": { \"codepoints\": [10038], \"characters\": '✶' },\n      \"&Sfr;\": { \"codepoints\": [120086], \"characters\": '𝔖' },\n      \"&sfr;\": { \"codepoints\": [120112], \"characters\": '𝔰' },\n      \"&sfrown;\": { \"codepoints\": [8994], \"characters\": '⌢' },\n      \"&sharp;\": { \"codepoints\": [9839], \"characters\": '♯' },\n      \"&SHCHcy;\": { \"codepoints\": [1065], \"characters\": 'Щ' },\n      \"&shchcy;\": { \"codepoints\": [1097], \"characters\": 'щ' },\n      \"&SHcy;\": { \"codepoints\": [1064], \"characters\": 'Ш' },\n      \"&shcy;\": { \"codepoints\": [1096], \"characters\": 'ш' },\n      \"&ShortDownArrow;\": { \"codepoints\": [8595], \"characters\": '↓' },\n      \"&ShortLeftArrow;\": { \"codepoints\": [8592], \"characters\": '←' },\n      \"&shortmid;\": { \"codepoints\": [8739], \"characters\": '∣' },\n      \"&shortparallel;\": { \"codepoints\": [8741], \"characters\": '∥' },\n      \"&ShortRightArrow;\": { \"codepoints\": [8594], \"characters\": '→' },\n      \"&ShortUpArrow;\": { \"codepoints\": [8593], \"characters\": '↑' },\n      \"&shy;\": { \"codepoints\": [173], \"characters\": '­' },\n      \"&shy\": { \"codepoints\": [173], \"characters\": '­' },\n      \"&Sigma;\": { \"codepoints\": [931], \"characters\": 'Σ' },\n      \"&sigma;\": { \"codepoints\": [963], \"characters\": 'σ' },\n      \"&sigmaf;\": { \"codepoints\": [962], \"characters\": 'ς' },\n      \"&sigmav;\": { \"codepoints\": [962], \"characters\": 'ς' },\n      \"&sim;\": { \"codepoints\": [8764], \"characters\": '∼' },\n      \"&simdot;\": { \"codepoints\": [10858], \"characters\": '⩪' },\n      \"&sime;\": { \"codepoints\": [8771], \"characters\": '≃' },\n      \"&simeq;\": { \"codepoints\": [8771], \"characters\": '≃' },\n      \"&simg;\": { \"codepoints\": [10910], \"characters\": '⪞' },\n      \"&simgE;\": { \"codepoints\": [10912], \"characters\": '⪠' },\n      \"&siml;\": { \"codepoints\": [10909], \"characters\": '⪝' },\n      \"&simlE;\": { \"codepoints\": [10911], \"characters\": '⪟' },\n      \"&simne;\": { \"codepoints\": [8774], \"characters\": '≆' },\n      \"&simplus;\": { \"codepoints\": [10788], \"characters\": '⨤' },\n      \"&simrarr;\": { \"codepoints\": [10610], \"characters\": '⥲' },\n      \"&slarr;\": { \"codepoints\": [8592], \"characters\": '←' },\n      \"&SmallCircle;\": { \"codepoints\": [8728], \"characters\": '∘' },\n      \"&smallsetminus;\": { \"codepoints\": [8726], \"characters\": '∖' },\n      \"&smashp;\": { \"codepoints\": [10803], \"characters\": '⨳' },\n      \"&smeparsl;\": { \"codepoints\": [10724], \"characters\": '⧤' },\n      \"&smid;\": { \"codepoints\": [8739], \"characters\": '∣' },\n      \"&smile;\": { \"codepoints\": [8995], \"characters\": '⌣' },\n      \"&smt;\": { \"codepoints\": [10922], \"characters\": '⪪' },\n      \"&smte;\": { \"codepoints\": [10924], \"characters\": '⪬' },\n      \"&smtes;\": { \"codepoints\": [10924, 65024], \"characters\": '⪬︀' },\n      \"&SOFTcy;\": { \"codepoints\": [1068], \"characters\": 'Ь' },\n      \"&softcy;\": { \"codepoints\": [1100], \"characters\": 'ь' },\n      \"&solbar;\": { \"codepoints\": [9023], \"characters\": '⌿' },\n      \"&solb;\": { \"codepoints\": [10692], \"characters\": '⧄' },\n      \"&sol;\": { \"codepoints\": [47], \"characters\": '/' },\n      \"&Sopf;\": { \"codepoints\": [120138], \"characters\": '𝕊' },\n      \"&sopf;\": { \"codepoints\": [120164], \"characters\": '𝕤' },\n      \"&spades;\": { \"codepoints\": [9824], \"characters\": '♠' },\n      \"&spadesuit;\": { \"codepoints\": [9824], \"characters\": '♠' },\n      \"&spar;\": { \"codepoints\": [8741], \"characters\": '∥' },\n      \"&sqcap;\": { \"codepoints\": [8851], \"characters\": '⊓' },\n      \"&sqcaps;\": { \"codepoints\": [8851, 65024], \"characters\": '⊓︀' },\n      \"&sqcup;\": { \"codepoints\": [8852], \"characters\": '⊔' },\n      \"&sqcups;\": { \"codepoints\": [8852, 65024], \"characters\": '⊔︀' },\n      \"&Sqrt;\": { \"codepoints\": [8730], \"characters\": '√' },\n      \"&sqsub;\": { \"codepoints\": [8847], \"characters\": '⊏' },\n      \"&sqsube;\": { \"codepoints\": [8849], \"characters\": '⊑' },\n      \"&sqsubset;\": { \"codepoints\": [8847], \"characters\": '⊏' },\n      \"&sqsubseteq;\": { \"codepoints\": [8849], \"characters\": '⊑' },\n      \"&sqsup;\": { \"codepoints\": [8848], \"characters\": '⊐' },\n      \"&sqsupe;\": { \"codepoints\": [8850], \"characters\": '⊒' },\n      \"&sqsupset;\": { \"codepoints\": [8848], \"characters\": '⊐' },\n      \"&sqsupseteq;\": { \"codepoints\": [8850], \"characters\": '⊒' },\n      \"&square;\": { \"codepoints\": [9633], \"characters\": '□' },\n      \"&Square;\": { \"codepoints\": [9633], \"characters\": '□' },\n      \"&SquareIntersection;\": { \"codepoints\": [8851], \"characters\": '⊓' },\n      \"&SquareSubset;\": { \"codepoints\": [8847], \"characters\": '⊏' },\n      \"&SquareSubsetEqual;\": { \"codepoints\": [8849], \"characters\": '⊑' },\n      \"&SquareSuperset;\": { \"codepoints\": [8848], \"characters\": '⊐' },\n      \"&SquareSupersetEqual;\": { \"codepoints\": [8850], \"characters\": '⊒' },\n      \"&SquareUnion;\": { \"codepoints\": [8852], \"characters\": '⊔' },\n      \"&squarf;\": { \"codepoints\": [9642], \"characters\": '▪' },\n      \"&squ;\": { \"codepoints\": [9633], \"characters\": '□' },\n      \"&squf;\": { \"codepoints\": [9642], \"characters\": '▪' },\n      \"&srarr;\": { \"codepoints\": [8594], \"characters\": '→' },\n      \"&Sscr;\": { \"codepoints\": [119982], \"characters\": '𝒮' },\n      \"&sscr;\": { \"codepoints\": [120008], \"characters\": '𝓈' },\n      \"&ssetmn;\": { \"codepoints\": [8726], \"characters\": '∖' },\n      \"&ssmile;\": { \"codepoints\": [8995], \"characters\": '⌣' },\n      \"&sstarf;\": { \"codepoints\": [8902], \"characters\": '⋆' },\n      \"&Star;\": { \"codepoints\": [8902], \"characters\": '⋆' },\n      \"&star;\": { \"codepoints\": [9734], \"characters\": '☆' },\n      \"&starf;\": { \"codepoints\": [9733], \"characters\": '★' },\n      \"&straightepsilon;\": { \"codepoints\": [1013], \"characters\": 'ϵ' },\n      \"&straightphi;\": { \"codepoints\": [981], \"characters\": 'ϕ' },\n      \"&strns;\": { \"codepoints\": [175], \"characters\": '¯' },\n      \"&sub;\": { \"codepoints\": [8834], \"characters\": '⊂' },\n      \"&Sub;\": { \"codepoints\": [8912], \"characters\": '⋐' },\n      \"&subdot;\": { \"codepoints\": [10941], \"characters\": '⪽' },\n      \"&subE;\": { \"codepoints\": [10949], \"characters\": '⫅' },\n      \"&sube;\": { \"codepoints\": [8838], \"characters\": '⊆' },\n      \"&subedot;\": { \"codepoints\": [10947], \"characters\": '⫃' },\n      \"&submult;\": { \"codepoints\": [10945], \"characters\": '⫁' },\n      \"&subnE;\": { \"codepoints\": [10955], \"characters\": '⫋' },\n      \"&subne;\": { \"codepoints\": [8842], \"characters\": '⊊' },\n      \"&subplus;\": { \"codepoints\": [10943], \"characters\": '⪿' },\n      \"&subrarr;\": { \"codepoints\": [10617], \"characters\": '⥹' },\n      \"&subset;\": { \"codepoints\": [8834], \"characters\": '⊂' },\n      \"&Subset;\": { \"codepoints\": [8912], \"characters\": '⋐' },\n      \"&subseteq;\": { \"codepoints\": [8838], \"characters\": '⊆' },\n      \"&subseteqq;\": { \"codepoints\": [10949], \"characters\": '⫅' },\n      \"&SubsetEqual;\": { \"codepoints\": [8838], \"characters\": '⊆' },\n      \"&subsetneq;\": { \"codepoints\": [8842], \"characters\": '⊊' },\n      \"&subsetneqq;\": { \"codepoints\": [10955], \"characters\": '⫋' },\n      \"&subsim;\": { \"codepoints\": [10951], \"characters\": '⫇' },\n      \"&subsub;\": { \"codepoints\": [10965], \"characters\": '⫕' },\n      \"&subsup;\": { \"codepoints\": [10963], \"characters\": '⫓' },\n      \"&succapprox;\": { \"codepoints\": [10936], \"characters\": '⪸' },\n      \"&succ;\": { \"codepoints\": [8827], \"characters\": '≻' },\n      \"&succcurlyeq;\": { \"codepoints\": [8829], \"characters\": '≽' },\n      \"&Succeeds;\": { \"codepoints\": [8827], \"characters\": '≻' },\n      \"&SucceedsEqual;\": { \"codepoints\": [10928], \"characters\": '⪰' },\n      \"&SucceedsSlantEqual;\": { \"codepoints\": [8829], \"characters\": '≽' },\n      \"&SucceedsTilde;\": { \"codepoints\": [8831], \"characters\": '≿' },\n      \"&succeq;\": { \"codepoints\": [10928], \"characters\": '⪰' },\n      \"&succnapprox;\": { \"codepoints\": [10938], \"characters\": '⪺' },\n      \"&succneqq;\": { \"codepoints\": [10934], \"characters\": '⪶' },\n      \"&succnsim;\": { \"codepoints\": [8937], \"characters\": '⋩' },\n      \"&succsim;\": { \"codepoints\": [8831], \"characters\": '≿' },\n      \"&SuchThat;\": { \"codepoints\": [8715], \"characters\": '∋' },\n      \"&sum;\": { \"codepoints\": [8721], \"characters\": '∑' },\n      \"&Sum;\": { \"codepoints\": [8721], \"characters\": '∑' },\n      \"&sung;\": { \"codepoints\": [9834], \"characters\": '♪' },\n      \"&sup1;\": { \"codepoints\": [185], \"characters\": '¹' },\n      \"&sup1\": { \"codepoints\": [185], \"characters\": '¹' },\n      \"&sup2;\": { \"codepoints\": [178], \"characters\": '²' },\n      \"&sup2\": { \"codepoints\": [178], \"characters\": '²' },\n      \"&sup3;\": { \"codepoints\": [179], \"characters\": '³' },\n      \"&sup3\": { \"codepoints\": [179], \"characters\": '³' },\n      \"&sup;\": { \"codepoints\": [8835], \"characters\": '⊃' },\n      \"&Sup;\": { \"codepoints\": [8913], \"characters\": '⋑' },\n      \"&supdot;\": { \"codepoints\": [10942], \"characters\": '⪾' },\n      \"&supdsub;\": { \"codepoints\": [10968], \"characters\": '⫘' },\n      \"&supE;\": { \"codepoints\": [10950], \"characters\": '⫆' },\n      \"&supe;\": { \"codepoints\": [8839], \"characters\": '⊇' },\n      \"&supedot;\": { \"codepoints\": [10948], \"characters\": '⫄' },\n      \"&Superset;\": { \"codepoints\": [8835], \"characters\": '⊃' },\n      \"&SupersetEqual;\": { \"codepoints\": [8839], \"characters\": '⊇' },\n      \"&suphsol;\": { \"codepoints\": [10185], \"characters\": '⟉' },\n      \"&suphsub;\": { \"codepoints\": [10967], \"characters\": '⫗' },\n      \"&suplarr;\": { \"codepoints\": [10619], \"characters\": '⥻' },\n      \"&supmult;\": { \"codepoints\": [10946], \"characters\": '⫂' },\n      \"&supnE;\": { \"codepoints\": [10956], \"characters\": '⫌' },\n      \"&supne;\": { \"codepoints\": [8843], \"characters\": '⊋' },\n      \"&supplus;\": { \"codepoints\": [10944], \"characters\": '⫀' },\n      \"&supset;\": { \"codepoints\": [8835], \"characters\": '⊃' },\n      \"&Supset;\": { \"codepoints\": [8913], \"characters\": '⋑' },\n      \"&supseteq;\": { \"codepoints\": [8839], \"characters\": '⊇' },\n      \"&supseteqq;\": { \"codepoints\": [10950], \"characters\": '⫆' },\n      \"&supsetneq;\": { \"codepoints\": [8843], \"characters\": '⊋' },\n      \"&supsetneqq;\": { \"codepoints\": [10956], \"characters\": '⫌' },\n      \"&supsim;\": { \"codepoints\": [10952], \"characters\": '⫈' },\n      \"&supsub;\": { \"codepoints\": [10964], \"characters\": '⫔' },\n      \"&supsup;\": { \"codepoints\": [10966], \"characters\": '⫖' },\n      \"&swarhk;\": { \"codepoints\": [10534], \"characters\": '⤦' },\n      \"&swarr;\": { \"codepoints\": [8601], \"characters\": '↙' },\n      \"&swArr;\": { \"codepoints\": [8665], \"characters\": '⇙' },\n      \"&swarrow;\": { \"codepoints\": [8601], \"characters\": '↙' },\n      \"&swnwar;\": { \"codepoints\": [10538], \"characters\": '⤪' },\n      \"&szlig;\": { \"codepoints\": [223], \"characters\": 'ß' },\n      \"&szlig\": { \"codepoints\": [223], \"characters\": 'ß' },\n      \"&Tab;\": { \"codepoints\": [9], \"characters\": '\\t' },\n      \"&target;\": { \"codepoints\": [8982], \"characters\": '⌖' },\n      \"&Tau;\": { \"codepoints\": [932], \"characters\": 'Τ' },\n      \"&tau;\": { \"codepoints\": [964], \"characters\": 'τ' },\n      \"&tbrk;\": { \"codepoints\": [9140], \"characters\": '⎴' },\n      \"&Tcaron;\": { \"codepoints\": [356], \"characters\": 'Ť' },\n      \"&tcaron;\": { \"codepoints\": [357], \"characters\": 'ť' },\n      \"&Tcedil;\": { \"codepoints\": [354], \"characters\": 'Ţ' },\n      \"&tcedil;\": { \"codepoints\": [355], \"characters\": 'ţ' },\n      \"&Tcy;\": { \"codepoints\": [1058], \"characters\": 'Т' },\n      \"&tcy;\": { \"codepoints\": [1090], \"characters\": 'т' },\n      \"&tdot;\": { \"codepoints\": [8411], \"characters\": '⃛' },\n      \"&telrec;\": { \"codepoints\": [8981], \"characters\": '⌕' },\n      \"&Tfr;\": { \"codepoints\": [120087], \"characters\": '𝔗' },\n      \"&tfr;\": { \"codepoints\": [120113], \"characters\": '𝔱' },\n      \"&there4;\": { \"codepoints\": [8756], \"characters\": '∴' },\n      \"&therefore;\": { \"codepoints\": [8756], \"characters\": '∴' },\n      \"&Therefore;\": { \"codepoints\": [8756], \"characters\": '∴' },\n      \"&Theta;\": { \"codepoints\": [920], \"characters\": 'Θ' },\n      \"&theta;\": { \"codepoints\": [952], \"characters\": 'θ' },\n      \"&thetasym;\": { \"codepoints\": [977], \"characters\": 'ϑ' },\n      \"&thetav;\": { \"codepoints\": [977], \"characters\": 'ϑ' },\n      \"&thickapprox;\": { \"codepoints\": [8776], \"characters\": '≈' },\n      \"&thicksim;\": { \"codepoints\": [8764], \"characters\": '∼' },\n      \"&ThickSpace;\": { \"codepoints\": [8287, 8202], \"characters\": '  ' },\n      \"&ThinSpace;\": { \"codepoints\": [8201], \"characters\": ' ' },\n      \"&thinsp;\": { \"codepoints\": [8201], \"characters\": ' ' },\n      \"&thkap;\": { \"codepoints\": [8776], \"characters\": '≈' },\n      \"&thksim;\": { \"codepoints\": [8764], \"characters\": '∼' },\n      \"&THORN;\": { \"codepoints\": [222], \"characters\": 'Þ' },\n      \"&THORN\": { \"codepoints\": [222], \"characters\": 'Þ' },\n      \"&thorn;\": { \"codepoints\": [254], \"characters\": 'þ' },\n      \"&thorn\": { \"codepoints\": [254], \"characters\": 'þ' },\n      \"&tilde;\": { \"codepoints\": [732], \"characters\": '˜' },\n      \"&Tilde;\": { \"codepoints\": [8764], \"characters\": '∼' },\n      \"&TildeEqual;\": { \"codepoints\": [8771], \"characters\": '≃' },\n      \"&TildeFullEqual;\": { \"codepoints\": [8773], \"characters\": '≅' },\n      \"&TildeTilde;\": { \"codepoints\": [8776], \"characters\": '≈' },\n      \"&timesbar;\": { \"codepoints\": [10801], \"characters\": '⨱' },\n      \"&timesb;\": { \"codepoints\": [8864], \"characters\": '⊠' },\n      \"&times;\": { \"codepoints\": [215], \"characters\": '×' },\n      \"&times\": { \"codepoints\": [215], \"characters\": '×' },\n      \"&timesd;\": { \"codepoints\": [10800], \"characters\": '⨰' },\n      \"&tint;\": { \"codepoints\": [8749], \"characters\": '∭' },\n      \"&toea;\": { \"codepoints\": [10536], \"characters\": '⤨' },\n      \"&topbot;\": { \"codepoints\": [9014], \"characters\": '⌶' },\n      \"&topcir;\": { \"codepoints\": [10993], \"characters\": '⫱' },\n      \"&top;\": { \"codepoints\": [8868], \"characters\": '⊤' },\n      \"&Topf;\": { \"codepoints\": [120139], \"characters\": '𝕋' },\n      \"&topf;\": { \"codepoints\": [120165], \"characters\": '𝕥' },\n      \"&topfork;\": { \"codepoints\": [10970], \"characters\": '⫚' },\n      \"&tosa;\": { \"codepoints\": [10537], \"characters\": '⤩' },\n      \"&tprime;\": { \"codepoints\": [8244], \"characters\": '‴' },\n      \"&trade;\": { \"codepoints\": [8482], \"characters\": '™' },\n      \"&TRADE;\": { \"codepoints\": [8482], \"characters\": '™' },\n      \"&triangle;\": { \"codepoints\": [9653], \"characters\": '▵' },\n      \"&triangledown;\": { \"codepoints\": [9663], \"characters\": '▿' },\n      \"&triangleleft;\": { \"codepoints\": [9667], \"characters\": '◃' },\n      \"&trianglelefteq;\": { \"codepoints\": [8884], \"characters\": '⊴' },\n      \"&triangleq;\": { \"codepoints\": [8796], \"characters\": '≜' },\n      \"&triangleright;\": { \"codepoints\": [9657], \"characters\": '▹' },\n      \"&trianglerighteq;\": { \"codepoints\": [8885], \"characters\": '⊵' },\n      \"&tridot;\": { \"codepoints\": [9708], \"characters\": '◬' },\n      \"&trie;\": { \"codepoints\": [8796], \"characters\": '≜' },\n      \"&triminus;\": { \"codepoints\": [10810], \"characters\": '⨺' },\n      \"&TripleDot;\": { \"codepoints\": [8411], \"characters\": '⃛' },\n      \"&triplus;\": { \"codepoints\": [10809], \"characters\": '⨹' },\n      \"&trisb;\": { \"codepoints\": [10701], \"characters\": '⧍' },\n      \"&tritime;\": { \"codepoints\": [10811], \"characters\": '⨻' },\n      \"&trpezium;\": { \"codepoints\": [9186], \"characters\": '⏢' },\n      \"&Tscr;\": { \"codepoints\": [119983], \"characters\": '𝒯' },\n      \"&tscr;\": { \"codepoints\": [120009], \"characters\": '𝓉' },\n      \"&TScy;\": { \"codepoints\": [1062], \"characters\": 'Ц' },\n      \"&tscy;\": { \"codepoints\": [1094], \"characters\": 'ц' },\n      \"&TSHcy;\": { \"codepoints\": [1035], \"characters\": 'Ћ' },\n      \"&tshcy;\": { \"codepoints\": [1115], \"characters\": 'ћ' },\n      \"&Tstrok;\": { \"codepoints\": [358], \"characters\": 'Ŧ' },\n      \"&tstrok;\": { \"codepoints\": [359], \"characters\": 'ŧ' },\n      \"&twixt;\": { \"codepoints\": [8812], \"characters\": '≬' },\n      \"&twoheadleftarrow;\": { \"codepoints\": [8606], \"characters\": '↞' },\n      \"&twoheadrightarrow;\": { \"codepoints\": [8608], \"characters\": '↠' },\n      \"&Uacute;\": { \"codepoints\": [218], \"characters\": 'Ú' },\n      \"&Uacute\": { \"codepoints\": [218], \"characters\": 'Ú' },\n      \"&uacute;\": { \"codepoints\": [250], \"characters\": 'ú' },\n      \"&uacute\": { \"codepoints\": [250], \"characters\": 'ú' },\n      \"&uarr;\": { \"codepoints\": [8593], \"characters\": '↑' },\n      \"&Uarr;\": { \"codepoints\": [8607], \"characters\": '↟' },\n      \"&uArr;\": { \"codepoints\": [8657], \"characters\": '⇑' },\n      \"&Uarrocir;\": { \"codepoints\": [10569], \"characters\": '⥉' },\n      \"&Ubrcy;\": { \"codepoints\": [1038], \"characters\": 'Ў' },\n      \"&ubrcy;\": { \"codepoints\": [1118], \"characters\": 'ў' },\n      \"&Ubreve;\": { \"codepoints\": [364], \"characters\": 'Ŭ' },\n      \"&ubreve;\": { \"codepoints\": [365], \"characters\": 'ŭ' },\n      \"&Ucirc;\": { \"codepoints\": [219], \"characters\": 'Û' },\n      \"&Ucirc\": { \"codepoints\": [219], \"characters\": 'Û' },\n      \"&ucirc;\": { \"codepoints\": [251], \"characters\": 'û' },\n      \"&ucirc\": { \"codepoints\": [251], \"characters\": 'û' },\n      \"&Ucy;\": { \"codepoints\": [1059], \"characters\": 'У' },\n      \"&ucy;\": { \"codepoints\": [1091], \"characters\": 'у' },\n      \"&udarr;\": { \"codepoints\": [8645], \"characters\": '⇅' },\n      \"&Udblac;\": { \"codepoints\": [368], \"characters\": 'Ű' },\n      \"&udblac;\": { \"codepoints\": [369], \"characters\": 'ű' },\n      \"&udhar;\": { \"codepoints\": [10606], \"characters\": '⥮' },\n      \"&ufisht;\": { \"codepoints\": [10622], \"characters\": '⥾' },\n      \"&Ufr;\": { \"codepoints\": [120088], \"characters\": '𝔘' },\n      \"&ufr;\": { \"codepoints\": [120114], \"characters\": '𝔲' },\n      \"&Ugrave;\": { \"codepoints\": [217], \"characters\": 'Ù' },\n      \"&Ugrave\": { \"codepoints\": [217], \"characters\": 'Ù' },\n      \"&ugrave;\": { \"codepoints\": [249], \"characters\": 'ù' },\n      \"&ugrave\": { \"codepoints\": [249], \"characters\": 'ù' },\n      \"&uHar;\": { \"codepoints\": [10595], \"characters\": '⥣' },\n      \"&uharl;\": { \"codepoints\": [8639], \"characters\": '↿' },\n      \"&uharr;\": { \"codepoints\": [8638], \"characters\": '↾' },\n      \"&uhblk;\": { \"codepoints\": [9600], \"characters\": '▀' },\n      \"&ulcorn;\": { \"codepoints\": [8988], \"characters\": '⌜' },\n      \"&ulcorner;\": { \"codepoints\": [8988], \"characters\": '⌜' },\n      \"&ulcrop;\": { \"codepoints\": [8975], \"characters\": '⌏' },\n      \"&ultri;\": { \"codepoints\": [9720], \"characters\": '◸' },\n      \"&Umacr;\": { \"codepoints\": [362], \"characters\": 'Ū' },\n      \"&umacr;\": { \"codepoints\": [363], \"characters\": 'ū' },\n      \"&uml;\": { \"codepoints\": [168], \"characters\": '¨' },\n      \"&uml\": { \"codepoints\": [168], \"characters\": '¨' },\n      \"&UnderBar;\": { \"codepoints\": [95], \"characters\": '_' },\n      \"&UnderBrace;\": { \"codepoints\": [9183], \"characters\": '⏟' },\n      \"&UnderBracket;\": { \"codepoints\": [9141], \"characters\": '⎵' },\n      \"&UnderParenthesis;\": { \"codepoints\": [9181], \"characters\": '⏝' },\n      \"&Union;\": { \"codepoints\": [8899], \"characters\": '⋃' },\n      \"&UnionPlus;\": { \"codepoints\": [8846], \"characters\": '⊎' },\n      \"&Uogon;\": { \"codepoints\": [370], \"characters\": 'Ų' },\n      \"&uogon;\": { \"codepoints\": [371], \"characters\": 'ų' },\n      \"&Uopf;\": { \"codepoints\": [120140], \"characters\": '𝕌' },\n      \"&uopf;\": { \"codepoints\": [120166], \"characters\": '𝕦' },\n      \"&UpArrowBar;\": { \"codepoints\": [10514], \"characters\": '⤒' },\n      \"&uparrow;\": { \"codepoints\": [8593], \"characters\": '↑' },\n      \"&UpArrow;\": { \"codepoints\": [8593], \"characters\": '↑' },\n      \"&Uparrow;\": { \"codepoints\": [8657], \"characters\": '⇑' },\n      \"&UpArrowDownArrow;\": { \"codepoints\": [8645], \"characters\": '⇅' },\n      \"&updownarrow;\": { \"codepoints\": [8597], \"characters\": '↕' },\n      \"&UpDownArrow;\": { \"codepoints\": [8597], \"characters\": '↕' },\n      \"&Updownarrow;\": { \"codepoints\": [8661], \"characters\": '⇕' },\n      \"&UpEquilibrium;\": { \"codepoints\": [10606], \"characters\": '⥮' },\n      \"&upharpoonleft;\": { \"codepoints\": [8639], \"characters\": '↿' },\n      \"&upharpoonright;\": { \"codepoints\": [8638], \"characters\": '↾' },\n      \"&uplus;\": { \"codepoints\": [8846], \"characters\": '⊎' },\n      \"&UpperLeftArrow;\": { \"codepoints\": [8598], \"characters\": '↖' },\n      \"&UpperRightArrow;\": { \"codepoints\": [8599], \"characters\": '↗' },\n      \"&upsi;\": { \"codepoints\": [965], \"characters\": 'υ' },\n      \"&Upsi;\": { \"codepoints\": [978], \"characters\": 'ϒ' },\n      \"&upsih;\": { \"codepoints\": [978], \"characters\": 'ϒ' },\n      \"&Upsilon;\": { \"codepoints\": [933], \"characters\": 'Υ' },\n      \"&upsilon;\": { \"codepoints\": [965], \"characters\": 'υ' },\n      \"&UpTeeArrow;\": { \"codepoints\": [8613], \"characters\": '↥' },\n      \"&UpTee;\": { \"codepoints\": [8869], \"characters\": '⊥' },\n      \"&upuparrows;\": { \"codepoints\": [8648], \"characters\": '⇈' },\n      \"&urcorn;\": { \"codepoints\": [8989], \"characters\": '⌝' },\n      \"&urcorner;\": { \"codepoints\": [8989], \"characters\": '⌝' },\n      \"&urcrop;\": { \"codepoints\": [8974], \"characters\": '⌎' },\n      \"&Uring;\": { \"codepoints\": [366], \"characters\": 'Ů' },\n      \"&uring;\": { \"codepoints\": [367], \"characters\": 'ů' },\n      \"&urtri;\": { \"codepoints\": [9721], \"characters\": '◹' },\n      \"&Uscr;\": { \"codepoints\": [119984], \"characters\": '𝒰' },\n      \"&uscr;\": { \"codepoints\": [120010], \"characters\": '𝓊' },\n      \"&utdot;\": { \"codepoints\": [8944], \"characters\": '⋰' },\n      \"&Utilde;\": { \"codepoints\": [360], \"characters\": 'Ũ' },\n      \"&utilde;\": { \"codepoints\": [361], \"characters\": 'ũ' },\n      \"&utri;\": { \"codepoints\": [9653], \"characters\": '▵' },\n      \"&utrif;\": { \"codepoints\": [9652], \"characters\": '▴' },\n      \"&uuarr;\": { \"codepoints\": [8648], \"characters\": '⇈' },\n      \"&Uuml;\": { \"codepoints\": [220], \"characters\": 'Ü' },\n      \"&Uuml\": { \"codepoints\": [220], \"characters\": 'Ü' },\n      \"&uuml;\": { \"codepoints\": [252], \"characters\": 'ü' },\n      \"&uuml\": { \"codepoints\": [252], \"characters\": 'ü' },\n      \"&uwangle;\": { \"codepoints\": [10663], \"characters\": '⦧' },\n      \"&vangrt;\": { \"codepoints\": [10652], \"characters\": '⦜' },\n      \"&varepsilon;\": { \"codepoints\": [1013], \"characters\": 'ϵ' },\n      \"&varkappa;\": { \"codepoints\": [1008], \"characters\": 'ϰ' },\n      \"&varnothing;\": { \"codepoints\": [8709], \"characters\": '∅' },\n      \"&varphi;\": { \"codepoints\": [981], \"characters\": 'ϕ' },\n      \"&varpi;\": { \"codepoints\": [982], \"characters\": 'ϖ' },\n      \"&varpropto;\": { \"codepoints\": [8733], \"characters\": '∝' },\n      \"&varr;\": { \"codepoints\": [8597], \"characters\": '↕' },\n      \"&vArr;\": { \"codepoints\": [8661], \"characters\": '⇕' },\n      \"&varrho;\": { \"codepoints\": [1009], \"characters\": 'ϱ' },\n      \"&varsigma;\": { \"codepoints\": [962], \"characters\": 'ς' },\n      \"&varsubsetneq;\": { \"codepoints\": [8842, 65024], \"characters\": '⊊︀' },\n      \"&varsubsetneqq;\": { \"codepoints\": [10955, 65024], \"characters\": '⫋︀' },\n      \"&varsupsetneq;\": { \"codepoints\": [8843, 65024], \"characters\": '⊋︀' },\n      \"&varsupsetneqq;\": { \"codepoints\": [10956, 65024], \"characters\": '⫌︀' },\n      \"&vartheta;\": { \"codepoints\": [977], \"characters\": 'ϑ' },\n      \"&vartriangleleft;\": { \"codepoints\": [8882], \"characters\": '⊲' },\n      \"&vartriangleright;\": { \"codepoints\": [8883], \"characters\": '⊳' },\n      \"&vBar;\": { \"codepoints\": [10984], \"characters\": '⫨' },\n      \"&Vbar;\": { \"codepoints\": [10987], \"characters\": '⫫' },\n      \"&vBarv;\": { \"codepoints\": [10985], \"characters\": '⫩' },\n      \"&Vcy;\": { \"codepoints\": [1042], \"characters\": 'В' },\n      \"&vcy;\": { \"codepoints\": [1074], \"characters\": 'в' },\n      \"&vdash;\": { \"codepoints\": [8866], \"characters\": '⊢' },\n      \"&vDash;\": { \"codepoints\": [8872], \"characters\": '⊨' },\n      \"&Vdash;\": { \"codepoints\": [8873], \"characters\": '⊩' },\n      \"&VDash;\": { \"codepoints\": [8875], \"characters\": '⊫' },\n      \"&Vdashl;\": { \"codepoints\": [10982], \"characters\": '⫦' },\n      \"&veebar;\": { \"codepoints\": [8891], \"characters\": '⊻' },\n      \"&vee;\": { \"codepoints\": [8744], \"characters\": '∨' },\n      \"&Vee;\": { \"codepoints\": [8897], \"characters\": '⋁' },\n      \"&veeeq;\": { \"codepoints\": [8794], \"characters\": '≚' },\n      \"&vellip;\": { \"codepoints\": [8942], \"characters\": '⋮' },\n      \"&verbar;\": { \"codepoints\": [124], \"characters\": '|' },\n      \"&Verbar;\": { \"codepoints\": [8214], \"characters\": '‖' },\n      \"&vert;\": { \"codepoints\": [124], \"characters\": '|' },\n      \"&Vert;\": { \"codepoints\": [8214], \"characters\": '‖' },\n      \"&VerticalBar;\": { \"codepoints\": [8739], \"characters\": '∣' },\n      \"&VerticalLine;\": { \"codepoints\": [124], \"characters\": '|' },\n      \"&VerticalSeparator;\": { \"codepoints\": [10072], \"characters\": '❘' },\n      \"&VerticalTilde;\": { \"codepoints\": [8768], \"characters\": '≀' },\n      \"&VeryThinSpace;\": { \"codepoints\": [8202], \"characters\": ' ' },\n      \"&Vfr;\": { \"codepoints\": [120089], \"characters\": '𝔙' },\n      \"&vfr;\": { \"codepoints\": [120115], \"characters\": '𝔳' },\n      \"&vltri;\": { \"codepoints\": [8882], \"characters\": '⊲' },\n      \"&vnsub;\": { \"codepoints\": [8834, 8402], \"characters\": '⊂⃒' },\n      \"&vnsup;\": { \"codepoints\": [8835, 8402], \"characters\": '⊃⃒' },\n      \"&Vopf;\": { \"codepoints\": [120141], \"characters\": '𝕍' },\n      \"&vopf;\": { \"codepoints\": [120167], \"characters\": '𝕧' },\n      \"&vprop;\": { \"codepoints\": [8733], \"characters\": '∝' },\n      \"&vrtri;\": { \"codepoints\": [8883], \"characters\": '⊳' },\n      \"&Vscr;\": { \"codepoints\": [119985], \"characters\": '𝒱' },\n      \"&vscr;\": { \"codepoints\": [120011], \"characters\": '𝓋' },\n      \"&vsubnE;\": { \"codepoints\": [10955, 65024], \"characters\": '⫋︀' },\n      \"&vsubne;\": { \"codepoints\": [8842, 65024], \"characters\": '⊊︀' },\n      \"&vsupnE;\": { \"codepoints\": [10956, 65024], \"characters\": '⫌︀' },\n      \"&vsupne;\": { \"codepoints\": [8843, 65024], \"characters\": '⊋︀' },\n      \"&Vvdash;\": { \"codepoints\": [8874], \"characters\": '⊪' },\n      \"&vzigzag;\": { \"codepoints\": [10650], \"characters\": '⦚' },\n      \"&Wcirc;\": { \"codepoints\": [372], \"characters\": 'Ŵ' },\n      \"&wcirc;\": { \"codepoints\": [373], \"characters\": 'ŵ' },\n      \"&wedbar;\": { \"codepoints\": [10847], \"characters\": '⩟' },\n      \"&wedge;\": { \"codepoints\": [8743], \"characters\": '∧' },\n      \"&Wedge;\": { \"codepoints\": [8896], \"characters\": '⋀' },\n      \"&wedgeq;\": { \"codepoints\": [8793], \"characters\": '≙' },\n      \"&weierp;\": { \"codepoints\": [8472], \"characters\": '℘' },\n      \"&Wfr;\": { \"codepoints\": [120090], \"characters\": '𝔚' },\n      \"&wfr;\": { \"codepoints\": [120116], \"characters\": '𝔴' },\n      \"&Wopf;\": { \"codepoints\": [120142], \"characters\": '𝕎' },\n      \"&wopf;\": { \"codepoints\": [120168], \"characters\": '𝕨' },\n      \"&wp;\": { \"codepoints\": [8472], \"characters\": '℘' },\n      \"&wr;\": { \"codepoints\": [8768], \"characters\": '≀' },\n      \"&wreath;\": { \"codepoints\": [8768], \"characters\": '≀' },\n      \"&Wscr;\": { \"codepoints\": [119986], \"characters\": '𝒲' },\n      \"&wscr;\": { \"codepoints\": [120012], \"characters\": '𝓌' },\n      \"&xcap;\": { \"codepoints\": [8898], \"characters\": '⋂' },\n      \"&xcirc;\": { \"codepoints\": [9711], \"characters\": '◯' },\n      \"&xcup;\": { \"codepoints\": [8899], \"characters\": '⋃' },\n      \"&xdtri;\": { \"codepoints\": [9661], \"characters\": '▽' },\n      \"&Xfr;\": { \"codepoints\": [120091], \"characters\": '𝔛' },\n      \"&xfr;\": { \"codepoints\": [120117], \"characters\": '𝔵' },\n      \"&xharr;\": { \"codepoints\": [10231], \"characters\": '⟷' },\n      \"&xhArr;\": { \"codepoints\": [10234], \"characters\": '⟺' },\n      \"&Xi;\": { \"codepoints\": [926], \"characters\": 'Ξ' },\n      \"&xi;\": { \"codepoints\": [958], \"characters\": 'ξ' },\n      \"&xlarr;\": { \"codepoints\": [10229], \"characters\": '⟵' },\n      \"&xlArr;\": { \"codepoints\": [10232], \"characters\": '⟸' },\n      \"&xmap;\": { \"codepoints\": [10236], \"characters\": '⟼' },\n      \"&xnis;\": { \"codepoints\": [8955], \"characters\": '⋻' },\n      \"&xodot;\": { \"codepoints\": [10752], \"characters\": '⨀' },\n      \"&Xopf;\": { \"codepoints\": [120143], \"characters\": '𝕏' },\n      \"&xopf;\": { \"codepoints\": [120169], \"characters\": '𝕩' },\n      \"&xoplus;\": { \"codepoints\": [10753], \"characters\": '⨁' },\n      \"&xotime;\": { \"codepoints\": [10754], \"characters\": '⨂' },\n      \"&xrarr;\": { \"codepoints\": [10230], \"characters\": '⟶' },\n      \"&xrArr;\": { \"codepoints\": [10233], \"characters\": '⟹' },\n      \"&Xscr;\": { \"codepoints\": [119987], \"characters\": '𝒳' },\n      \"&xscr;\": { \"codepoints\": [120013], \"characters\": '𝓍' },\n      \"&xsqcup;\": { \"codepoints\": [10758], \"characters\": '⨆' },\n      \"&xuplus;\": { \"codepoints\": [10756], \"characters\": '⨄' },\n      \"&xutri;\": { \"codepoints\": [9651], \"characters\": '△' },\n      \"&xvee;\": { \"codepoints\": [8897], \"characters\": '⋁' },\n      \"&xwedge;\": { \"codepoints\": [8896], \"characters\": '⋀' },\n      \"&Yacute;\": { \"codepoints\": [221], \"characters\": 'Ý' },\n      \"&Yacute\": { \"codepoints\": [221], \"characters\": 'Ý' },\n      \"&yacute;\": { \"codepoints\": [253], \"characters\": 'ý' },\n      \"&yacute\": { \"codepoints\": [253], \"characters\": 'ý' },\n      \"&YAcy;\": { \"codepoints\": [1071], \"characters\": 'Я' },\n      \"&yacy;\": { \"codepoints\": [1103], \"characters\": 'я' },\n      \"&Ycirc;\": { \"codepoints\": [374], \"characters\": 'Ŷ' },\n      \"&ycirc;\": { \"codepoints\": [375], \"characters\": 'ŷ' },\n      \"&Ycy;\": { \"codepoints\": [1067], \"characters\": 'Ы' },\n      \"&ycy;\": { \"codepoints\": [1099], \"characters\": 'ы' },\n      \"&yen;\": { \"codepoints\": [165], \"characters\": '¥' },\n      \"&yen\": { \"codepoints\": [165], \"characters\": '¥' },\n      \"&Yfr;\": { \"codepoints\": [120092], \"characters\": '𝔜' },\n      \"&yfr;\": { \"codepoints\": [120118], \"characters\": '𝔶' },\n      \"&YIcy;\": { \"codepoints\": [1031], \"characters\": 'Ї' },\n      \"&yicy;\": { \"codepoints\": [1111], \"characters\": 'ї' },\n      \"&Yopf;\": { \"codepoints\": [120144], \"characters\": '𝕐' },\n      \"&yopf;\": { \"codepoints\": [120170], \"characters\": '𝕪' },\n      \"&Yscr;\": { \"codepoints\": [119988], \"characters\": '𝒴' },\n      \"&yscr;\": { \"codepoints\": [120014], \"characters\": '𝓎' },\n      \"&YUcy;\": { \"codepoints\": [1070], \"characters\": 'Ю' },\n      \"&yucy;\": { \"codepoints\": [1102], \"characters\": 'ю' },\n      \"&yuml;\": { \"codepoints\": [255], \"characters\": 'ÿ' },\n      \"&yuml\": { \"codepoints\": [255], \"characters\": 'ÿ' },\n      \"&Yuml;\": { \"codepoints\": [376], \"characters\": 'Ÿ' },\n      \"&Zacute;\": { \"codepoints\": [377], \"characters\": 'Ź' },\n      \"&zacute;\": { \"codepoints\": [378], \"characters\": 'ź' },\n      \"&Zcaron;\": { \"codepoints\": [381], \"characters\": 'Ž' },\n      \"&zcaron;\": { \"codepoints\": [382], \"characters\": 'ž' },\n      \"&Zcy;\": { \"codepoints\": [1047], \"characters\": 'З' },\n      \"&zcy;\": { \"codepoints\": [1079], \"characters\": 'з' },\n      \"&Zdot;\": { \"codepoints\": [379], \"characters\": 'Ż' },\n      \"&zdot;\": { \"codepoints\": [380], \"characters\": 'ż' },\n      \"&zeetrf;\": { \"codepoints\": [8488], \"characters\": 'ℨ' },\n      \"&ZeroWidthSpace;\": { \"codepoints\": [8203], \"characters\": '​' },\n      \"&Zeta;\": { \"codepoints\": [918], \"characters\": 'Ζ' },\n      \"&zeta;\": { \"codepoints\": [950], \"characters\": 'ζ' },\n      \"&zfr;\": { \"codepoints\": [120119], \"characters\": '𝔷' },\n      \"&Zfr;\": { \"codepoints\": [8488], \"characters\": 'ℨ' },\n      \"&ZHcy;\": { \"codepoints\": [1046], \"characters\": 'Ж' },\n      \"&zhcy;\": { \"codepoints\": [1078], \"characters\": 'ж' },\n      \"&zigrarr;\": { \"codepoints\": [8669], \"characters\": '⇝' },\n      \"&zopf;\": { \"codepoints\": [120171], \"characters\": '𝕫' },\n      \"&Zopf;\": { \"codepoints\": [8484], \"characters\": 'ℤ' },\n      \"&Zscr;\": { \"codepoints\": [119989], \"characters\": '𝒵' },\n      \"&zscr;\": { \"codepoints\": [120015], \"characters\": '𝓏' },\n      \"&zwj;\": { \"codepoints\": [8205], \"characters\": '‍' },\n      \"&zwnj;\": { \"codepoints\": [8204], \"characters\": '‌' }\n    };\n\n    var ALPHANUMERIC = /^[a-zA-Z0-9]/;\n    var getPossibleNamedEntityStart = makeRegexMatcher(/^&[a-zA-Z0-9]/);\n    var getApparentNamedEntity = makeRegexMatcher(/^&[a-zA-Z0-9]+;/);\n\n    var getNamedEntityByFirstChar = {};\n    (function () {\n      var namedEntitiesByFirstChar = {};\n      for (var ent in ENTITIES) {\n        var chr = ent.charAt(1);\n        namedEntitiesByFirstChar[chr] = namedEntitiesByFirstChar[chr] || [];\n        namedEntitiesByFirstChar[chr].push(ent.slice(2));\n      }\n      for (var chr in namedEntitiesByFirstChar) {\n        getNamedEntityByFirstChar[chr] = makeRegexMatcher(new RegExp('^&' + chr + '(?:' + namedEntitiesByFirstChar[chr].join('|') + ')'));\n      }\n    })();\n\n    // Run a provided \"matcher\" function but reset the current position afterwards.\n    // Fatal failure of the matcher is not suppressed.\n    var peekMatcher = function peekMatcher(scanner, matcher) {\n      var start = scanner.pos;\n      var result = matcher(scanner);\n      scanner.pos = start;\n      return result;\n    };\n\n    // Returns a string like \"&amp;\" or a falsy value if no match.  Fails fatally\n    // if something looks like a named entity but isn't.\n    var getNamedCharRef = function getNamedCharRef(scanner, inAttribute) {\n      // look for `&` followed by alphanumeric\n      if (!peekMatcher(scanner, getPossibleNamedEntityStart)) return null;\n\n      var matcher = getNamedEntityByFirstChar[scanner.rest().charAt(1)];\n      var entity = null;\n      if (matcher) entity = peekMatcher(scanner, matcher);\n\n      if (entity) {\n        if (entity.slice(-1) !== ';') {\n          // Certain character references with no semi are an error, like `&lt`.\n          // In attribute values, however, this is not fatal if the next character\n          // is alphanumeric.\n          //\n          // This rule affects href attributes, for example, deeming \"/?foo=bar&ltc=abc\"\n          // to be ok but \"/?foo=bar&lt=abc\" to not be.\n          if (inAttribute && ALPHANUMERIC.test(scanner.rest().charAt(entity.length))) return null;\n          scanner.fatal(\"Character reference requires semicolon: \" + entity);\n        } else {\n          scanner.pos += entity.length;\n          return entity;\n        }\n      } else {\n        // we couldn't match any real entity, so see if this is a bad entity\n        // or something we can overlook.\n        var badEntity = peekMatcher(scanner, getApparentNamedEntity);\n        if (badEntity) scanner.fatal(\"Invalid character reference: \" + badEntity);\n        // `&aaaa` is ok with no semicolon\n        return null;\n      }\n    };\n\n    // Returns the sequence of one or two codepoints making up an entity as an array.\n    // Codepoints in the array are integers and may be out of the single-char JavaScript\n    // range.\n    var getCodePoints = function getCodePoints(namedEntity) {\n      return ENTITIES[namedEntity].codepoints;\n    };\n\n    var ALLOWED_AFTER_AMP = /^[\\u0009\\u000a\\u000c <&]/;\n\n    var getCharRefNumber = makeRegexMatcher(/^(?:[xX][0-9a-fA-F]+|[0-9]+);/);\n\n    var BIG_BAD_CODEPOINTS = function (obj) {\n      var list = [0x1FFFE, 0x1FFFF, 0x2FFFE, 0x2FFFF, 0x3FFFE, 0x3FFFF, 0x4FFFE, 0x4FFFF, 0x5FFFE, 0x5FFFF, 0x6FFFE, 0x6FFFF, 0x7FFFE, 0x7FFFF, 0x8FFFE, 0x8FFFF, 0x9FFFE, 0x9FFFF, 0xAFFFE, 0xAFFFF, 0xBFFFE, 0xBFFFF, 0xCFFFE, 0xCFFFF, 0xDFFFE, 0xDFFFF, 0xEFFFE, 0xEFFFF, 0xFFFFE, 0xFFFFF, 0x10FFFE, 0x10FFFF];\n      for (var i = 0; i < list.length; i++) {\n        obj[list[i]] = true;\n      }return obj;\n    }({});\n\n    var isLegalCodepoint = function isLegalCodepoint(cp) {\n      if (cp === 0 || cp >= 0x80 && cp <= 0x9f || cp >= 0xd800 && cp <= 0xdfff || cp >= 0x10ffff || cp >= 0x1 && cp <= 0x8 || cp === 0xb || cp >= 0xd && cp <= 0x1f || cp >= 0x7f && cp <= 0x9f || cp >= 0xfdd0 && cp <= 0xfdef || cp === 0xfffe || cp === 0xffff || cp >= 0x10000 && BIG_BAD_CODEPOINTS[cp]) return false;\n\n      return true;\n    };\n\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#consume-a-character-reference\n    //\n    // Matches a character reference if possible, including the initial `&`.\n    // Fails fatally in error cases (assuming an initial `&` is matched), like a disallowed codepoint\n    // number or a bad named character reference.\n    //\n    // `inAttribute` is truthy if we are in an attribute value.\n    //\n    // `allowedChar` is an optional character that,\n    // if found after the initial `&`, aborts parsing silently rather than failing fatally.  In real use it is\n    // either `\"`, `'`, or `>` and is supplied when parsing attribute values.  NOTE: In the current spec, the\n    // value of `allowedChar` doesn't actually seem to end up mattering, but there is still some debate about\n    // the right approach to ampersands.\n    getCharacterReference = HTMLTools.Parse.getCharacterReference = function (scanner, inAttribute, allowedChar) {\n      if (scanner.peek() !== '&')\n        // no ampersand\n        return null;\n\n      var afterAmp = scanner.rest().charAt(1);\n\n      if (afterAmp === '#') {\n        scanner.pos += 2;\n        // refNumber includes possible initial `x` and final semicolon\n        var refNumber = getCharRefNumber(scanner);\n        // At this point we've consumed the input, so we're committed to returning\n        // something or failing fatally.\n        if (!refNumber) scanner.fatal(\"Invalid numerical character reference starting with &#\");\n        var codepoint;\n        if (refNumber.charAt(0) === 'x' || refNumber.charAt(0) === 'X') {\n          // hex\n          var hex = refNumber.slice(1, -1);\n          while (hex.charAt(0) === '0') {\n            hex = hex.slice(1);\n          }if (hex.length > 6) scanner.fatal(\"Numerical character reference too large: 0x\" + hex);\n          codepoint = parseInt(hex || \"0\", 16);\n        } else {\n          var dec = refNumber.slice(0, -1);\n          while (dec.charAt(0) === '0') {\n            dec = dec.slice(1);\n          }if (dec.length > 7) scanner.fatal(\"Numerical character reference too large: \" + dec);\n          codepoint = parseInt(dec || \"0\", 10);\n        }\n        if (!isLegalCodepoint(codepoint)) scanner.fatal(\"Illegal codepoint in numerical character reference: &#\" + refNumber);\n        return { t: 'CharRef',\n          v: '&#' + refNumber,\n          cp: [codepoint] };\n      } else if (!afterAmp || // EOF\n      allowedChar && afterAmp === allowedChar || ALLOWED_AFTER_AMP.test(afterAmp)) {\n        return null;\n      } else {\n        var namedEntity = getNamedCharRef(scanner, inAttribute);\n        if (namedEntity) {\n          return { t: 'CharRef',\n            v: namedEntity,\n            cp: getCodePoints(namedEntity) };\n        } else {\n          return null;\n        }\n      }\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  }).call(this);\n\n  (function () {\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //                                                                                                             //\n    // packages/html-tools/tokenize.js                                                                             //\n    //                                                                                                             //\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //\n    // Token types:\n    //\n    // { t: 'Doctype',\n    //   v: String (entire Doctype declaration from the source),\n    //   name: String,\n    //   systemId: String (optional),\n    //   publicId: String (optional)\n    // }\n    //\n    // { t: 'Comment',\n    //   v: String (not including \"<!--\" and \"-->\")\n    // }\n    //\n    // { t: 'Chars',\n    //   v: String (pure text like you might pass to document.createTextNode,\n    //              no character references)\n    // }\n    //\n    // { t: 'Tag',\n    //   isEnd: Boolean (optional),\n    //   isSelfClosing: Boolean (optional),\n    //   n: String (tag name, in lowercase or camel case),\n    //   attrs: dictionary of { String: [tokens] }\n    //          OR [{ String: [tokens] }, TemplateTag tokens...]\n    //     (only for start tags; required)\n    // }\n    //\n    // { t: 'CharRef',\n    //   v: String (entire character reference from the source, e.g. \"&amp;\"),\n    //   cp: [Integer] (array of Unicode code point numbers it expands to)\n    // }\n    //\n    // We keep around both the original form of the character reference and its\n    // expansion so that subsequent processing steps have the option to\n    // re-emit it (if they are generating HTML) or interpret it.  Named and\n    // numerical code points may be more than 16 bits, in which case they\n    // need to passed through codePointToString to make a JavaScript string.\n    // Most named entities and all numeric character references are one codepoint\n    // (e.g. \"&amp;\" is [38]), but a few are two codepoints.\n    //\n    // { t: 'TemplateTag',\n    //   v: HTMLTools.TemplateTag\n    // }\n\n    // The HTML tokenization spec says to preprocess the input stream to replace\n    // CR(LF)? with LF.  However, preprocessing `scanner` would complicate things\n    // by making indexes not match the input (e.g. for error messages), so we just\n    // keep in mind as we go along that an LF might be represented by CRLF or CR.\n    // In most cases, it doesn't actually matter what combination of whitespace\n    // characters are present (e.g. inside tags).\n    var HTML_SPACE = /^[\\f\\n\\r\\t ]/;\n\n    var convertCRLF = function convertCRLF(str) {\n      return str.replace(/\\r\\n?/g, '\\n');\n    };\n\n    getComment = HTMLTools.Parse.getComment = function (scanner) {\n      if (scanner.rest().slice(0, 4) !== '<!--') return null;\n      scanner.pos += 4;\n\n      // Valid comments are easy to parse; they end at the first `--`!\n      // Our main job is throwing errors.\n\n      var rest = scanner.rest();\n      if (rest.charAt(0) === '>' || rest.slice(0, 2) === '->') scanner.fatal(\"HTML comment can't start with > or ->\");\n\n      var closePos = rest.indexOf('-->');\n      if (closePos < 0) scanner.fatal(\"Unclosed HTML comment\");\n\n      var commentContents = rest.slice(0, closePos);\n      if (commentContents.slice(-1) === '-') scanner.fatal(\"HTML comment must end at first `--`\");\n      if (commentContents.indexOf(\"--\") >= 0) scanner.fatal(\"HTML comment cannot contain `--` anywhere\");\n      if (commentContents.indexOf('\\u0000') >= 0) scanner.fatal(\"HTML comment cannot contain NULL\");\n\n      scanner.pos += closePos + 3;\n\n      return { t: 'Comment',\n        v: convertCRLF(commentContents) };\n    };\n\n    var skipSpaces = function skipSpaces(scanner) {\n      while (HTML_SPACE.test(scanner.peek())) {\n        scanner.pos++;\n      }\n    };\n\n    var requireSpaces = function requireSpaces(scanner) {\n      if (!HTML_SPACE.test(scanner.peek())) scanner.fatal(\"Expected space\");\n      skipSpaces(scanner);\n    };\n\n    var getDoctypeQuotedString = function getDoctypeQuotedString(scanner) {\n      var quote = scanner.peek();\n      if (!(quote === '\"' || quote === \"'\")) scanner.fatal(\"Expected single or double quote in DOCTYPE\");\n      scanner.pos++;\n\n      if (scanner.peek() === quote)\n        // prevent a falsy return value (empty string)\n        scanner.fatal(\"Malformed DOCTYPE\");\n\n      var str = '';\n      var ch;\n      while (ch = scanner.peek(), ch !== quote) {\n        if (!ch || ch === '\\u0000' || ch === '>') scanner.fatal(\"Malformed DOCTYPE\");\n        str += ch;\n        scanner.pos++;\n      }\n\n      scanner.pos++;\n\n      return str;\n    };\n\n    // See http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#the-doctype.\n    //\n    // If `getDocType` sees \"<!DOCTYPE\" (case-insensitive), it will match or fail fatally.\n    getDoctype = HTMLTools.Parse.getDoctype = function (scanner) {\n      if (HTMLTools.asciiLowerCase(scanner.rest().slice(0, 9)) !== '<!doctype') return null;\n      var start = scanner.pos;\n      scanner.pos += 9;\n\n      requireSpaces(scanner);\n\n      var ch = scanner.peek();\n      if (!ch || ch === '>' || ch === '\\u0000') scanner.fatal('Malformed DOCTYPE');\n      var name = ch;\n      scanner.pos++;\n\n      while (ch = scanner.peek(), !(HTML_SPACE.test(ch) || ch === '>')) {\n        if (!ch || ch === '\\u0000') scanner.fatal('Malformed DOCTYPE');\n        name += ch;\n        scanner.pos++;\n      }\n      name = HTMLTools.asciiLowerCase(name);\n\n      // Now we're looking at a space or a `>`.\n      skipSpaces(scanner);\n\n      var systemId = null;\n      var publicId = null;\n\n      if (scanner.peek() !== '>') {\n        // Now we're essentially in the \"After DOCTYPE name state\" of the tokenizer,\n        // but we're not looking at space or `>`.\n\n        // this should be \"public\" or \"system\".\n        var publicOrSystem = HTMLTools.asciiLowerCase(scanner.rest().slice(0, 6));\n\n        if (publicOrSystem === 'system') {\n          scanner.pos += 6;\n          requireSpaces(scanner);\n          systemId = getDoctypeQuotedString(scanner);\n          skipSpaces(scanner);\n          if (scanner.peek() !== '>') scanner.fatal(\"Malformed DOCTYPE\");\n        } else if (publicOrSystem === 'public') {\n          scanner.pos += 6;\n          requireSpaces(scanner);\n          publicId = getDoctypeQuotedString(scanner);\n          if (scanner.peek() !== '>') {\n            requireSpaces(scanner);\n            if (scanner.peek() !== '>') {\n              systemId = getDoctypeQuotedString(scanner);\n              skipSpaces(scanner);\n              if (scanner.peek() !== '>') scanner.fatal(\"Malformed DOCTYPE\");\n            }\n          }\n        } else {\n          scanner.fatal(\"Expected PUBLIC or SYSTEM in DOCTYPE\");\n        }\n      }\n\n      // looking at `>`\n      scanner.pos++;\n      var result = { t: 'Doctype',\n        v: scanner.input.slice(start, scanner.pos),\n        name: name };\n\n      if (systemId) result.systemId = systemId;\n      if (publicId) result.publicId = publicId;\n\n      return result;\n    };\n\n    // The special character `{` is only allowed as the first character\n    // of a Chars, so that we have a chance to detect template tags.\n    var getChars = makeRegexMatcher(/^[^&<\\u0000][^&<\\u0000{]*/);\n\n    var assertIsTemplateTag = function assertIsTemplateTag(x) {\n      if (!(x instanceof HTMLTools.TemplateTag)) throw new Error(\"Expected an instance of HTMLTools.TemplateTag\");\n      return x;\n    };\n\n    // Returns the next HTML token, or `null` if we reach EOF.\n    //\n    // Note that if we have a `getTemplateTag` function that sometimes\n    // consumes characters and emits nothing (e.g. in the case of template\n    // comments), we may go from not-at-EOF to at-EOF and return `null`,\n    // while otherwise we always find some token to return.\n    getHTMLToken = HTMLTools.Parse.getHTMLToken = function (scanner, dataMode) {\n      var result = null;\n      if (scanner.getTemplateTag) {\n        // Try to parse a template tag by calling out to the provided\n        // `getTemplateTag` function.  If the function returns `null` but\n        // consumes characters, it must have parsed a comment or something,\n        // so we loop and try it again.  If it ever returns `null` without\n        // consuming anything, that means it didn't see anything interesting\n        // so we look for a normal token.  If it returns a truthy value,\n        // the value must be instanceof HTMLTools.TemplateTag.  We wrap it\n        // in a Special token.\n        var lastPos = scanner.pos;\n        result = scanner.getTemplateTag(scanner, dataMode === 'rcdata' ? TEMPLATE_TAG_POSITION.IN_RCDATA : dataMode === 'rawtext' ? TEMPLATE_TAG_POSITION.IN_RAWTEXT : TEMPLATE_TAG_POSITION.ELEMENT);\n\n        if (result) return { t: 'TemplateTag', v: assertIsTemplateTag(result) };else if (scanner.pos > lastPos) return null;\n      }\n\n      var chars = getChars(scanner);\n      if (chars) return { t: 'Chars',\n        v: convertCRLF(chars) };\n\n      var ch = scanner.peek();\n      if (!ch) return null; // EOF\n\n      if (ch === '\\u0000') scanner.fatal(\"Illegal NULL character\");\n\n      if (ch === '&') {\n        if (dataMode !== 'rawtext') {\n          var charRef = getCharacterReference(scanner);\n          if (charRef) return charRef;\n        }\n\n        scanner.pos++;\n        return { t: 'Chars',\n          v: '&' };\n      }\n\n      // If we're here, we're looking at `<`.\n\n      if (scanner.peek() === '<' && dataMode) {\n        // don't interpret tags\n        scanner.pos++;\n        return { t: 'Chars',\n          v: '<' };\n      }\n\n      // `getTag` will claim anything starting with `<` not followed by `!`.\n      // `getComment` takes `<!--` and getDoctype takes `<!doctype`.\n      result = getTagToken(scanner) || getComment(scanner) || getDoctype(scanner);\n\n      if (result) return result;\n\n      scanner.fatal(\"Unexpected `<!` directive.\");\n    };\n\n    var getTagName = makeRegexMatcher(/^[a-zA-Z][^\\f\\n\\r\\t />{]*/);\n    var getClangle = makeRegexMatcher(/^>/);\n    var getSlash = makeRegexMatcher(/^\\//);\n    var getAttributeName = makeRegexMatcher(/^[^>/\\u0000\"'<=\\f\\n\\r\\t ][^\\f\\n\\r\\t /=>\"'<\\u0000]*/);\n\n    // Try to parse `>` or `/>`, mutating `tag` to be self-closing in the latter\n    // case (and failing fatally if `/` isn't followed by `>`).\n    // Return tag if successful.\n    var handleEndOfTag = function handleEndOfTag(scanner, tag) {\n      if (getClangle(scanner)) return tag;\n\n      if (getSlash(scanner)) {\n        if (!getClangle(scanner)) scanner.fatal(\"Expected `>` after `/`\");\n        tag.isSelfClosing = true;\n        return tag;\n      }\n\n      return null;\n    };\n\n    // Scan a quoted or unquoted attribute value (omit `quote` for unquoted).\n    var getAttributeValue = function getAttributeValue(scanner, quote) {\n      if (quote) {\n        if (scanner.peek() !== quote) return null;\n        scanner.pos++;\n      }\n\n      var tokens = [];\n      var charsTokenToExtend = null;\n\n      var charRef;\n      while (true) {\n        var ch = scanner.peek();\n        var templateTag;\n        var curPos = scanner.pos;\n        if (quote && ch === quote) {\n          scanner.pos++;\n          return tokens;\n        } else if (!quote && (HTML_SPACE.test(ch) || ch === '>')) {\n          return tokens;\n        } else if (!ch) {\n          scanner.fatal(\"Unclosed attribute in tag\");\n        } else if (quote ? ch === '\\u0000' : '\\u0000\"\\'<=`'.indexOf(ch) >= 0) {\n          scanner.fatal(\"Unexpected character in attribute value\");\n        } else if (ch === '&' && (charRef = getCharacterReference(scanner, true, quote || '>'))) {\n          tokens.push(charRef);\n          charsTokenToExtend = null;\n        } else if (scanner.getTemplateTag && ((templateTag = scanner.getTemplateTag(scanner, TEMPLATE_TAG_POSITION.IN_ATTRIBUTE)) || scanner.pos > curPos /* `{{! comment}}` */)) {\n            if (templateTag) {\n              tokens.push({ t: 'TemplateTag',\n                v: assertIsTemplateTag(templateTag) });\n              charsTokenToExtend = null;\n            }\n          } else {\n          if (!charsTokenToExtend) {\n            charsTokenToExtend = { t: 'Chars', v: '' };\n            tokens.push(charsTokenToExtend);\n          }\n          charsTokenToExtend.v += ch === '\\r' ? '\\n' : ch;\n          scanner.pos++;\n          if (quote && ch === '\\r' && scanner.peek() === '\\n') scanner.pos++;\n        }\n      }\n    };\n\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    getTagToken = HTMLTools.Parse.getTagToken = function (scanner) {\n      if (!(scanner.peek() === '<' && scanner.rest().charAt(1) !== '!')) return null;\n      scanner.pos++;\n\n      var tag = { t: 'Tag' };\n\n      // now looking at the character after `<`, which is not a `!`\n      if (scanner.peek() === '/') {\n        tag.isEnd = true;\n        scanner.pos++;\n      }\n\n      var tagName = getTagName(scanner);\n      if (!tagName) scanner.fatal(\"Expected tag name after `<`\");\n      tag.n = HTMLTools.properCaseTagName(tagName);\n\n      if (scanner.peek() === '/' && tag.isEnd) scanner.fatal(\"End tag can't have trailing slash\");\n      if (handleEndOfTag(scanner, tag)) return tag;\n\n      if (scanner.isEOF()) scanner.fatal(\"Unclosed `<`\");\n\n      if (!HTML_SPACE.test(scanner.peek()))\n        // e.g. `<a{{b}}>`\n        scanner.fatal(\"Expected space after tag name\");\n\n      // we're now in \"Before attribute name state\" of the tokenizer\n      skipSpaces(scanner);\n\n      if (scanner.peek() === '/' && tag.isEnd) scanner.fatal(\"End tag can't have trailing slash\");\n      if (handleEndOfTag(scanner, tag)) return tag;\n\n      if (tag.isEnd) scanner.fatal(\"End tag can't have attributes\");\n\n      tag.attrs = {};\n      var nondynamicAttrs = tag.attrs;\n\n      while (true) {\n        // Note: at the top of this loop, we've already skipped any spaces.\n\n        // This will be set to true if after parsing the attribute, we should\n        // require spaces (or else an end of tag, i.e. `>` or `/>`).\n        var spacesRequiredAfter = false;\n\n        // first, try for a template tag.\n        var curPos = scanner.pos;\n        var templateTag = scanner.getTemplateTag && scanner.getTemplateTag(scanner, TEMPLATE_TAG_POSITION.IN_START_TAG);\n        if (templateTag || scanner.pos > curPos) {\n          if (templateTag) {\n            if (tag.attrs === nondynamicAttrs) tag.attrs = [nondynamicAttrs];\n            tag.attrs.push({ t: 'TemplateTag',\n              v: assertIsTemplateTag(templateTag) });\n          } // else, must have scanned a `{{! comment}}`\n\n          spacesRequiredAfter = true;\n        } else {\n\n          var attributeName = getAttributeName(scanner);\n          if (!attributeName) scanner.fatal(\"Expected attribute name in tag\");\n          // Throw error on `{` in attribute name.  This provides *some* error message\n          // if someone writes `<a x{{y}}>` or `<a x{{y}}=z>`.  The HTML tokenization\n          // spec doesn't say that `{` is invalid, but the DOM API (setAttribute) won't\n          // allow it, so who cares.\n          if (attributeName.indexOf('{') >= 0) scanner.fatal(\"Unexpected `{` in attribute name.\");\n          attributeName = HTMLTools.properCaseAttributeName(attributeName);\n\n          if (hasOwnProperty.call(nondynamicAttrs, attributeName)) scanner.fatal(\"Duplicate attribute in tag: \" + attributeName);\n\n          nondynamicAttrs[attributeName] = [];\n\n          skipSpaces(scanner);\n\n          if (handleEndOfTag(scanner, tag)) return tag;\n\n          var ch = scanner.peek();\n          if (!ch) scanner.fatal(\"Unclosed <\");\n          if ('\\u0000\"\\'<'.indexOf(ch) >= 0) scanner.fatal(\"Unexpected character after attribute name in tag\");\n\n          if (ch === '=') {\n            scanner.pos++;\n\n            skipSpaces(scanner);\n\n            ch = scanner.peek();\n            if (!ch) scanner.fatal(\"Unclosed <\");\n            if ('\\u0000><=`'.indexOf(ch) >= 0) scanner.fatal(\"Unexpected character after = in tag\");\n\n            if (ch === '\"' || ch === \"'\") nondynamicAttrs[attributeName] = getAttributeValue(scanner, ch);else nondynamicAttrs[attributeName] = getAttributeValue(scanner);\n\n            spacesRequiredAfter = true;\n          }\n        }\n        // now we are in the \"post-attribute\" position, whether it was a template tag\n        // attribute (like `{{x}}`) or a normal one (like `x` or `x=y`).\n\n        if (handleEndOfTag(scanner, tag)) return tag;\n\n        if (scanner.isEOF()) scanner.fatal(\"Unclosed `<`\");\n\n        if (spacesRequiredAfter) requireSpaces(scanner);else skipSpaces(scanner);\n\n        if (handleEndOfTag(scanner, tag)) return tag;\n      }\n    };\n\n    TEMPLATE_TAG_POSITION = HTMLTools.TEMPLATE_TAG_POSITION = {\n      ELEMENT: 1,\n      IN_START_TAG: 2,\n      IN_ATTRIBUTE: 3,\n      IN_RCDATA: 4,\n      IN_RAWTEXT: 5\n    };\n\n    // tagName must be proper case\n    isLookingAtEndTag = function isLookingAtEndTag(scanner, tagName) {\n      var rest = scanner.rest();\n      var pos = 0; // into rest\n      var firstPart = /^<\\/([a-zA-Z]+)/.exec(rest);\n      if (firstPart && HTMLTools.properCaseTagName(firstPart[1]) === tagName) {\n        // we've seen `</foo`, now see if the end tag continues\n        pos += firstPart[0].length;\n        while (pos < rest.length && HTML_SPACE.test(rest.charAt(pos))) {\n          pos++;\n        }if (pos < rest.length && rest.charAt(pos) === '>') return true;\n      }\n      return false;\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  }).call(this);\n\n  (function () {\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //                                                                                                             //\n    // packages/html-tools/templatetag.js                                                                          //\n    //                                                                                                             //\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //\n    // _assign is like _.extend or the upcoming Object.assign.\n    // Copy src's own, enumerable properties onto tgt and return\n    // tgt.\n    var _hasOwnProperty = Object.prototype.hasOwnProperty;\n    var _assign = function _assign(tgt, src) {\n      for (var k in src) {\n        if (_hasOwnProperty.call(src, k)) tgt[k] = src[k];\n      }\n      return tgt;\n    };\n\n    HTMLTools.TemplateTag = function (props) {\n      if (!(this instanceof HTMLTools.TemplateTag))\n        // called without `new`\n        return new HTMLTools.TemplateTag();\n\n      if (props) _assign(this, props);\n    };\n\n    _assign(HTMLTools.TemplateTag.prototype, {\n      constructorName: 'HTMLTools.TemplateTag',\n      toJS: function toJS(visitor) {\n        return visitor.generateCall(this.constructorName, _assign({}, this));\n      }\n    });\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  }).call(this);\n\n  (function () {\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //                                                                                                             //\n    // packages/html-tools/parse.js                                                                                //\n    //                                                                                                             //\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //\n\n    // Parse a \"fragment\" of HTML, up to the end of the input or a particular\n    // template tag (using the \"shouldStop\" option).\n    HTMLTools.parseFragment = function (input, options) {\n      var scanner;\n      if (typeof input === 'string') scanner = new Scanner(input);else\n        // input can be a scanner.  We'd better not have a different\n        // value for the \"getTemplateTag\" option as when the scanner\n        // was created, because we don't do anything special to reset\n        // the value (which is attached to the scanner).\n        scanner = input;\n\n      // ```\n      // { getTemplateTag: function (scanner, templateTagPosition) {\n      //     if (templateTagPosition === HTMLTools.TEMPLATE_TAG_POSITION.ELEMENT) {\n      //       ...\n      // ```\n      if (options && options.getTemplateTag) scanner.getTemplateTag = options.getTemplateTag;\n\n      // function (scanner) -> boolean\n      var shouldStop = options && options.shouldStop;\n\n      var result;\n      if (options && options.textMode) {\n        if (options.textMode === HTML.TEXTMODE.STRING) {\n          result = getRawText(scanner, null, shouldStop);\n        } else if (options.textMode === HTML.TEXTMODE.RCDATA) {\n          result = getRCData(scanner, null, shouldStop);\n        } else {\n          throw new Error(\"Unsupported textMode: \" + options.textMode);\n        }\n      } else {\n        result = getContent(scanner, shouldStop);\n      }\n      if (!scanner.isEOF()) {\n        // If we aren't at the end of the input, we either stopped at an unmatched\n        // HTML end tag or at a template tag (like `{{else}}` or `{{/if}}`).\n        // Detect the former case (stopped at an HTML end tag) and throw a good\n        // error.\n\n        var posBefore = scanner.pos;\n\n        try {\n          var endTag = getHTMLToken(scanner);\n        } catch (e) {}\n        // ignore errors from getTemplateTag\n\n\n        // XXX we make some assumptions about shouldStop here, like that it\n        // won't tell us to stop at an HTML end tag.  Should refactor\n        // `shouldStop` into something more suitable.\n        if (endTag && endTag.t === 'Tag' && endTag.isEnd) {\n          var closeTag = endTag.n;\n          var isVoidElement = HTML.isVoidElement(closeTag);\n          scanner.fatal(\"Unexpected HTML close tag\" + (isVoidElement ? '.  <' + endTag.n + '> should have no close tag.' : ''));\n        }\n\n        scanner.pos = posBefore; // rewind, we'll continue parsing as usual\n\n        // If no \"shouldStop\" option was provided, we should have consumed the whole\n        // input.\n        if (!shouldStop) scanner.fatal(\"Expected EOF\");\n      }\n\n      return result;\n    };\n\n    // Take a numeric Unicode code point, which may be larger than 16 bits,\n    // and encode it as a JavaScript UTF-16 string.\n    //\n    // Adapted from\n    // http://stackoverflow.com/questions/7126384/expressing-utf-16-unicode-characters-in-javascript/7126661.\n    codePointToString = HTMLTools.codePointToString = function (cp) {\n      if (cp >= 0 && cp <= 0xD7FF || cp >= 0xE000 && cp <= 0xFFFF) {\n        return String.fromCharCode(cp);\n      } else if (cp >= 0x10000 && cp <= 0x10FFFF) {\n\n        // we substract 0x10000 from cp to get a 20-bit number\n        // in the range 0..0xFFFF\n        cp -= 0x10000;\n\n        // we add 0xD800 to the number formed by the first 10 bits\n        // to give the first byte\n        var first = ((0xffc00 & cp) >> 10) + 0xD800;\n\n        // we add 0xDC00 to the number formed by the low 10 bits\n        // to give the second byte\n        var second = (0x3ff & cp) + 0xDC00;\n\n        return String.fromCharCode(first) + String.fromCharCode(second);\n      } else {\n        return '';\n      }\n    };\n\n    getContent = HTMLTools.Parse.getContent = function (scanner, shouldStopFunc) {\n      var items = [];\n\n      while (!scanner.isEOF()) {\n        if (shouldStopFunc && shouldStopFunc(scanner)) break;\n\n        var posBefore = scanner.pos;\n        var token = getHTMLToken(scanner);\n        if (!token)\n          // tokenizer reached EOF on its own, e.g. while scanning\n          // template comments like `{{! foo}}`.\n          continue;\n\n        if (token.t === 'Doctype') {\n          scanner.fatal(\"Unexpected Doctype\");\n        } else if (token.t === 'Chars') {\n          pushOrAppendString(items, token.v);\n        } else if (token.t === 'CharRef') {\n          items.push(convertCharRef(token));\n        } else if (token.t === 'Comment') {\n          items.push(HTML.Comment(token.v));\n        } else if (token.t === 'TemplateTag') {\n          items.push(token.v);\n        } else if (token.t === 'Tag') {\n          if (token.isEnd) {\n            // Stop when we encounter an end tag at the top level.\n            // Rewind; we'll re-parse the end tag later.\n            scanner.pos = posBefore;\n            break;\n          }\n\n          var tagName = token.n;\n          // is this an element with no close tag (a BR, HR, IMG, etc.) based\n          // on its name?\n          var isVoid = HTML.isVoidElement(tagName);\n          if (token.isSelfClosing) {\n            if (!(isVoid || HTML.isKnownSVGElement(tagName) || tagName.indexOf(':') >= 0)) scanner.fatal('Only certain elements like BR, HR, IMG, etc. (and foreign elements like SVG) are allowed to self-close');\n          }\n\n          // result of parseAttrs may be null\n          var attrs = parseAttrs(token.attrs);\n          // arrays need to be wrapped in HTML.Attrs(...)\n          // when used to construct tags\n          if (HTML.isArray(attrs)) attrs = HTML.Attrs.apply(null, attrs);\n\n          var tagFunc = HTML.getTag(tagName);\n          if (isVoid || token.isSelfClosing) {\n            items.push(attrs ? tagFunc(attrs) : tagFunc());\n          } else {\n            // parse HTML tag contents.\n\n            // HTML treats a final `/` in a tag as part of an attribute, as in `<a href=/foo/>`, but the template author who writes `<circle r={{r}}/>`, say, may not be thinking about that, so generate a good error message in the \"looks like self-close\" case.\n            var looksLikeSelfClose = scanner.input.substr(scanner.pos - 2, 2) === '/>';\n\n            var content = null;\n            if (token.n === 'textarea') {\n              if (scanner.peek() === '\\n') scanner.pos++;\n              var textareaValue = getRCData(scanner, token.n, shouldStopFunc);\n              if (textareaValue) {\n                if (attrs instanceof HTML.Attrs) {\n                  attrs = HTML.Attrs.apply(null, attrs.value.concat([{ value: textareaValue }]));\n                } else {\n                  attrs = attrs || {};\n                  attrs.value = textareaValue;\n                }\n              }\n            } else if (token.n === 'script' || token.n === 'style') {\n              content = getRawText(scanner, token.n, shouldStopFunc);\n            } else {\n              content = getContent(scanner, shouldStopFunc);\n            }\n\n            var endTag = getHTMLToken(scanner);\n\n            if (!(endTag && endTag.t === 'Tag' && endTag.isEnd && endTag.n === tagName)) scanner.fatal('Expected \"' + tagName + '\" end tag' + (looksLikeSelfClose ? ' -- if the \"<' + token.n + ' />\" tag was supposed to self-close, try adding a space before the \"/\"' : ''));\n\n            // XXX support implied end tags in cases allowed by the spec\n\n            // make `content` into an array suitable for applying tag constructor\n            // as in `FOO.apply(null, content)`.\n            if (content == null) content = [];else if (!(content instanceof Array)) content = [content];\n\n            items.push(HTML.getTag(tagName).apply(null, (attrs ? [attrs] : []).concat(content)));\n          }\n        } else {\n          scanner.fatal(\"Unknown token type: \" + token.t);\n        }\n      }\n\n      if (items.length === 0) return null;else if (items.length === 1) return items[0];else return items;\n    };\n\n    var pushOrAppendString = function pushOrAppendString(items, string) {\n      if (items.length && typeof items[items.length - 1] === 'string') items[items.length - 1] += string;else items.push(string);\n    };\n\n    // get RCDATA to go in the lowercase (or camel case) tagName (e.g. \"textarea\")\n    getRCData = HTMLTools.Parse.getRCData = function (scanner, tagName, shouldStopFunc) {\n      var items = [];\n\n      while (!scanner.isEOF()) {\n        // break at appropriate end tag\n        if (tagName && isLookingAtEndTag(scanner, tagName)) break;\n\n        if (shouldStopFunc && shouldStopFunc(scanner)) break;\n\n        var token = getHTMLToken(scanner, 'rcdata');\n        if (!token)\n          // tokenizer reached EOF on its own, e.g. while scanning\n          // template comments like `{{! foo}}`.\n          continue;\n\n        if (token.t === 'Chars') {\n          pushOrAppendString(items, token.v);\n        } else if (token.t === 'CharRef') {\n          items.push(convertCharRef(token));\n        } else if (token.t === 'TemplateTag') {\n          items.push(token.v);\n        } else {\n          // (can't happen)\n          scanner.fatal(\"Unknown or unexpected token type: \" + token.t);\n        }\n      }\n\n      if (items.length === 0) return null;else if (items.length === 1) return items[0];else return items;\n    };\n\n    var getRawText = function getRawText(scanner, tagName, shouldStopFunc) {\n      var items = [];\n\n      while (!scanner.isEOF()) {\n        // break at appropriate end tag\n        if (tagName && isLookingAtEndTag(scanner, tagName)) break;\n\n        if (shouldStopFunc && shouldStopFunc(scanner)) break;\n\n        var token = getHTMLToken(scanner, 'rawtext');\n        if (!token)\n          // tokenizer reached EOF on its own, e.g. while scanning\n          // template comments like `{{! foo}}`.\n          continue;\n\n        if (token.t === 'Chars') {\n          pushOrAppendString(items, token.v);\n        } else if (token.t === 'TemplateTag') {\n          items.push(token.v);\n        } else {\n          // (can't happen)\n          scanner.fatal(\"Unknown or unexpected token type: \" + token.t);\n        }\n      }\n\n      if (items.length === 0) return null;else if (items.length === 1) return items[0];else return items;\n    };\n\n    // Input: A token like `{ t: 'CharRef', v: '&amp;', cp: [38] }`.\n    //\n    // Output: A tag like `HTML.CharRef({ html: '&amp;', str: '&' })`.\n    var convertCharRef = function convertCharRef(token) {\n      var codePoints = token.cp;\n      var str = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        str += codePointToString(codePoints[i]);\n      }return HTML.CharRef({ html: token.v, str: str });\n    };\n\n    // Input is always a dictionary (even if zero attributes) and each\n    // value in the dictionary is an array of `Chars`, `CharRef`,\n    // and maybe `TemplateTag` tokens.\n    //\n    // Output is null if there are zero attributes, and otherwise a\n    // dictionary, or an array of dictionaries and template tags.\n    // Each value in the dictionary is HTMLjs (e.g. a\n    // string or an array of `Chars`, `CharRef`, and `TemplateTag`\n    // nodes).\n    //\n    // An attribute value with no input tokens is represented as \"\",\n    // not an empty array, in order to prop open empty attributes\n    // with no template tags.\n    var parseAttrs = function parseAttrs(attrs) {\n      var result = null;\n\n      if (HTML.isArray(attrs)) {\n        // first element is nondynamic attrs, rest are template tags\n        var nondynamicAttrs = parseAttrs(attrs[0]);\n        if (nondynamicAttrs) {\n          result = result || [];\n          result.push(nondynamicAttrs);\n        }\n        for (var i = 1; i < attrs.length; i++) {\n          var token = attrs[i];\n          if (token.t !== 'TemplateTag') throw new Error(\"Expected TemplateTag token\");\n          result = result || [];\n          result.push(token.v);\n        }\n        return result;\n      }\n\n      for (var k in attrs) {\n        if (!result) result = {};\n\n        var inValue = attrs[k];\n        var outParts = [];\n        for (var i = 0; i < inValue.length; i++) {\n          var token = inValue[i];\n          if (token.t === 'CharRef') {\n            outParts.push(convertCharRef(token));\n          } else if (token.t === 'TemplateTag') {\n            outParts.push(token.v);\n          } else if (token.t === 'Chars') {\n            pushOrAppendString(outParts, token.v);\n          }\n        }\n\n        var outValue = inValue.length === 0 ? '' : outParts.length === 1 ? outParts[0] : outParts;\n        var properKey = HTMLTools.properCaseAttributeName(k);\n        result[properKey] = outValue;\n      }\n\n      return result;\n    };\n\n    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n  }).call(this);\n\n  /* Exports */\n  if (typeof Package === 'undefined') Package = {};\n  (function (pkg, symbols) {\n    for (var s in symbols) {\n      s in pkg || (pkg[s] = symbols[s]);\n    }\n  })(Package['html-tools'] = {}, {\n    HTMLTools: HTMLTools\n  });\n})();\n\n//# sourceMappingURL=html-tools.js.map","ast":null,"map":{"version":3,"sources":["/bundle/programs/server/packages/html-tools.js"],"names":[],"mappings":"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","file":"/bundle/programs/server/packages/html-tools.js.map","sourcesContent":["(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar HTMLTools, Scanner, makeRegexMatcher, getCharacterReference, getComment, getDoctype, getHTMLToken, getTagToken, TEMPLATE_TAG_POSITION, isLookingAtEndTag, codePointToString, getContent, getRCData;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/html-tools/utils.js                                                                                //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\nHTMLTools = {};\nHTMLTools.Parse = {};\n\nvar asciiLowerCase = HTMLTools.asciiLowerCase = function (str) {\n  return str.replace(/[A-Z]/g, function (c) {\n    return String.fromCharCode(c.charCodeAt(0) + 32);\n  });\n};\n\nvar svgCamelCaseAttributes = 'attributeName attributeType baseFrequency baseProfile calcMode clipPathUnits contentScriptType contentStyleType diffuseConstant edgeMode externalResourcesRequired filterRes filterUnits glyphRef glyphRef gradientTransform gradientTransform gradientUnits gradientUnits kernelMatrix kernelUnitLength kernelUnitLength kernelUnitLength keyPoints keySplines keyTimes lengthAdjust limitingConeAngle markerHeight markerUnits markerWidth maskContentUnits maskUnits numOctaves pathLength patternContentUnits patternTransform patternUnits pointsAtX pointsAtY pointsAtZ preserveAlpha preserveAspectRatio primitiveUnits refX refY repeatCount repeatDur requiredExtensions requiredFeatures specularConstant specularExponent specularExponent spreadMethod spreadMethod startOffset stdDeviation stitchTiles surfaceScale surfaceScale systemLanguage tableValues targetX targetY textLength textLength viewBox viewTarget xChannelSelector yChannelSelector zoomAndPan'.split(' ');\n\nvar properAttributeCaseMap = (function (map) {\n  for (var i = 0; i < svgCamelCaseAttributes.length; i++) {\n    var a = svgCamelCaseAttributes[i];\n    map[asciiLowerCase(a)] = a;\n  }\n  return map;\n})({});\n\nvar properTagCaseMap = (function (map) {\n  var knownElements = HTML.knownElementNames;\n  for (var i = 0; i < knownElements.length; i++) {\n    var a = knownElements[i];\n    map[asciiLowerCase(a)] = a;\n  }\n  return map;\n})({});\n\n// Take a tag name in any case and make it the proper case for HTML.\n//\n// Modern browsers let you embed SVG in HTML, but SVG elements are special\n// in that they have a case-sensitive DOM API (nodeName, getAttribute,\n// setAttribute).  For example, it has to be `setAttribute(\"viewBox\")`,\n// not `\"viewbox\"`.  However, the browser's HTML parser is NOT case sensitive\n// and will fix the case for you, so if you write `<svg viewbox=\"...\">`\n// you actually get a `\"viewBox\"` attribute.  Any HTML-parsing toolchain\n// must do the same.\nHTMLTools.properCaseTagName = function (name) {\n  var lowered = asciiLowerCase(name);\n  return properTagCaseMap.hasOwnProperty(lowered) ?\n    properTagCaseMap[lowered] : lowered;\n};\n\n// See docs for properCaseTagName.\nHTMLTools.properCaseAttributeName = function (name) {\n  var lowered = asciiLowerCase(name);\n  return properAttributeCaseMap.hasOwnProperty(lowered) ?\n    properAttributeCaseMap[lowered] : lowered;\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/html-tools/scanner.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n// This is a Scanner class suitable for any parser/lexer/tokenizer.\n//\n// A Scanner has an immutable source document (string) `input` and a current\n// position `pos`, an index into the string, which can be set at will.\n//\n// * `new Scanner(input)` - constructs a Scanner with source string `input`\n// * `scanner.rest()` - returns the rest of the input after `pos`\n// * `scanner.peek()` - returns the character at `pos`\n// * `scanner.isEOF()` - true if `pos` is at or beyond the end of `input`\n// * `scanner.fatal(msg)` - throw an error indicating a problem at `pos`\n\nScanner = HTMLTools.Scanner = function (input) {\n  this.input = input; // public, read-only\n  this.pos = 0; // public, read-write\n};\n\nScanner.prototype.rest = function () {\n  // Slicing a string is O(1) in modern JavaScript VMs (including old IE).\n  return this.input.slice(this.pos);\n};\n\nScanner.prototype.isEOF = function () {\n  return this.pos >= this.input.length;\n};\n\nScanner.prototype.fatal = function (msg) {\n  // despite this default, you should always provide a message!\n  msg = (msg || \"Parse error\");\n\n  var CONTEXT_AMOUNT = 20;\n\n  var input = this.input;\n  var pos = this.pos;\n  var pastInput = input.substring(pos - CONTEXT_AMOUNT - 1, pos);\n  if (pastInput.length > CONTEXT_AMOUNT)\n    pastInput = '...' + pastInput.substring(-CONTEXT_AMOUNT);\n\n  var upcomingInput = input.substring(pos, pos + CONTEXT_AMOUNT + 1);\n  if (upcomingInput.length > CONTEXT_AMOUNT)\n    upcomingInput = upcomingInput.substring(0, CONTEXT_AMOUNT) + '...';\n\n  var positionDisplay = ((pastInput + upcomingInput).replace(/\\n/g, ' ') + '\\n' +\n                         (new Array(pastInput.length + 1).join(' ')) + \"^\");\n\n  var e = new Error(msg + \"\\n\" + positionDisplay);\n\n  e.offset = pos;\n  var allPastInput = input.substring(0, pos);\n  e.line = (1 + (allPastInput.match(/\\n/g) || []).length);\n  e.col = (1 + pos - allPastInput.lastIndexOf('\\n'));\n  e.scanner = this;\n\n  throw e;\n};\n\n// Peek at the next character.\n//\n// If `isEOF`, returns an empty string.\nScanner.prototype.peek = function () {\n  return this.input.charAt(this.pos);\n};\n\n// Constructs a `getFoo` function where `foo` is specified with a regex.\n// The regex should start with `^`.  The constructed function will return\n// match group 1, if it exists and matches a non-empty string, or else\n// the entire matched string (or null if there is no match).\n//\n// A `getFoo` function tries to match and consume a foo.  If it succeeds,\n// the current position of the scanner is advanced.  If it fails, the\n// current position is not advanced and a falsy value (typically null)\n// is returned.\nmakeRegexMatcher = function (regex) {\n  return function (scanner) {\n    var match = regex.exec(scanner.rest());\n\n    if (! match)\n      return null;\n\n    scanner.pos += match[0].length;\n    return match[1] || match[0];\n  };\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/html-tools/charref.js                                                                              //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/entities.json\n\n\n// Note that some entities don't have a final semicolon!  These are used to\n// make `&lt` (for example) with no semicolon a parse error but `&abcde` not.\n\nvar ENTITIES = {\n  \"&Aacute;\": { \"codepoints\": [193], \"characters\": \"\\u00C1\" },\n  \"&Aacute\": { \"codepoints\": [193], \"characters\": \"\\u00C1\" },\n  \"&aacute;\": { \"codepoints\": [225], \"characters\": \"\\u00E1\" },\n  \"&aacute\": { \"codepoints\": [225], \"characters\": \"\\u00E1\" },\n  \"&Abreve;\": { \"codepoints\": [258], \"characters\": \"\\u0102\" },\n  \"&abreve;\": { \"codepoints\": [259], \"characters\": \"\\u0103\" },\n  \"&ac;\": { \"codepoints\": [8766], \"characters\": \"\\u223E\" },\n  \"&acd;\": { \"codepoints\": [8767], \"characters\": \"\\u223F\" },\n  \"&acE;\": { \"codepoints\": [8766, 819], \"characters\": \"\\u223E\\u0333\" },\n  \"&Acirc;\": { \"codepoints\": [194], \"characters\": \"\\u00C2\" },\n  \"&Acirc\": { \"codepoints\": [194], \"characters\": \"\\u00C2\" },\n  \"&acirc;\": { \"codepoints\": [226], \"characters\": \"\\u00E2\" },\n  \"&acirc\": { \"codepoints\": [226], \"characters\": \"\\u00E2\" },\n  \"&acute;\": { \"codepoints\": [180], \"characters\": \"\\u00B4\" },\n  \"&acute\": { \"codepoints\": [180], \"characters\": \"\\u00B4\" },\n  \"&Acy;\": { \"codepoints\": [1040], \"characters\": \"\\u0410\" },\n  \"&acy;\": { \"codepoints\": [1072], \"characters\": \"\\u0430\" },\n  \"&AElig;\": { \"codepoints\": [198], \"characters\": \"\\u00C6\" },\n  \"&AElig\": { \"codepoints\": [198], \"characters\": \"\\u00C6\" },\n  \"&aelig;\": { \"codepoints\": [230], \"characters\": \"\\u00E6\" },\n  \"&aelig\": { \"codepoints\": [230], \"characters\": \"\\u00E6\" },\n  \"&af;\": { \"codepoints\": [8289], \"characters\": \"\\u2061\" },\n  \"&Afr;\": { \"codepoints\": [120068], \"characters\": \"\\uD835\\uDD04\" },\n  \"&afr;\": { \"codepoints\": [120094], \"characters\": \"\\uD835\\uDD1E\" },\n  \"&Agrave;\": { \"codepoints\": [192], \"characters\": \"\\u00C0\" },\n  \"&Agrave\": { \"codepoints\": [192], \"characters\": \"\\u00C0\" },\n  \"&agrave;\": { \"codepoints\": [224], \"characters\": \"\\u00E0\" },\n  \"&agrave\": { \"codepoints\": [224], \"characters\": \"\\u00E0\" },\n  \"&alefsym;\": { \"codepoints\": [8501], \"characters\": \"\\u2135\" },\n  \"&aleph;\": { \"codepoints\": [8501], \"characters\": \"\\u2135\" },\n  \"&Alpha;\": { \"codepoints\": [913], \"characters\": \"\\u0391\" },\n  \"&alpha;\": { \"codepoints\": [945], \"characters\": \"\\u03B1\" },\n  \"&Amacr;\": { \"codepoints\": [256], \"characters\": \"\\u0100\" },\n  \"&amacr;\": { \"codepoints\": [257], \"characters\": \"\\u0101\" },\n  \"&amalg;\": { \"codepoints\": [10815], \"characters\": \"\\u2A3F\" },\n  \"&amp;\": { \"codepoints\": [38], \"characters\": \"\\u0026\" },\n  \"&amp\": { \"codepoints\": [38], \"characters\": \"\\u0026\" },\n  \"&AMP;\": { \"codepoints\": [38], \"characters\": \"\\u0026\" },\n  \"&AMP\": { \"codepoints\": [38], \"characters\": \"\\u0026\" },\n  \"&andand;\": { \"codepoints\": [10837], \"characters\": \"\\u2A55\" },\n  \"&And;\": { \"codepoints\": [10835], \"characters\": \"\\u2A53\" },\n  \"&and;\": { \"codepoints\": [8743], \"characters\": \"\\u2227\" },\n  \"&andd;\": { \"codepoints\": [10844], \"characters\": \"\\u2A5C\" },\n  \"&andslope;\": { \"codepoints\": [10840], \"characters\": \"\\u2A58\" },\n  \"&andv;\": { \"codepoints\": [10842], \"characters\": \"\\u2A5A\" },\n  \"&ang;\": { \"codepoints\": [8736], \"characters\": \"\\u2220\" },\n  \"&ange;\": { \"codepoints\": [10660], \"characters\": \"\\u29A4\" },\n  \"&angle;\": { \"codepoints\": [8736], \"characters\": \"\\u2220\" },\n  \"&angmsdaa;\": { \"codepoints\": [10664], \"characters\": \"\\u29A8\" },\n  \"&angmsdab;\": { \"codepoints\": [10665], \"characters\": \"\\u29A9\" },\n  \"&angmsdac;\": { \"codepoints\": [10666], \"characters\": \"\\u29AA\" },\n  \"&angmsdad;\": { \"codepoints\": [10667], \"characters\": \"\\u29AB\" },\n  \"&angmsdae;\": { \"codepoints\": [10668], \"characters\": \"\\u29AC\" },\n  \"&angmsdaf;\": { \"codepoints\": [10669], \"characters\": \"\\u29AD\" },\n  \"&angmsdag;\": { \"codepoints\": [10670], \"characters\": \"\\u29AE\" },\n  \"&angmsdah;\": { \"codepoints\": [10671], \"characters\": \"\\u29AF\" },\n  \"&angmsd;\": { \"codepoints\": [8737], \"characters\": \"\\u2221\" },\n  \"&angrt;\": { \"codepoints\": [8735], \"characters\": \"\\u221F\" },\n  \"&angrtvb;\": { \"codepoints\": [8894], \"characters\": \"\\u22BE\" },\n  \"&angrtvbd;\": { \"codepoints\": [10653], \"characters\": \"\\u299D\" },\n  \"&angsph;\": { \"codepoints\": [8738], \"characters\": \"\\u2222\" },\n  \"&angst;\": { \"codepoints\": [197], \"characters\": \"\\u00C5\" },\n  \"&angzarr;\": { \"codepoints\": [9084], \"characters\": \"\\u237C\" },\n  \"&Aogon;\": { \"codepoints\": [260], \"characters\": \"\\u0104\" },\n  \"&aogon;\": { \"codepoints\": [261], \"characters\": \"\\u0105\" },\n  \"&Aopf;\": { \"codepoints\": [120120], \"characters\": \"\\uD835\\uDD38\" },\n  \"&aopf;\": { \"codepoints\": [120146], \"characters\": \"\\uD835\\uDD52\" },\n  \"&apacir;\": { \"codepoints\": [10863], \"characters\": \"\\u2A6F\" },\n  \"&ap;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\n  \"&apE;\": { \"codepoints\": [10864], \"characters\": \"\\u2A70\" },\n  \"&ape;\": { \"codepoints\": [8778], \"characters\": \"\\u224A\" },\n  \"&apid;\": { \"codepoints\": [8779], \"characters\": \"\\u224B\" },\n  \"&apos;\": { \"codepoints\": [39], \"characters\": \"\\u0027\" },\n  \"&ApplyFunction;\": { \"codepoints\": [8289], \"characters\": \"\\u2061\" },\n  \"&approx;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\n  \"&approxeq;\": { \"codepoints\": [8778], \"characters\": \"\\u224A\" },\n  \"&Aring;\": { \"codepoints\": [197], \"characters\": \"\\u00C5\" },\n  \"&Aring\": { \"codepoints\": [197], \"characters\": \"\\u00C5\" },\n  \"&aring;\": { \"codepoints\": [229], \"characters\": \"\\u00E5\" },\n  \"&aring\": { \"codepoints\": [229], \"characters\": \"\\u00E5\" },\n  \"&Ascr;\": { \"codepoints\": [119964], \"characters\": \"\\uD835\\uDC9C\" },\n  \"&ascr;\": { \"codepoints\": [119990], \"characters\": \"\\uD835\\uDCB6\" },\n  \"&Assign;\": { \"codepoints\": [8788], \"characters\": \"\\u2254\" },\n  \"&ast;\": { \"codepoints\": [42], \"characters\": \"\\u002A\" },\n  \"&asymp;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\n  \"&asympeq;\": { \"codepoints\": [8781], \"characters\": \"\\u224D\" },\n  \"&Atilde;\": { \"codepoints\": [195], \"characters\": \"\\u00C3\" },\n  \"&Atilde\": { \"codepoints\": [195], \"characters\": \"\\u00C3\" },\n  \"&atilde;\": { \"codepoints\": [227], \"characters\": \"\\u00E3\" },\n  \"&atilde\": { \"codepoints\": [227], \"characters\": \"\\u00E3\" },\n  \"&Auml;\": { \"codepoints\": [196], \"characters\": \"\\u00C4\" },\n  \"&Auml\": { \"codepoints\": [196], \"characters\": \"\\u00C4\" },\n  \"&auml;\": { \"codepoints\": [228], \"characters\": \"\\u00E4\" },\n  \"&auml\": { \"codepoints\": [228], \"characters\": \"\\u00E4\" },\n  \"&awconint;\": { \"codepoints\": [8755], \"characters\": \"\\u2233\" },\n  \"&awint;\": { \"codepoints\": [10769], \"characters\": \"\\u2A11\" },\n  \"&backcong;\": { \"codepoints\": [8780], \"characters\": \"\\u224C\" },\n  \"&backepsilon;\": { \"codepoints\": [1014], \"characters\": \"\\u03F6\" },\n  \"&backprime;\": { \"codepoints\": [8245], \"characters\": \"\\u2035\" },\n  \"&backsim;\": { \"codepoints\": [8765], \"characters\": \"\\u223D\" },\n  \"&backsimeq;\": { \"codepoints\": [8909], \"characters\": \"\\u22CD\" },\n  \"&Backslash;\": { \"codepoints\": [8726], \"characters\": \"\\u2216\" },\n  \"&Barv;\": { \"codepoints\": [10983], \"characters\": \"\\u2AE7\" },\n  \"&barvee;\": { \"codepoints\": [8893], \"characters\": \"\\u22BD\" },\n  \"&barwed;\": { \"codepoints\": [8965], \"characters\": \"\\u2305\" },\n  \"&Barwed;\": { \"codepoints\": [8966], \"characters\": \"\\u2306\" },\n  \"&barwedge;\": { \"codepoints\": [8965], \"characters\": \"\\u2305\" },\n  \"&bbrk;\": { \"codepoints\": [9141], \"characters\": \"\\u23B5\" },\n  \"&bbrktbrk;\": { \"codepoints\": [9142], \"characters\": \"\\u23B6\" },\n  \"&bcong;\": { \"codepoints\": [8780], \"characters\": \"\\u224C\" },\n  \"&Bcy;\": { \"codepoints\": [1041], \"characters\": \"\\u0411\" },\n  \"&bcy;\": { \"codepoints\": [1073], \"characters\": \"\\u0431\" },\n  \"&bdquo;\": { \"codepoints\": [8222], \"characters\": \"\\u201E\" },\n  \"&becaus;\": { \"codepoints\": [8757], \"characters\": \"\\u2235\" },\n  \"&because;\": { \"codepoints\": [8757], \"characters\": \"\\u2235\" },\n  \"&Because;\": { \"codepoints\": [8757], \"characters\": \"\\u2235\" },\n  \"&bemptyv;\": { \"codepoints\": [10672], \"characters\": \"\\u29B0\" },\n  \"&bepsi;\": { \"codepoints\": [1014], \"characters\": \"\\u03F6\" },\n  \"&bernou;\": { \"codepoints\": [8492], \"characters\": \"\\u212C\" },\n  \"&Bernoullis;\": { \"codepoints\": [8492], \"characters\": \"\\u212C\" },\n  \"&Beta;\": { \"codepoints\": [914], \"characters\": \"\\u0392\" },\n  \"&beta;\": { \"codepoints\": [946], \"characters\": \"\\u03B2\" },\n  \"&beth;\": { \"codepoints\": [8502], \"characters\": \"\\u2136\" },\n  \"&between;\": { \"codepoints\": [8812], \"characters\": \"\\u226C\" },\n  \"&Bfr;\": { \"codepoints\": [120069], \"characters\": \"\\uD835\\uDD05\" },\n  \"&bfr;\": { \"codepoints\": [120095], \"characters\": \"\\uD835\\uDD1F\" },\n  \"&bigcap;\": { \"codepoints\": [8898], \"characters\": \"\\u22C2\" },\n  \"&bigcirc;\": { \"codepoints\": [9711], \"characters\": \"\\u25EF\" },\n  \"&bigcup;\": { \"codepoints\": [8899], \"characters\": \"\\u22C3\" },\n  \"&bigodot;\": { \"codepoints\": [10752], \"characters\": \"\\u2A00\" },\n  \"&bigoplus;\": { \"codepoints\": [10753], \"characters\": \"\\u2A01\" },\n  \"&bigotimes;\": { \"codepoints\": [10754], \"characters\": \"\\u2A02\" },\n  \"&bigsqcup;\": { \"codepoints\": [10758], \"characters\": \"\\u2A06\" },\n  \"&bigstar;\": { \"codepoints\": [9733], \"characters\": \"\\u2605\" },\n  \"&bigtriangledown;\": { \"codepoints\": [9661], \"characters\": \"\\u25BD\" },\n  \"&bigtriangleup;\": { \"codepoints\": [9651], \"characters\": \"\\u25B3\" },\n  \"&biguplus;\": { \"codepoints\": [10756], \"characters\": \"\\u2A04\" },\n  \"&bigvee;\": { \"codepoints\": [8897], \"characters\": \"\\u22C1\" },\n  \"&bigwedge;\": { \"codepoints\": [8896], \"characters\": \"\\u22C0\" },\n  \"&bkarow;\": { \"codepoints\": [10509], \"characters\": \"\\u290D\" },\n  \"&blacklozenge;\": { \"codepoints\": [10731], \"characters\": \"\\u29EB\" },\n  \"&blacksquare;\": { \"codepoints\": [9642], \"characters\": \"\\u25AA\" },\n  \"&blacktriangle;\": { \"codepoints\": [9652], \"characters\": \"\\u25B4\" },\n  \"&blacktriangledown;\": { \"codepoints\": [9662], \"characters\": \"\\u25BE\" },\n  \"&blacktriangleleft;\": { \"codepoints\": [9666], \"characters\": \"\\u25C2\" },\n  \"&blacktriangleright;\": { \"codepoints\": [9656], \"characters\": \"\\u25B8\" },\n  \"&blank;\": { \"codepoints\": [9251], \"characters\": \"\\u2423\" },\n  \"&blk12;\": { \"codepoints\": [9618], \"characters\": \"\\u2592\" },\n  \"&blk14;\": { \"codepoints\": [9617], \"characters\": \"\\u2591\" },\n  \"&blk34;\": { \"codepoints\": [9619], \"characters\": \"\\u2593\" },\n  \"&block;\": { \"codepoints\": [9608], \"characters\": \"\\u2588\" },\n  \"&bne;\": { \"codepoints\": [61, 8421], \"characters\": \"\\u003D\\u20E5\" },\n  \"&bnequiv;\": { \"codepoints\": [8801, 8421], \"characters\": \"\\u2261\\u20E5\" },\n  \"&bNot;\": { \"codepoints\": [10989], \"characters\": \"\\u2AED\" },\n  \"&bnot;\": { \"codepoints\": [8976], \"characters\": \"\\u2310\" },\n  \"&Bopf;\": { \"codepoints\": [120121], \"characters\": \"\\uD835\\uDD39\" },\n  \"&bopf;\": { \"codepoints\": [120147], \"characters\": \"\\uD835\\uDD53\" },\n  \"&bot;\": { \"codepoints\": [8869], \"characters\": \"\\u22A5\" },\n  \"&bottom;\": { \"codepoints\": [8869], \"characters\": \"\\u22A5\" },\n  \"&bowtie;\": { \"codepoints\": [8904], \"characters\": \"\\u22C8\" },\n  \"&boxbox;\": { \"codepoints\": [10697], \"characters\": \"\\u29C9\" },\n  \"&boxdl;\": { \"codepoints\": [9488], \"characters\": \"\\u2510\" },\n  \"&boxdL;\": { \"codepoints\": [9557], \"characters\": \"\\u2555\" },\n  \"&boxDl;\": { \"codepoints\": [9558], \"characters\": \"\\u2556\" },\n  \"&boxDL;\": { \"codepoints\": [9559], \"characters\": \"\\u2557\" },\n  \"&boxdr;\": { \"codepoints\": [9484], \"characters\": \"\\u250C\" },\n  \"&boxdR;\": { \"codepoints\": [9554], \"characters\": \"\\u2552\" },\n  \"&boxDr;\": { \"codepoints\": [9555], \"characters\": \"\\u2553\" },\n  \"&boxDR;\": { \"codepoints\": [9556], \"characters\": \"\\u2554\" },\n  \"&boxh;\": { \"codepoints\": [9472], \"characters\": \"\\u2500\" },\n  \"&boxH;\": { \"codepoints\": [9552], \"characters\": \"\\u2550\" },\n  \"&boxhd;\": { \"codepoints\": [9516], \"characters\": \"\\u252C\" },\n  \"&boxHd;\": { \"codepoints\": [9572], \"characters\": \"\\u2564\" },\n  \"&boxhD;\": { \"codepoints\": [9573], \"characters\": \"\\u2565\" },\n  \"&boxHD;\": { \"codepoints\": [9574], \"characters\": \"\\u2566\" },\n  \"&boxhu;\": { \"codepoints\": [9524], \"characters\": \"\\u2534\" },\n  \"&boxHu;\": { \"codepoints\": [9575], \"characters\": \"\\u2567\" },\n  \"&boxhU;\": { \"codepoints\": [9576], \"characters\": \"\\u2568\" },\n  \"&boxHU;\": { \"codepoints\": [9577], \"characters\": \"\\u2569\" },\n  \"&boxminus;\": { \"codepoints\": [8863], \"characters\": \"\\u229F\" },\n  \"&boxplus;\": { \"codepoints\": [8862], \"characters\": \"\\u229E\" },\n  \"&boxtimes;\": { \"codepoints\": [8864], \"characters\": \"\\u22A0\" },\n  \"&boxul;\": { \"codepoints\": [9496], \"characters\": \"\\u2518\" },\n  \"&boxuL;\": { \"codepoints\": [9563], \"characters\": \"\\u255B\" },\n  \"&boxUl;\": { \"codepoints\": [9564], \"characters\": \"\\u255C\" },\n  \"&boxUL;\": { \"codepoints\": [9565], \"characters\": \"\\u255D\" },\n  \"&boxur;\": { \"codepoints\": [9492], \"characters\": \"\\u2514\" },\n  \"&boxuR;\": { \"codepoints\": [9560], \"characters\": \"\\u2558\" },\n  \"&boxUr;\": { \"codepoints\": [9561], \"characters\": \"\\u2559\" },\n  \"&boxUR;\": { \"codepoints\": [9562], \"characters\": \"\\u255A\" },\n  \"&boxv;\": { \"codepoints\": [9474], \"characters\": \"\\u2502\" },\n  \"&boxV;\": { \"codepoints\": [9553], \"characters\": \"\\u2551\" },\n  \"&boxvh;\": { \"codepoints\": [9532], \"characters\": \"\\u253C\" },\n  \"&boxvH;\": { \"codepoints\": [9578], \"characters\": \"\\u256A\" },\n  \"&boxVh;\": { \"codepoints\": [9579], \"characters\": \"\\u256B\" },\n  \"&boxVH;\": { \"codepoints\": [9580], \"characters\": \"\\u256C\" },\n  \"&boxvl;\": { \"codepoints\": [9508], \"characters\": \"\\u2524\" },\n  \"&boxvL;\": { \"codepoints\": [9569], \"characters\": \"\\u2561\" },\n  \"&boxVl;\": { \"codepoints\": [9570], \"characters\": \"\\u2562\" },\n  \"&boxVL;\": { \"codepoints\": [9571], \"characters\": \"\\u2563\" },\n  \"&boxvr;\": { \"codepoints\": [9500], \"characters\": \"\\u251C\" },\n  \"&boxvR;\": { \"codepoints\": [9566], \"characters\": \"\\u255E\" },\n  \"&boxVr;\": { \"codepoints\": [9567], \"characters\": \"\\u255F\" },\n  \"&boxVR;\": { \"codepoints\": [9568], \"characters\": \"\\u2560\" },\n  \"&bprime;\": { \"codepoints\": [8245], \"characters\": \"\\u2035\" },\n  \"&breve;\": { \"codepoints\": [728], \"characters\": \"\\u02D8\" },\n  \"&Breve;\": { \"codepoints\": [728], \"characters\": \"\\u02D8\" },\n  \"&brvbar;\": { \"codepoints\": [166], \"characters\": \"\\u00A6\" },\n  \"&brvbar\": { \"codepoints\": [166], \"characters\": \"\\u00A6\" },\n  \"&bscr;\": { \"codepoints\": [119991], \"characters\": \"\\uD835\\uDCB7\" },\n  \"&Bscr;\": { \"codepoints\": [8492], \"characters\": \"\\u212C\" },\n  \"&bsemi;\": { \"codepoints\": [8271], \"characters\": \"\\u204F\" },\n  \"&bsim;\": { \"codepoints\": [8765], \"characters\": \"\\u223D\" },\n  \"&bsime;\": { \"codepoints\": [8909], \"characters\": \"\\u22CD\" },\n  \"&bsolb;\": { \"codepoints\": [10693], \"characters\": \"\\u29C5\" },\n  \"&bsol;\": { \"codepoints\": [92], \"characters\": \"\\u005C\" },\n  \"&bsolhsub;\": { \"codepoints\": [10184], \"characters\": \"\\u27C8\" },\n  \"&bull;\": { \"codepoints\": [8226], \"characters\": \"\\u2022\" },\n  \"&bullet;\": { \"codepoints\": [8226], \"characters\": \"\\u2022\" },\n  \"&bump;\": { \"codepoints\": [8782], \"characters\": \"\\u224E\" },\n  \"&bumpE;\": { \"codepoints\": [10926], \"characters\": \"\\u2AAE\" },\n  \"&bumpe;\": { \"codepoints\": [8783], \"characters\": \"\\u224F\" },\n  \"&Bumpeq;\": { \"codepoints\": [8782], \"characters\": \"\\u224E\" },\n  \"&bumpeq;\": { \"codepoints\": [8783], \"characters\": \"\\u224F\" },\n  \"&Cacute;\": { \"codepoints\": [262], \"characters\": \"\\u0106\" },\n  \"&cacute;\": { \"codepoints\": [263], \"characters\": \"\\u0107\" },\n  \"&capand;\": { \"codepoints\": [10820], \"characters\": \"\\u2A44\" },\n  \"&capbrcup;\": { \"codepoints\": [10825], \"characters\": \"\\u2A49\" },\n  \"&capcap;\": { \"codepoints\": [10827], \"characters\": \"\\u2A4B\" },\n  \"&cap;\": { \"codepoints\": [8745], \"characters\": \"\\u2229\" },\n  \"&Cap;\": { \"codepoints\": [8914], \"characters\": \"\\u22D2\" },\n  \"&capcup;\": { \"codepoints\": [10823], \"characters\": \"\\u2A47\" },\n  \"&capdot;\": { \"codepoints\": [10816], \"characters\": \"\\u2A40\" },\n  \"&CapitalDifferentialD;\": { \"codepoints\": [8517], \"characters\": \"\\u2145\" },\n  \"&caps;\": { \"codepoints\": [8745, 65024], \"characters\": \"\\u2229\\uFE00\" },\n  \"&caret;\": { \"codepoints\": [8257], \"characters\": \"\\u2041\" },\n  \"&caron;\": { \"codepoints\": [711], \"characters\": \"\\u02C7\" },\n  \"&Cayleys;\": { \"codepoints\": [8493], \"characters\": \"\\u212D\" },\n  \"&ccaps;\": { \"codepoints\": [10829], \"characters\": \"\\u2A4D\" },\n  \"&Ccaron;\": { \"codepoints\": [268], \"characters\": \"\\u010C\" },\n  \"&ccaron;\": { \"codepoints\": [269], \"characters\": \"\\u010D\" },\n  \"&Ccedil;\": { \"codepoints\": [199], \"characters\": \"\\u00C7\" },\n  \"&Ccedil\": { \"codepoints\": [199], \"characters\": \"\\u00C7\" },\n  \"&ccedil;\": { \"codepoints\": [231], \"characters\": \"\\u00E7\" },\n  \"&ccedil\": { \"codepoints\": [231], \"characters\": \"\\u00E7\" },\n  \"&Ccirc;\": { \"codepoints\": [264], \"characters\": \"\\u0108\" },\n  \"&ccirc;\": { \"codepoints\": [265], \"characters\": \"\\u0109\" },\n  \"&Cconint;\": { \"codepoints\": [8752], \"characters\": \"\\u2230\" },\n  \"&ccups;\": { \"codepoints\": [10828], \"characters\": \"\\u2A4C\" },\n  \"&ccupssm;\": { \"codepoints\": [10832], \"characters\": \"\\u2A50\" },\n  \"&Cdot;\": { \"codepoints\": [266], \"characters\": \"\\u010A\" },\n  \"&cdot;\": { \"codepoints\": [267], \"characters\": \"\\u010B\" },\n  \"&cedil;\": { \"codepoints\": [184], \"characters\": \"\\u00B8\" },\n  \"&cedil\": { \"codepoints\": [184], \"characters\": \"\\u00B8\" },\n  \"&Cedilla;\": { \"codepoints\": [184], \"characters\": \"\\u00B8\" },\n  \"&cemptyv;\": { \"codepoints\": [10674], \"characters\": \"\\u29B2\" },\n  \"&cent;\": { \"codepoints\": [162], \"characters\": \"\\u00A2\" },\n  \"&cent\": { \"codepoints\": [162], \"characters\": \"\\u00A2\" },\n  \"&centerdot;\": { \"codepoints\": [183], \"characters\": \"\\u00B7\" },\n  \"&CenterDot;\": { \"codepoints\": [183], \"characters\": \"\\u00B7\" },\n  \"&cfr;\": { \"codepoints\": [120096], \"characters\": \"\\uD835\\uDD20\" },\n  \"&Cfr;\": { \"codepoints\": [8493], \"characters\": \"\\u212D\" },\n  \"&CHcy;\": { \"codepoints\": [1063], \"characters\": \"\\u0427\" },\n  \"&chcy;\": { \"codepoints\": [1095], \"characters\": \"\\u0447\" },\n  \"&check;\": { \"codepoints\": [10003], \"characters\": \"\\u2713\" },\n  \"&checkmark;\": { \"codepoints\": [10003], \"characters\": \"\\u2713\" },\n  \"&Chi;\": { \"codepoints\": [935], \"characters\": \"\\u03A7\" },\n  \"&chi;\": { \"codepoints\": [967], \"characters\": \"\\u03C7\" },\n  \"&circ;\": { \"codepoints\": [710], \"characters\": \"\\u02C6\" },\n  \"&circeq;\": { \"codepoints\": [8791], \"characters\": \"\\u2257\" },\n  \"&circlearrowleft;\": { \"codepoints\": [8634], \"characters\": \"\\u21BA\" },\n  \"&circlearrowright;\": { \"codepoints\": [8635], \"characters\": \"\\u21BB\" },\n  \"&circledast;\": { \"codepoints\": [8859], \"characters\": \"\\u229B\" },\n  \"&circledcirc;\": { \"codepoints\": [8858], \"characters\": \"\\u229A\" },\n  \"&circleddash;\": { \"codepoints\": [8861], \"characters\": \"\\u229D\" },\n  \"&CircleDot;\": { \"codepoints\": [8857], \"characters\": \"\\u2299\" },\n  \"&circledR;\": { \"codepoints\": [174], \"characters\": \"\\u00AE\" },\n  \"&circledS;\": { \"codepoints\": [9416], \"characters\": \"\\u24C8\" },\n  \"&CircleMinus;\": { \"codepoints\": [8854], \"characters\": \"\\u2296\" },\n  \"&CirclePlus;\": { \"codepoints\": [8853], \"characters\": \"\\u2295\" },\n  \"&CircleTimes;\": { \"codepoints\": [8855], \"characters\": \"\\u2297\" },\n  \"&cir;\": { \"codepoints\": [9675], \"characters\": \"\\u25CB\" },\n  \"&cirE;\": { \"codepoints\": [10691], \"characters\": \"\\u29C3\" },\n  \"&cire;\": { \"codepoints\": [8791], \"characters\": \"\\u2257\" },\n  \"&cirfnint;\": { \"codepoints\": [10768], \"characters\": \"\\u2A10\" },\n  \"&cirmid;\": { \"codepoints\": [10991], \"characters\": \"\\u2AEF\" },\n  \"&cirscir;\": { \"codepoints\": [10690], \"characters\": \"\\u29C2\" },\n  \"&ClockwiseContourIntegral;\": { \"codepoints\": [8754], \"characters\": \"\\u2232\" },\n  \"&CloseCurlyDoubleQuote;\": { \"codepoints\": [8221], \"characters\": \"\\u201D\" },\n  \"&CloseCurlyQuote;\": { \"codepoints\": [8217], \"characters\": \"\\u2019\" },\n  \"&clubs;\": { \"codepoints\": [9827], \"characters\": \"\\u2663\" },\n  \"&clubsuit;\": { \"codepoints\": [9827], \"characters\": \"\\u2663\" },\n  \"&colon;\": { \"codepoints\": [58], \"characters\": \"\\u003A\" },\n  \"&Colon;\": { \"codepoints\": [8759], \"characters\": \"\\u2237\" },\n  \"&Colone;\": { \"codepoints\": [10868], \"characters\": \"\\u2A74\" },\n  \"&colone;\": { \"codepoints\": [8788], \"characters\": \"\\u2254\" },\n  \"&coloneq;\": { \"codepoints\": [8788], \"characters\": \"\\u2254\" },\n  \"&comma;\": { \"codepoints\": [44], \"characters\": \"\\u002C\" },\n  \"&commat;\": { \"codepoints\": [64], \"characters\": \"\\u0040\" },\n  \"&comp;\": { \"codepoints\": [8705], \"characters\": \"\\u2201\" },\n  \"&compfn;\": { \"codepoints\": [8728], \"characters\": \"\\u2218\" },\n  \"&complement;\": { \"codepoints\": [8705], \"characters\": \"\\u2201\" },\n  \"&complexes;\": { \"codepoints\": [8450], \"characters\": \"\\u2102\" },\n  \"&cong;\": { \"codepoints\": [8773], \"characters\": \"\\u2245\" },\n  \"&congdot;\": { \"codepoints\": [10861], \"characters\": \"\\u2A6D\" },\n  \"&Congruent;\": { \"codepoints\": [8801], \"characters\": \"\\u2261\" },\n  \"&conint;\": { \"codepoints\": [8750], \"characters\": \"\\u222E\" },\n  \"&Conint;\": { \"codepoints\": [8751], \"characters\": \"\\u222F\" },\n  \"&ContourIntegral;\": { \"codepoints\": [8750], \"characters\": \"\\u222E\" },\n  \"&copf;\": { \"codepoints\": [120148], \"characters\": \"\\uD835\\uDD54\" },\n  \"&Copf;\": { \"codepoints\": [8450], \"characters\": \"\\u2102\" },\n  \"&coprod;\": { \"codepoints\": [8720], \"characters\": \"\\u2210\" },\n  \"&Coproduct;\": { \"codepoints\": [8720], \"characters\": \"\\u2210\" },\n  \"&copy;\": { \"codepoints\": [169], \"characters\": \"\\u00A9\" },\n  \"&copy\": { \"codepoints\": [169], \"characters\": \"\\u00A9\" },\n  \"&COPY;\": { \"codepoints\": [169], \"characters\": \"\\u00A9\" },\n  \"&COPY\": { \"codepoints\": [169], \"characters\": \"\\u00A9\" },\n  \"&copysr;\": { \"codepoints\": [8471], \"characters\": \"\\u2117\" },\n  \"&CounterClockwiseContourIntegral;\": { \"codepoints\": [8755], \"characters\": \"\\u2233\" },\n  \"&crarr;\": { \"codepoints\": [8629], \"characters\": \"\\u21B5\" },\n  \"&cross;\": { \"codepoints\": [10007], \"characters\": \"\\u2717\" },\n  \"&Cross;\": { \"codepoints\": [10799], \"characters\": \"\\u2A2F\" },\n  \"&Cscr;\": { \"codepoints\": [119966], \"characters\": \"\\uD835\\uDC9E\" },\n  \"&cscr;\": { \"codepoints\": [119992], \"characters\": \"\\uD835\\uDCB8\" },\n  \"&csub;\": { \"codepoints\": [10959], \"characters\": \"\\u2ACF\" },\n  \"&csube;\": { \"codepoints\": [10961], \"characters\": \"\\u2AD1\" },\n  \"&csup;\": { \"codepoints\": [10960], \"characters\": \"\\u2AD0\" },\n  \"&csupe;\": { \"codepoints\": [10962], \"characters\": \"\\u2AD2\" },\n  \"&ctdot;\": { \"codepoints\": [8943], \"characters\": \"\\u22EF\" },\n  \"&cudarrl;\": { \"codepoints\": [10552], \"characters\": \"\\u2938\" },\n  \"&cudarrr;\": { \"codepoints\": [10549], \"characters\": \"\\u2935\" },\n  \"&cuepr;\": { \"codepoints\": [8926], \"characters\": \"\\u22DE\" },\n  \"&cuesc;\": { \"codepoints\": [8927], \"characters\": \"\\u22DF\" },\n  \"&cularr;\": { \"codepoints\": [8630], \"characters\": \"\\u21B6\" },\n  \"&cularrp;\": { \"codepoints\": [10557], \"characters\": \"\\u293D\" },\n  \"&cupbrcap;\": { \"codepoints\": [10824], \"characters\": \"\\u2A48\" },\n  \"&cupcap;\": { \"codepoints\": [10822], \"characters\": \"\\u2A46\" },\n  \"&CupCap;\": { \"codepoints\": [8781], \"characters\": \"\\u224D\" },\n  \"&cup;\": { \"codepoints\": [8746], \"characters\": \"\\u222A\" },\n  \"&Cup;\": { \"codepoints\": [8915], \"characters\": \"\\u22D3\" },\n  \"&cupcup;\": { \"codepoints\": [10826], \"characters\": \"\\u2A4A\" },\n  \"&cupdot;\": { \"codepoints\": [8845], \"characters\": \"\\u228D\" },\n  \"&cupor;\": { \"codepoints\": [10821], \"characters\": \"\\u2A45\" },\n  \"&cups;\": { \"codepoints\": [8746, 65024], \"characters\": \"\\u222A\\uFE00\" },\n  \"&curarr;\": { \"codepoints\": [8631], \"characters\": \"\\u21B7\" },\n  \"&curarrm;\": { \"codepoints\": [10556], \"characters\": \"\\u293C\" },\n  \"&curlyeqprec;\": { \"codepoints\": [8926], \"characters\": \"\\u22DE\" },\n  \"&curlyeqsucc;\": { \"codepoints\": [8927], \"characters\": \"\\u22DF\" },\n  \"&curlyvee;\": { \"codepoints\": [8910], \"characters\": \"\\u22CE\" },\n  \"&curlywedge;\": { \"codepoints\": [8911], \"characters\": \"\\u22CF\" },\n  \"&curren;\": { \"codepoints\": [164], \"characters\": \"\\u00A4\" },\n  \"&curren\": { \"codepoints\": [164], \"characters\": \"\\u00A4\" },\n  \"&curvearrowleft;\": { \"codepoints\": [8630], \"characters\": \"\\u21B6\" },\n  \"&curvearrowright;\": { \"codepoints\": [8631], \"characters\": \"\\u21B7\" },\n  \"&cuvee;\": { \"codepoints\": [8910], \"characters\": \"\\u22CE\" },\n  \"&cuwed;\": { \"codepoints\": [8911], \"characters\": \"\\u22CF\" },\n  \"&cwconint;\": { \"codepoints\": [8754], \"characters\": \"\\u2232\" },\n  \"&cwint;\": { \"codepoints\": [8753], \"characters\": \"\\u2231\" },\n  \"&cylcty;\": { \"codepoints\": [9005], \"characters\": \"\\u232D\" },\n  \"&dagger;\": { \"codepoints\": [8224], \"characters\": \"\\u2020\" },\n  \"&Dagger;\": { \"codepoints\": [8225], \"characters\": \"\\u2021\" },\n  \"&daleth;\": { \"codepoints\": [8504], \"characters\": \"\\u2138\" },\n  \"&darr;\": { \"codepoints\": [8595], \"characters\": \"\\u2193\" },\n  \"&Darr;\": { \"codepoints\": [8609], \"characters\": \"\\u21A1\" },\n  \"&dArr;\": { \"codepoints\": [8659], \"characters\": \"\\u21D3\" },\n  \"&dash;\": { \"codepoints\": [8208], \"characters\": \"\\u2010\" },\n  \"&Dashv;\": { \"codepoints\": [10980], \"characters\": \"\\u2AE4\" },\n  \"&dashv;\": { \"codepoints\": [8867], \"characters\": \"\\u22A3\" },\n  \"&dbkarow;\": { \"codepoints\": [10511], \"characters\": \"\\u290F\" },\n  \"&dblac;\": { \"codepoints\": [733], \"characters\": \"\\u02DD\" },\n  \"&Dcaron;\": { \"codepoints\": [270], \"characters\": \"\\u010E\" },\n  \"&dcaron;\": { \"codepoints\": [271], \"characters\": \"\\u010F\" },\n  \"&Dcy;\": { \"codepoints\": [1044], \"characters\": \"\\u0414\" },\n  \"&dcy;\": { \"codepoints\": [1076], \"characters\": \"\\u0434\" },\n  \"&ddagger;\": { \"codepoints\": [8225], \"characters\": \"\\u2021\" },\n  \"&ddarr;\": { \"codepoints\": [8650], \"characters\": \"\\u21CA\" },\n  \"&DD;\": { \"codepoints\": [8517], \"characters\": \"\\u2145\" },\n  \"&dd;\": { \"codepoints\": [8518], \"characters\": \"\\u2146\" },\n  \"&DDotrahd;\": { \"codepoints\": [10513], \"characters\": \"\\u2911\" },\n  \"&ddotseq;\": { \"codepoints\": [10871], \"characters\": \"\\u2A77\" },\n  \"&deg;\": { \"codepoints\": [176], \"characters\": \"\\u00B0\" },\n  \"&deg\": { \"codepoints\": [176], \"characters\": \"\\u00B0\" },\n  \"&Del;\": { \"codepoints\": [8711], \"characters\": \"\\u2207\" },\n  \"&Delta;\": { \"codepoints\": [916], \"characters\": \"\\u0394\" },\n  \"&delta;\": { \"codepoints\": [948], \"characters\": \"\\u03B4\" },\n  \"&demptyv;\": { \"codepoints\": [10673], \"characters\": \"\\u29B1\" },\n  \"&dfisht;\": { \"codepoints\": [10623], \"characters\": \"\\u297F\" },\n  \"&Dfr;\": { \"codepoints\": [120071], \"characters\": \"\\uD835\\uDD07\" },\n  \"&dfr;\": { \"codepoints\": [120097], \"characters\": \"\\uD835\\uDD21\" },\n  \"&dHar;\": { \"codepoints\": [10597], \"characters\": \"\\u2965\" },\n  \"&dharl;\": { \"codepoints\": [8643], \"characters\": \"\\u21C3\" },\n  \"&dharr;\": { \"codepoints\": [8642], \"characters\": \"\\u21C2\" },\n  \"&DiacriticalAcute;\": { \"codepoints\": [180], \"characters\": \"\\u00B4\" },\n  \"&DiacriticalDot;\": { \"codepoints\": [729], \"characters\": \"\\u02D9\" },\n  \"&DiacriticalDoubleAcute;\": { \"codepoints\": [733], \"characters\": \"\\u02DD\" },\n  \"&DiacriticalGrave;\": { \"codepoints\": [96], \"characters\": \"\\u0060\" },\n  \"&DiacriticalTilde;\": { \"codepoints\": [732], \"characters\": \"\\u02DC\" },\n  \"&diam;\": { \"codepoints\": [8900], \"characters\": \"\\u22C4\" },\n  \"&diamond;\": { \"codepoints\": [8900], \"characters\": \"\\u22C4\" },\n  \"&Diamond;\": { \"codepoints\": [8900], \"characters\": \"\\u22C4\" },\n  \"&diamondsuit;\": { \"codepoints\": [9830], \"characters\": \"\\u2666\" },\n  \"&diams;\": { \"codepoints\": [9830], \"characters\": \"\\u2666\" },\n  \"&die;\": { \"codepoints\": [168], \"characters\": \"\\u00A8\" },\n  \"&DifferentialD;\": { \"codepoints\": [8518], \"characters\": \"\\u2146\" },\n  \"&digamma;\": { \"codepoints\": [989], \"characters\": \"\\u03DD\" },\n  \"&disin;\": { \"codepoints\": [8946], \"characters\": \"\\u22F2\" },\n  \"&div;\": { \"codepoints\": [247], \"characters\": \"\\u00F7\" },\n  \"&divide;\": { \"codepoints\": [247], \"characters\": \"\\u00F7\" },\n  \"&divide\": { \"codepoints\": [247], \"characters\": \"\\u00F7\" },\n  \"&divideontimes;\": { \"codepoints\": [8903], \"characters\": \"\\u22C7\" },\n  \"&divonx;\": { \"codepoints\": [8903], \"characters\": \"\\u22C7\" },\n  \"&DJcy;\": { \"codepoints\": [1026], \"characters\": \"\\u0402\" },\n  \"&djcy;\": { \"codepoints\": [1106], \"characters\": \"\\u0452\" },\n  \"&dlcorn;\": { \"codepoints\": [8990], \"characters\": \"\\u231E\" },\n  \"&dlcrop;\": { \"codepoints\": [8973], \"characters\": \"\\u230D\" },\n  \"&dollar;\": { \"codepoints\": [36], \"characters\": \"\\u0024\" },\n  \"&Dopf;\": { \"codepoints\": [120123], \"characters\": \"\\uD835\\uDD3B\" },\n  \"&dopf;\": { \"codepoints\": [120149], \"characters\": \"\\uD835\\uDD55\" },\n  \"&Dot;\": { \"codepoints\": [168], \"characters\": \"\\u00A8\" },\n  \"&dot;\": { \"codepoints\": [729], \"characters\": \"\\u02D9\" },\n  \"&DotDot;\": { \"codepoints\": [8412], \"characters\": \"\\u20DC\" },\n  \"&doteq;\": { \"codepoints\": [8784], \"characters\": \"\\u2250\" },\n  \"&doteqdot;\": { \"codepoints\": [8785], \"characters\": \"\\u2251\" },\n  \"&DotEqual;\": { \"codepoints\": [8784], \"characters\": \"\\u2250\" },\n  \"&dotminus;\": { \"codepoints\": [8760], \"characters\": \"\\u2238\" },\n  \"&dotplus;\": { \"codepoints\": [8724], \"characters\": \"\\u2214\" },\n  \"&dotsquare;\": { \"codepoints\": [8865], \"characters\": \"\\u22A1\" },\n  \"&doublebarwedge;\": { \"codepoints\": [8966], \"characters\": \"\\u2306\" },\n  \"&DoubleContourIntegral;\": { \"codepoints\": [8751], \"characters\": \"\\u222F\" },\n  \"&DoubleDot;\": { \"codepoints\": [168], \"characters\": \"\\u00A8\" },\n  \"&DoubleDownArrow;\": { \"codepoints\": [8659], \"characters\": \"\\u21D3\" },\n  \"&DoubleLeftArrow;\": { \"codepoints\": [8656], \"characters\": \"\\u21D0\" },\n  \"&DoubleLeftRightArrow;\": { \"codepoints\": [8660], \"characters\": \"\\u21D4\" },\n  \"&DoubleLeftTee;\": { \"codepoints\": [10980], \"characters\": \"\\u2AE4\" },\n  \"&DoubleLongLeftArrow;\": { \"codepoints\": [10232], \"characters\": \"\\u27F8\" },\n  \"&DoubleLongLeftRightArrow;\": { \"codepoints\": [10234], \"characters\": \"\\u27FA\" },\n  \"&DoubleLongRightArrow;\": { \"codepoints\": [10233], \"characters\": \"\\u27F9\" },\n  \"&DoubleRightArrow;\": { \"codepoints\": [8658], \"characters\": \"\\u21D2\" },\n  \"&DoubleRightTee;\": { \"codepoints\": [8872], \"characters\": \"\\u22A8\" },\n  \"&DoubleUpArrow;\": { \"codepoints\": [8657], \"characters\": \"\\u21D1\" },\n  \"&DoubleUpDownArrow;\": { \"codepoints\": [8661], \"characters\": \"\\u21D5\" },\n  \"&DoubleVerticalBar;\": { \"codepoints\": [8741], \"characters\": \"\\u2225\" },\n  \"&DownArrowBar;\": { \"codepoints\": [10515], \"characters\": \"\\u2913\" },\n  \"&downarrow;\": { \"codepoints\": [8595], \"characters\": \"\\u2193\" },\n  \"&DownArrow;\": { \"codepoints\": [8595], \"characters\": \"\\u2193\" },\n  \"&Downarrow;\": { \"codepoints\": [8659], \"characters\": \"\\u21D3\" },\n  \"&DownArrowUpArrow;\": { \"codepoints\": [8693], \"characters\": \"\\u21F5\" },\n  \"&DownBreve;\": { \"codepoints\": [785], \"characters\": \"\\u0311\" },\n  \"&downdownarrows;\": { \"codepoints\": [8650], \"characters\": \"\\u21CA\" },\n  \"&downharpoonleft;\": { \"codepoints\": [8643], \"characters\": \"\\u21C3\" },\n  \"&downharpoonright;\": { \"codepoints\": [8642], \"characters\": \"\\u21C2\" },\n  \"&DownLeftRightVector;\": { \"codepoints\": [10576], \"characters\": \"\\u2950\" },\n  \"&DownLeftTeeVector;\": { \"codepoints\": [10590], \"characters\": \"\\u295E\" },\n  \"&DownLeftVectorBar;\": { \"codepoints\": [10582], \"characters\": \"\\u2956\" },\n  \"&DownLeftVector;\": { \"codepoints\": [8637], \"characters\": \"\\u21BD\" },\n  \"&DownRightTeeVector;\": { \"codepoints\": [10591], \"characters\": \"\\u295F\" },\n  \"&DownRightVectorBar;\": { \"codepoints\": [10583], \"characters\": \"\\u2957\" },\n  \"&DownRightVector;\": { \"codepoints\": [8641], \"characters\": \"\\u21C1\" },\n  \"&DownTeeArrow;\": { \"codepoints\": [8615], \"characters\": \"\\u21A7\" },\n  \"&DownTee;\": { \"codepoints\": [8868], \"characters\": \"\\u22A4\" },\n  \"&drbkarow;\": { \"codepoints\": [10512], \"characters\": \"\\u2910\" },\n  \"&drcorn;\": { \"codepoints\": [8991], \"characters\": \"\\u231F\" },\n  \"&drcrop;\": { \"codepoints\": [8972], \"characters\": \"\\u230C\" },\n  \"&Dscr;\": { \"codepoints\": [119967], \"characters\": \"\\uD835\\uDC9F\" },\n  \"&dscr;\": { \"codepoints\": [119993], \"characters\": \"\\uD835\\uDCB9\" },\n  \"&DScy;\": { \"codepoints\": [1029], \"characters\": \"\\u0405\" },\n  \"&dscy;\": { \"codepoints\": [1109], \"characters\": \"\\u0455\" },\n  \"&dsol;\": { \"codepoints\": [10742], \"characters\": \"\\u29F6\" },\n  \"&Dstrok;\": { \"codepoints\": [272], \"characters\": \"\\u0110\" },\n  \"&dstrok;\": { \"codepoints\": [273], \"characters\": \"\\u0111\" },\n  \"&dtdot;\": { \"codepoints\": [8945], \"characters\": \"\\u22F1\" },\n  \"&dtri;\": { \"codepoints\": [9663], \"characters\": \"\\u25BF\" },\n  \"&dtrif;\": { \"codepoints\": [9662], \"characters\": \"\\u25BE\" },\n  \"&duarr;\": { \"codepoints\": [8693], \"characters\": \"\\u21F5\" },\n  \"&duhar;\": { \"codepoints\": [10607], \"characters\": \"\\u296F\" },\n  \"&dwangle;\": { \"codepoints\": [10662], \"characters\": \"\\u29A6\" },\n  \"&DZcy;\": { \"codepoints\": [1039], \"characters\": \"\\u040F\" },\n  \"&dzcy;\": { \"codepoints\": [1119], \"characters\": \"\\u045F\" },\n  \"&dzigrarr;\": { \"codepoints\": [10239], \"characters\": \"\\u27FF\" },\n  \"&Eacute;\": { \"codepoints\": [201], \"characters\": \"\\u00C9\" },\n  \"&Eacute\": { \"codepoints\": [201], \"characters\": \"\\u00C9\" },\n  \"&eacute;\": { \"codepoints\": [233], \"characters\": \"\\u00E9\" },\n  \"&eacute\": { \"codepoints\": [233], \"characters\": \"\\u00E9\" },\n  \"&easter;\": { \"codepoints\": [10862], \"characters\": \"\\u2A6E\" },\n  \"&Ecaron;\": { \"codepoints\": [282], \"characters\": \"\\u011A\" },\n  \"&ecaron;\": { \"codepoints\": [283], \"characters\": \"\\u011B\" },\n  \"&Ecirc;\": { \"codepoints\": [202], \"characters\": \"\\u00CA\" },\n  \"&Ecirc\": { \"codepoints\": [202], \"characters\": \"\\u00CA\" },\n  \"&ecirc;\": { \"codepoints\": [234], \"characters\": \"\\u00EA\" },\n  \"&ecirc\": { \"codepoints\": [234], \"characters\": \"\\u00EA\" },\n  \"&ecir;\": { \"codepoints\": [8790], \"characters\": \"\\u2256\" },\n  \"&ecolon;\": { \"codepoints\": [8789], \"characters\": \"\\u2255\" },\n  \"&Ecy;\": { \"codepoints\": [1069], \"characters\": \"\\u042D\" },\n  \"&ecy;\": { \"codepoints\": [1101], \"characters\": \"\\u044D\" },\n  \"&eDDot;\": { \"codepoints\": [10871], \"characters\": \"\\u2A77\" },\n  \"&Edot;\": { \"codepoints\": [278], \"characters\": \"\\u0116\" },\n  \"&edot;\": { \"codepoints\": [279], \"characters\": \"\\u0117\" },\n  \"&eDot;\": { \"codepoints\": [8785], \"characters\": \"\\u2251\" },\n  \"&ee;\": { \"codepoints\": [8519], \"characters\": \"\\u2147\" },\n  \"&efDot;\": { \"codepoints\": [8786], \"characters\": \"\\u2252\" },\n  \"&Efr;\": { \"codepoints\": [120072], \"characters\": \"\\uD835\\uDD08\" },\n  \"&efr;\": { \"codepoints\": [120098], \"characters\": \"\\uD835\\uDD22\" },\n  \"&eg;\": { \"codepoints\": [10906], \"characters\": \"\\u2A9A\" },\n  \"&Egrave;\": { \"codepoints\": [200], \"characters\": \"\\u00C8\" },\n  \"&Egrave\": { \"codepoints\": [200], \"characters\": \"\\u00C8\" },\n  \"&egrave;\": { \"codepoints\": [232], \"characters\": \"\\u00E8\" },\n  \"&egrave\": { \"codepoints\": [232], \"characters\": \"\\u00E8\" },\n  \"&egs;\": { \"codepoints\": [10902], \"characters\": \"\\u2A96\" },\n  \"&egsdot;\": { \"codepoints\": [10904], \"characters\": \"\\u2A98\" },\n  \"&el;\": { \"codepoints\": [10905], \"characters\": \"\\u2A99\" },\n  \"&Element;\": { \"codepoints\": [8712], \"characters\": \"\\u2208\" },\n  \"&elinters;\": { \"codepoints\": [9191], \"characters\": \"\\u23E7\" },\n  \"&ell;\": { \"codepoints\": [8467], \"characters\": \"\\u2113\" },\n  \"&els;\": { \"codepoints\": [10901], \"characters\": \"\\u2A95\" },\n  \"&elsdot;\": { \"codepoints\": [10903], \"characters\": \"\\u2A97\" },\n  \"&Emacr;\": { \"codepoints\": [274], \"characters\": \"\\u0112\" },\n  \"&emacr;\": { \"codepoints\": [275], \"characters\": \"\\u0113\" },\n  \"&empty;\": { \"codepoints\": [8709], \"characters\": \"\\u2205\" },\n  \"&emptyset;\": { \"codepoints\": [8709], \"characters\": \"\\u2205\" },\n  \"&EmptySmallSquare;\": { \"codepoints\": [9723], \"characters\": \"\\u25FB\" },\n  \"&emptyv;\": { \"codepoints\": [8709], \"characters\": \"\\u2205\" },\n  \"&EmptyVerySmallSquare;\": { \"codepoints\": [9643], \"characters\": \"\\u25AB\" },\n  \"&emsp13;\": { \"codepoints\": [8196], \"characters\": \"\\u2004\" },\n  \"&emsp14;\": { \"codepoints\": [8197], \"characters\": \"\\u2005\" },\n  \"&emsp;\": { \"codepoints\": [8195], \"characters\": \"\\u2003\" },\n  \"&ENG;\": { \"codepoints\": [330], \"characters\": \"\\u014A\" },\n  \"&eng;\": { \"codepoints\": [331], \"characters\": \"\\u014B\" },\n  \"&ensp;\": { \"codepoints\": [8194], \"characters\": \"\\u2002\" },\n  \"&Eogon;\": { \"codepoints\": [280], \"characters\": \"\\u0118\" },\n  \"&eogon;\": { \"codepoints\": [281], \"characters\": \"\\u0119\" },\n  \"&Eopf;\": { \"codepoints\": [120124], \"characters\": \"\\uD835\\uDD3C\" },\n  \"&eopf;\": { \"codepoints\": [120150], \"characters\": \"\\uD835\\uDD56\" },\n  \"&epar;\": { \"codepoints\": [8917], \"characters\": \"\\u22D5\" },\n  \"&eparsl;\": { \"codepoints\": [10723], \"characters\": \"\\u29E3\" },\n  \"&eplus;\": { \"codepoints\": [10865], \"characters\": \"\\u2A71\" },\n  \"&epsi;\": { \"codepoints\": [949], \"characters\": \"\\u03B5\" },\n  \"&Epsilon;\": { \"codepoints\": [917], \"characters\": \"\\u0395\" },\n  \"&epsilon;\": { \"codepoints\": [949], \"characters\": \"\\u03B5\" },\n  \"&epsiv;\": { \"codepoints\": [1013], \"characters\": \"\\u03F5\" },\n  \"&eqcirc;\": { \"codepoints\": [8790], \"characters\": \"\\u2256\" },\n  \"&eqcolon;\": { \"codepoints\": [8789], \"characters\": \"\\u2255\" },\n  \"&eqsim;\": { \"codepoints\": [8770], \"characters\": \"\\u2242\" },\n  \"&eqslantgtr;\": { \"codepoints\": [10902], \"characters\": \"\\u2A96\" },\n  \"&eqslantless;\": { \"codepoints\": [10901], \"characters\": \"\\u2A95\" },\n  \"&Equal;\": { \"codepoints\": [10869], \"characters\": \"\\u2A75\" },\n  \"&equals;\": { \"codepoints\": [61], \"characters\": \"\\u003D\" },\n  \"&EqualTilde;\": { \"codepoints\": [8770], \"characters\": \"\\u2242\" },\n  \"&equest;\": { \"codepoints\": [8799], \"characters\": \"\\u225F\" },\n  \"&Equilibrium;\": { \"codepoints\": [8652], \"characters\": \"\\u21CC\" },\n  \"&equiv;\": { \"codepoints\": [8801], \"characters\": \"\\u2261\" },\n  \"&equivDD;\": { \"codepoints\": [10872], \"characters\": \"\\u2A78\" },\n  \"&eqvparsl;\": { \"codepoints\": [10725], \"characters\": \"\\u29E5\" },\n  \"&erarr;\": { \"codepoints\": [10609], \"characters\": \"\\u2971\" },\n  \"&erDot;\": { \"codepoints\": [8787], \"characters\": \"\\u2253\" },\n  \"&escr;\": { \"codepoints\": [8495], \"characters\": \"\\u212F\" },\n  \"&Escr;\": { \"codepoints\": [8496], \"characters\": \"\\u2130\" },\n  \"&esdot;\": { \"codepoints\": [8784], \"characters\": \"\\u2250\" },\n  \"&Esim;\": { \"codepoints\": [10867], \"characters\": \"\\u2A73\" },\n  \"&esim;\": { \"codepoints\": [8770], \"characters\": \"\\u2242\" },\n  \"&Eta;\": { \"codepoints\": [919], \"characters\": \"\\u0397\" },\n  \"&eta;\": { \"codepoints\": [951], \"characters\": \"\\u03B7\" },\n  \"&ETH;\": { \"codepoints\": [208], \"characters\": \"\\u00D0\" },\n  \"&ETH\": { \"codepoints\": [208], \"characters\": \"\\u00D0\" },\n  \"&eth;\": { \"codepoints\": [240], \"characters\": \"\\u00F0\" },\n  \"&eth\": { \"codepoints\": [240], \"characters\": \"\\u00F0\" },\n  \"&Euml;\": { \"codepoints\": [203], \"characters\": \"\\u00CB\" },\n  \"&Euml\": { \"codepoints\": [203], \"characters\": \"\\u00CB\" },\n  \"&euml;\": { \"codepoints\": [235], \"characters\": \"\\u00EB\" },\n  \"&euml\": { \"codepoints\": [235], \"characters\": \"\\u00EB\" },\n  \"&euro;\": { \"codepoints\": [8364], \"characters\": \"\\u20AC\" },\n  \"&excl;\": { \"codepoints\": [33], \"characters\": \"\\u0021\" },\n  \"&exist;\": { \"codepoints\": [8707], \"characters\": \"\\u2203\" },\n  \"&Exists;\": { \"codepoints\": [8707], \"characters\": \"\\u2203\" },\n  \"&expectation;\": { \"codepoints\": [8496], \"characters\": \"\\u2130\" },\n  \"&exponentiale;\": { \"codepoints\": [8519], \"characters\": \"\\u2147\" },\n  \"&ExponentialE;\": { \"codepoints\": [8519], \"characters\": \"\\u2147\" },\n  \"&fallingdotseq;\": { \"codepoints\": [8786], \"characters\": \"\\u2252\" },\n  \"&Fcy;\": { \"codepoints\": [1060], \"characters\": \"\\u0424\" },\n  \"&fcy;\": { \"codepoints\": [1092], \"characters\": \"\\u0444\" },\n  \"&female;\": { \"codepoints\": [9792], \"characters\": \"\\u2640\" },\n  \"&ffilig;\": { \"codepoints\": [64259], \"characters\": \"\\uFB03\" },\n  \"&fflig;\": { \"codepoints\": [64256], \"characters\": \"\\uFB00\" },\n  \"&ffllig;\": { \"codepoints\": [64260], \"characters\": \"\\uFB04\" },\n  \"&Ffr;\": { \"codepoints\": [120073], \"characters\": \"\\uD835\\uDD09\" },\n  \"&ffr;\": { \"codepoints\": [120099], \"characters\": \"\\uD835\\uDD23\" },\n  \"&filig;\": { \"codepoints\": [64257], \"characters\": \"\\uFB01\" },\n  \"&FilledSmallSquare;\": { \"codepoints\": [9724], \"characters\": \"\\u25FC\" },\n  \"&FilledVerySmallSquare;\": { \"codepoints\": [9642], \"characters\": \"\\u25AA\" },\n  \"&fjlig;\": { \"codepoints\": [102, 106], \"characters\": \"\\u0066\\u006A\" },\n  \"&flat;\": { \"codepoints\": [9837], \"characters\": \"\\u266D\" },\n  \"&fllig;\": { \"codepoints\": [64258], \"characters\": \"\\uFB02\" },\n  \"&fltns;\": { \"codepoints\": [9649], \"characters\": \"\\u25B1\" },\n  \"&fnof;\": { \"codepoints\": [402], \"characters\": \"\\u0192\" },\n  \"&Fopf;\": { \"codepoints\": [120125], \"characters\": \"\\uD835\\uDD3D\" },\n  \"&fopf;\": { \"codepoints\": [120151], \"characters\": \"\\uD835\\uDD57\" },\n  \"&forall;\": { \"codepoints\": [8704], \"characters\": \"\\u2200\" },\n  \"&ForAll;\": { \"codepoints\": [8704], \"characters\": \"\\u2200\" },\n  \"&fork;\": { \"codepoints\": [8916], \"characters\": \"\\u22D4\" },\n  \"&forkv;\": { \"codepoints\": [10969], \"characters\": \"\\u2AD9\" },\n  \"&Fouriertrf;\": { \"codepoints\": [8497], \"characters\": \"\\u2131\" },\n  \"&fpartint;\": { \"codepoints\": [10765], \"characters\": \"\\u2A0D\" },\n  \"&frac12;\": { \"codepoints\": [189], \"characters\": \"\\u00BD\" },\n  \"&frac12\": { \"codepoints\": [189], \"characters\": \"\\u00BD\" },\n  \"&frac13;\": { \"codepoints\": [8531], \"characters\": \"\\u2153\" },\n  \"&frac14;\": { \"codepoints\": [188], \"characters\": \"\\u00BC\" },\n  \"&frac14\": { \"codepoints\": [188], \"characters\": \"\\u00BC\" },\n  \"&frac15;\": { \"codepoints\": [8533], \"characters\": \"\\u2155\" },\n  \"&frac16;\": { \"codepoints\": [8537], \"characters\": \"\\u2159\" },\n  \"&frac18;\": { \"codepoints\": [8539], \"characters\": \"\\u215B\" },\n  \"&frac23;\": { \"codepoints\": [8532], \"characters\": \"\\u2154\" },\n  \"&frac25;\": { \"codepoints\": [8534], \"characters\": \"\\u2156\" },\n  \"&frac34;\": { \"codepoints\": [190], \"characters\": \"\\u00BE\" },\n  \"&frac34\": { \"codepoints\": [190], \"characters\": \"\\u00BE\" },\n  \"&frac35;\": { \"codepoints\": [8535], \"characters\": \"\\u2157\" },\n  \"&frac38;\": { \"codepoints\": [8540], \"characters\": \"\\u215C\" },\n  \"&frac45;\": { \"codepoints\": [8536], \"characters\": \"\\u2158\" },\n  \"&frac56;\": { \"codepoints\": [8538], \"characters\": \"\\u215A\" },\n  \"&frac58;\": { \"codepoints\": [8541], \"characters\": \"\\u215D\" },\n  \"&frac78;\": { \"codepoints\": [8542], \"characters\": \"\\u215E\" },\n  \"&frasl;\": { \"codepoints\": [8260], \"characters\": \"\\u2044\" },\n  \"&frown;\": { \"codepoints\": [8994], \"characters\": \"\\u2322\" },\n  \"&fscr;\": { \"codepoints\": [119995], \"characters\": \"\\uD835\\uDCBB\" },\n  \"&Fscr;\": { \"codepoints\": [8497], \"characters\": \"\\u2131\" },\n  \"&gacute;\": { \"codepoints\": [501], \"characters\": \"\\u01F5\" },\n  \"&Gamma;\": { \"codepoints\": [915], \"characters\": \"\\u0393\" },\n  \"&gamma;\": { \"codepoints\": [947], \"characters\": \"\\u03B3\" },\n  \"&Gammad;\": { \"codepoints\": [988], \"characters\": \"\\u03DC\" },\n  \"&gammad;\": { \"codepoints\": [989], \"characters\": \"\\u03DD\" },\n  \"&gap;\": { \"codepoints\": [10886], \"characters\": \"\\u2A86\" },\n  \"&Gbreve;\": { \"codepoints\": [286], \"characters\": \"\\u011E\" },\n  \"&gbreve;\": { \"codepoints\": [287], \"characters\": \"\\u011F\" },\n  \"&Gcedil;\": { \"codepoints\": [290], \"characters\": \"\\u0122\" },\n  \"&Gcirc;\": { \"codepoints\": [284], \"characters\": \"\\u011C\" },\n  \"&gcirc;\": { \"codepoints\": [285], \"characters\": \"\\u011D\" },\n  \"&Gcy;\": { \"codepoints\": [1043], \"characters\": \"\\u0413\" },\n  \"&gcy;\": { \"codepoints\": [1075], \"characters\": \"\\u0433\" },\n  \"&Gdot;\": { \"codepoints\": [288], \"characters\": \"\\u0120\" },\n  \"&gdot;\": { \"codepoints\": [289], \"characters\": \"\\u0121\" },\n  \"&ge;\": { \"codepoints\": [8805], \"characters\": \"\\u2265\" },\n  \"&gE;\": { \"codepoints\": [8807], \"characters\": \"\\u2267\" },\n  \"&gEl;\": { \"codepoints\": [10892], \"characters\": \"\\u2A8C\" },\n  \"&gel;\": { \"codepoints\": [8923], \"characters\": \"\\u22DB\" },\n  \"&geq;\": { \"codepoints\": [8805], \"characters\": \"\\u2265\" },\n  \"&geqq;\": { \"codepoints\": [8807], \"characters\": \"\\u2267\" },\n  \"&geqslant;\": { \"codepoints\": [10878], \"characters\": \"\\u2A7E\" },\n  \"&gescc;\": { \"codepoints\": [10921], \"characters\": \"\\u2AA9\" },\n  \"&ges;\": { \"codepoints\": [10878], \"characters\": \"\\u2A7E\" },\n  \"&gesdot;\": { \"codepoints\": [10880], \"characters\": \"\\u2A80\" },\n  \"&gesdoto;\": { \"codepoints\": [10882], \"characters\": \"\\u2A82\" },\n  \"&gesdotol;\": { \"codepoints\": [10884], \"characters\": \"\\u2A84\" },\n  \"&gesl;\": { \"codepoints\": [8923, 65024], \"characters\": \"\\u22DB\\uFE00\" },\n  \"&gesles;\": { \"codepoints\": [10900], \"characters\": \"\\u2A94\" },\n  \"&Gfr;\": { \"codepoints\": [120074], \"characters\": \"\\uD835\\uDD0A\" },\n  \"&gfr;\": { \"codepoints\": [120100], \"characters\": \"\\uD835\\uDD24\" },\n  \"&gg;\": { \"codepoints\": [8811], \"characters\": \"\\u226B\" },\n  \"&Gg;\": { \"codepoints\": [8921], \"characters\": \"\\u22D9\" },\n  \"&ggg;\": { \"codepoints\": [8921], \"characters\": \"\\u22D9\" },\n  \"&gimel;\": { \"codepoints\": [8503], \"characters\": \"\\u2137\" },\n  \"&GJcy;\": { \"codepoints\": [1027], \"characters\": \"\\u0403\" },\n  \"&gjcy;\": { \"codepoints\": [1107], \"characters\": \"\\u0453\" },\n  \"&gla;\": { \"codepoints\": [10917], \"characters\": \"\\u2AA5\" },\n  \"&gl;\": { \"codepoints\": [8823], \"characters\": \"\\u2277\" },\n  \"&glE;\": { \"codepoints\": [10898], \"characters\": \"\\u2A92\" },\n  \"&glj;\": { \"codepoints\": [10916], \"characters\": \"\\u2AA4\" },\n  \"&gnap;\": { \"codepoints\": [10890], \"characters\": \"\\u2A8A\" },\n  \"&gnapprox;\": { \"codepoints\": [10890], \"characters\": \"\\u2A8A\" },\n  \"&gne;\": { \"codepoints\": [10888], \"characters\": \"\\u2A88\" },\n  \"&gnE;\": { \"codepoints\": [8809], \"characters\": \"\\u2269\" },\n  \"&gneq;\": { \"codepoints\": [10888], \"characters\": \"\\u2A88\" },\n  \"&gneqq;\": { \"codepoints\": [8809], \"characters\": \"\\u2269\" },\n  \"&gnsim;\": { \"codepoints\": [8935], \"characters\": \"\\u22E7\" },\n  \"&Gopf;\": { \"codepoints\": [120126], \"characters\": \"\\uD835\\uDD3E\" },\n  \"&gopf;\": { \"codepoints\": [120152], \"characters\": \"\\uD835\\uDD58\" },\n  \"&grave;\": { \"codepoints\": [96], \"characters\": \"\\u0060\" },\n  \"&GreaterEqual;\": { \"codepoints\": [8805], \"characters\": \"\\u2265\" },\n  \"&GreaterEqualLess;\": { \"codepoints\": [8923], \"characters\": \"\\u22DB\" },\n  \"&GreaterFullEqual;\": { \"codepoints\": [8807], \"characters\": \"\\u2267\" },\n  \"&GreaterGreater;\": { \"codepoints\": [10914], \"characters\": \"\\u2AA2\" },\n  \"&GreaterLess;\": { \"codepoints\": [8823], \"characters\": \"\\u2277\" },\n  \"&GreaterSlantEqual;\": { \"codepoints\": [10878], \"characters\": \"\\u2A7E\" },\n  \"&GreaterTilde;\": { \"codepoints\": [8819], \"characters\": \"\\u2273\" },\n  \"&Gscr;\": { \"codepoints\": [119970], \"characters\": \"\\uD835\\uDCA2\" },\n  \"&gscr;\": { \"codepoints\": [8458], \"characters\": \"\\u210A\" },\n  \"&gsim;\": { \"codepoints\": [8819], \"characters\": \"\\u2273\" },\n  \"&gsime;\": { \"codepoints\": [10894], \"characters\": \"\\u2A8E\" },\n  \"&gsiml;\": { \"codepoints\": [10896], \"characters\": \"\\u2A90\" },\n  \"&gtcc;\": { \"codepoints\": [10919], \"characters\": \"\\u2AA7\" },\n  \"&gtcir;\": { \"codepoints\": [10874], \"characters\": \"\\u2A7A\" },\n  \"&gt;\": { \"codepoints\": [62], \"characters\": \"\\u003E\" },\n  \"&gt\": { \"codepoints\": [62], \"characters\": \"\\u003E\" },\n  \"&GT;\": { \"codepoints\": [62], \"characters\": \"\\u003E\" },\n  \"&GT\": { \"codepoints\": [62], \"characters\": \"\\u003E\" },\n  \"&Gt;\": { \"codepoints\": [8811], \"characters\": \"\\u226B\" },\n  \"&gtdot;\": { \"codepoints\": [8919], \"characters\": \"\\u22D7\" },\n  \"&gtlPar;\": { \"codepoints\": [10645], \"characters\": \"\\u2995\" },\n  \"&gtquest;\": { \"codepoints\": [10876], \"characters\": \"\\u2A7C\" },\n  \"&gtrapprox;\": { \"codepoints\": [10886], \"characters\": \"\\u2A86\" },\n  \"&gtrarr;\": { \"codepoints\": [10616], \"characters\": \"\\u2978\" },\n  \"&gtrdot;\": { \"codepoints\": [8919], \"characters\": \"\\u22D7\" },\n  \"&gtreqless;\": { \"codepoints\": [8923], \"characters\": \"\\u22DB\" },\n  \"&gtreqqless;\": { \"codepoints\": [10892], \"characters\": \"\\u2A8C\" },\n  \"&gtrless;\": { \"codepoints\": [8823], \"characters\": \"\\u2277\" },\n  \"&gtrsim;\": { \"codepoints\": [8819], \"characters\": \"\\u2273\" },\n  \"&gvertneqq;\": { \"codepoints\": [8809, 65024], \"characters\": \"\\u2269\\uFE00\" },\n  \"&gvnE;\": { \"codepoints\": [8809, 65024], \"characters\": \"\\u2269\\uFE00\" },\n  \"&Hacek;\": { \"codepoints\": [711], \"characters\": \"\\u02C7\" },\n  \"&hairsp;\": { \"codepoints\": [8202], \"characters\": \"\\u200A\" },\n  \"&half;\": { \"codepoints\": [189], \"characters\": \"\\u00BD\" },\n  \"&hamilt;\": { \"codepoints\": [8459], \"characters\": \"\\u210B\" },\n  \"&HARDcy;\": { \"codepoints\": [1066], \"characters\": \"\\u042A\" },\n  \"&hardcy;\": { \"codepoints\": [1098], \"characters\": \"\\u044A\" },\n  \"&harrcir;\": { \"codepoints\": [10568], \"characters\": \"\\u2948\" },\n  \"&harr;\": { \"codepoints\": [8596], \"characters\": \"\\u2194\" },\n  \"&hArr;\": { \"codepoints\": [8660], \"characters\": \"\\u21D4\" },\n  \"&harrw;\": { \"codepoints\": [8621], \"characters\": \"\\u21AD\" },\n  \"&Hat;\": { \"codepoints\": [94], \"characters\": \"\\u005E\" },\n  \"&hbar;\": { \"codepoints\": [8463], \"characters\": \"\\u210F\" },\n  \"&Hcirc;\": { \"codepoints\": [292], \"characters\": \"\\u0124\" },\n  \"&hcirc;\": { \"codepoints\": [293], \"characters\": \"\\u0125\" },\n  \"&hearts;\": { \"codepoints\": [9829], \"characters\": \"\\u2665\" },\n  \"&heartsuit;\": { \"codepoints\": [9829], \"characters\": \"\\u2665\" },\n  \"&hellip;\": { \"codepoints\": [8230], \"characters\": \"\\u2026\" },\n  \"&hercon;\": { \"codepoints\": [8889], \"characters\": \"\\u22B9\" },\n  \"&hfr;\": { \"codepoints\": [120101], \"characters\": \"\\uD835\\uDD25\" },\n  \"&Hfr;\": { \"codepoints\": [8460], \"characters\": \"\\u210C\" },\n  \"&HilbertSpace;\": { \"codepoints\": [8459], \"characters\": \"\\u210B\" },\n  \"&hksearow;\": { \"codepoints\": [10533], \"characters\": \"\\u2925\" },\n  \"&hkswarow;\": { \"codepoints\": [10534], \"characters\": \"\\u2926\" },\n  \"&hoarr;\": { \"codepoints\": [8703], \"characters\": \"\\u21FF\" },\n  \"&homtht;\": { \"codepoints\": [8763], \"characters\": \"\\u223B\" },\n  \"&hookleftarrow;\": { \"codepoints\": [8617], \"characters\": \"\\u21A9\" },\n  \"&hookrightarrow;\": { \"codepoints\": [8618], \"characters\": \"\\u21AA\" },\n  \"&hopf;\": { \"codepoints\": [120153], \"characters\": \"\\uD835\\uDD59\" },\n  \"&Hopf;\": { \"codepoints\": [8461], \"characters\": \"\\u210D\" },\n  \"&horbar;\": { \"codepoints\": [8213], \"characters\": \"\\u2015\" },\n  \"&HorizontalLine;\": { \"codepoints\": [9472], \"characters\": \"\\u2500\" },\n  \"&hscr;\": { \"codepoints\": [119997], \"characters\": \"\\uD835\\uDCBD\" },\n  \"&Hscr;\": { \"codepoints\": [8459], \"characters\": \"\\u210B\" },\n  \"&hslash;\": { \"codepoints\": [8463], \"characters\": \"\\u210F\" },\n  \"&Hstrok;\": { \"codepoints\": [294], \"characters\": \"\\u0126\" },\n  \"&hstrok;\": { \"codepoints\": [295], \"characters\": \"\\u0127\" },\n  \"&HumpDownHump;\": { \"codepoints\": [8782], \"characters\": \"\\u224E\" },\n  \"&HumpEqual;\": { \"codepoints\": [8783], \"characters\": \"\\u224F\" },\n  \"&hybull;\": { \"codepoints\": [8259], \"characters\": \"\\u2043\" },\n  \"&hyphen;\": { \"codepoints\": [8208], \"characters\": \"\\u2010\" },\n  \"&Iacute;\": { \"codepoints\": [205], \"characters\": \"\\u00CD\" },\n  \"&Iacute\": { \"codepoints\": [205], \"characters\": \"\\u00CD\" },\n  \"&iacute;\": { \"codepoints\": [237], \"characters\": \"\\u00ED\" },\n  \"&iacute\": { \"codepoints\": [237], \"characters\": \"\\u00ED\" },\n  \"&ic;\": { \"codepoints\": [8291], \"characters\": \"\\u2063\" },\n  \"&Icirc;\": { \"codepoints\": [206], \"characters\": \"\\u00CE\" },\n  \"&Icirc\": { \"codepoints\": [206], \"characters\": \"\\u00CE\" },\n  \"&icirc;\": { \"codepoints\": [238], \"characters\": \"\\u00EE\" },\n  \"&icirc\": { \"codepoints\": [238], \"characters\": \"\\u00EE\" },\n  \"&Icy;\": { \"codepoints\": [1048], \"characters\": \"\\u0418\" },\n  \"&icy;\": { \"codepoints\": [1080], \"characters\": \"\\u0438\" },\n  \"&Idot;\": { \"codepoints\": [304], \"characters\": \"\\u0130\" },\n  \"&IEcy;\": { \"codepoints\": [1045], \"characters\": \"\\u0415\" },\n  \"&iecy;\": { \"codepoints\": [1077], \"characters\": \"\\u0435\" },\n  \"&iexcl;\": { \"codepoints\": [161], \"characters\": \"\\u00A1\" },\n  \"&iexcl\": { \"codepoints\": [161], \"characters\": \"\\u00A1\" },\n  \"&iff;\": { \"codepoints\": [8660], \"characters\": \"\\u21D4\" },\n  \"&ifr;\": { \"codepoints\": [120102], \"characters\": \"\\uD835\\uDD26\" },\n  \"&Ifr;\": { \"codepoints\": [8465], \"characters\": \"\\u2111\" },\n  \"&Igrave;\": { \"codepoints\": [204], \"characters\": \"\\u00CC\" },\n  \"&Igrave\": { \"codepoints\": [204], \"characters\": \"\\u00CC\" },\n  \"&igrave;\": { \"codepoints\": [236], \"characters\": \"\\u00EC\" },\n  \"&igrave\": { \"codepoints\": [236], \"characters\": \"\\u00EC\" },\n  \"&ii;\": { \"codepoints\": [8520], \"characters\": \"\\u2148\" },\n  \"&iiiint;\": { \"codepoints\": [10764], \"characters\": \"\\u2A0C\" },\n  \"&iiint;\": { \"codepoints\": [8749], \"characters\": \"\\u222D\" },\n  \"&iinfin;\": { \"codepoints\": [10716], \"characters\": \"\\u29DC\" },\n  \"&iiota;\": { \"codepoints\": [8489], \"characters\": \"\\u2129\" },\n  \"&IJlig;\": { \"codepoints\": [306], \"characters\": \"\\u0132\" },\n  \"&ijlig;\": { \"codepoints\": [307], \"characters\": \"\\u0133\" },\n  \"&Imacr;\": { \"codepoints\": [298], \"characters\": \"\\u012A\" },\n  \"&imacr;\": { \"codepoints\": [299], \"characters\": \"\\u012B\" },\n  \"&image;\": { \"codepoints\": [8465], \"characters\": \"\\u2111\" },\n  \"&ImaginaryI;\": { \"codepoints\": [8520], \"characters\": \"\\u2148\" },\n  \"&imagline;\": { \"codepoints\": [8464], \"characters\": \"\\u2110\" },\n  \"&imagpart;\": { \"codepoints\": [8465], \"characters\": \"\\u2111\" },\n  \"&imath;\": { \"codepoints\": [305], \"characters\": \"\\u0131\" },\n  \"&Im;\": { \"codepoints\": [8465], \"characters\": \"\\u2111\" },\n  \"&imof;\": { \"codepoints\": [8887], \"characters\": \"\\u22B7\" },\n  \"&imped;\": { \"codepoints\": [437], \"characters\": \"\\u01B5\" },\n  \"&Implies;\": { \"codepoints\": [8658], \"characters\": \"\\u21D2\" },\n  \"&incare;\": { \"codepoints\": [8453], \"characters\": \"\\u2105\" },\n  \"&in;\": { \"codepoints\": [8712], \"characters\": \"\\u2208\" },\n  \"&infin;\": { \"codepoints\": [8734], \"characters\": \"\\u221E\" },\n  \"&infintie;\": { \"codepoints\": [10717], \"characters\": \"\\u29DD\" },\n  \"&inodot;\": { \"codepoints\": [305], \"characters\": \"\\u0131\" },\n  \"&intcal;\": { \"codepoints\": [8890], \"characters\": \"\\u22BA\" },\n  \"&int;\": { \"codepoints\": [8747], \"characters\": \"\\u222B\" },\n  \"&Int;\": { \"codepoints\": [8748], \"characters\": \"\\u222C\" },\n  \"&integers;\": { \"codepoints\": [8484], \"characters\": \"\\u2124\" },\n  \"&Integral;\": { \"codepoints\": [8747], \"characters\": \"\\u222B\" },\n  \"&intercal;\": { \"codepoints\": [8890], \"characters\": \"\\u22BA\" },\n  \"&Intersection;\": { \"codepoints\": [8898], \"characters\": \"\\u22C2\" },\n  \"&intlarhk;\": { \"codepoints\": [10775], \"characters\": \"\\u2A17\" },\n  \"&intprod;\": { \"codepoints\": [10812], \"characters\": \"\\u2A3C\" },\n  \"&InvisibleComma;\": { \"codepoints\": [8291], \"characters\": \"\\u2063\" },\n  \"&InvisibleTimes;\": { \"codepoints\": [8290], \"characters\": \"\\u2062\" },\n  \"&IOcy;\": { \"codepoints\": [1025], \"characters\": \"\\u0401\" },\n  \"&iocy;\": { \"codepoints\": [1105], \"characters\": \"\\u0451\" },\n  \"&Iogon;\": { \"codepoints\": [302], \"characters\": \"\\u012E\" },\n  \"&iogon;\": { \"codepoints\": [303], \"characters\": \"\\u012F\" },\n  \"&Iopf;\": { \"codepoints\": [120128], \"characters\": \"\\uD835\\uDD40\" },\n  \"&iopf;\": { \"codepoints\": [120154], \"characters\": \"\\uD835\\uDD5A\" },\n  \"&Iota;\": { \"codepoints\": [921], \"characters\": \"\\u0399\" },\n  \"&iota;\": { \"codepoints\": [953], \"characters\": \"\\u03B9\" },\n  \"&iprod;\": { \"codepoints\": [10812], \"characters\": \"\\u2A3C\" },\n  \"&iquest;\": { \"codepoints\": [191], \"characters\": \"\\u00BF\" },\n  \"&iquest\": { \"codepoints\": [191], \"characters\": \"\\u00BF\" },\n  \"&iscr;\": { \"codepoints\": [119998], \"characters\": \"\\uD835\\uDCBE\" },\n  \"&Iscr;\": { \"codepoints\": [8464], \"characters\": \"\\u2110\" },\n  \"&isin;\": { \"codepoints\": [8712], \"characters\": \"\\u2208\" },\n  \"&isindot;\": { \"codepoints\": [8949], \"characters\": \"\\u22F5\" },\n  \"&isinE;\": { \"codepoints\": [8953], \"characters\": \"\\u22F9\" },\n  \"&isins;\": { \"codepoints\": [8948], \"characters\": \"\\u22F4\" },\n  \"&isinsv;\": { \"codepoints\": [8947], \"characters\": \"\\u22F3\" },\n  \"&isinv;\": { \"codepoints\": [8712], \"characters\": \"\\u2208\" },\n  \"&it;\": { \"codepoints\": [8290], \"characters\": \"\\u2062\" },\n  \"&Itilde;\": { \"codepoints\": [296], \"characters\": \"\\u0128\" },\n  \"&itilde;\": { \"codepoints\": [297], \"characters\": \"\\u0129\" },\n  \"&Iukcy;\": { \"codepoints\": [1030], \"characters\": \"\\u0406\" },\n  \"&iukcy;\": { \"codepoints\": [1110], \"characters\": \"\\u0456\" },\n  \"&Iuml;\": { \"codepoints\": [207], \"characters\": \"\\u00CF\" },\n  \"&Iuml\": { \"codepoints\": [207], \"characters\": \"\\u00CF\" },\n  \"&iuml;\": { \"codepoints\": [239], \"characters\": \"\\u00EF\" },\n  \"&iuml\": { \"codepoints\": [239], \"characters\": \"\\u00EF\" },\n  \"&Jcirc;\": { \"codepoints\": [308], \"characters\": \"\\u0134\" },\n  \"&jcirc;\": { \"codepoints\": [309], \"characters\": \"\\u0135\" },\n  \"&Jcy;\": { \"codepoints\": [1049], \"characters\": \"\\u0419\" },\n  \"&jcy;\": { \"codepoints\": [1081], \"characters\": \"\\u0439\" },\n  \"&Jfr;\": { \"codepoints\": [120077], \"characters\": \"\\uD835\\uDD0D\" },\n  \"&jfr;\": { \"codepoints\": [120103], \"characters\": \"\\uD835\\uDD27\" },\n  \"&jmath;\": { \"codepoints\": [567], \"characters\": \"\\u0237\" },\n  \"&Jopf;\": { \"codepoints\": [120129], \"characters\": \"\\uD835\\uDD41\" },\n  \"&jopf;\": { \"codepoints\": [120155], \"characters\": \"\\uD835\\uDD5B\" },\n  \"&Jscr;\": { \"codepoints\": [119973], \"characters\": \"\\uD835\\uDCA5\" },\n  \"&jscr;\": { \"codepoints\": [119999], \"characters\": \"\\uD835\\uDCBF\" },\n  \"&Jsercy;\": { \"codepoints\": [1032], \"characters\": \"\\u0408\" },\n  \"&jsercy;\": { \"codepoints\": [1112], \"characters\": \"\\u0458\" },\n  \"&Jukcy;\": { \"codepoints\": [1028], \"characters\": \"\\u0404\" },\n  \"&jukcy;\": { \"codepoints\": [1108], \"characters\": \"\\u0454\" },\n  \"&Kappa;\": { \"codepoints\": [922], \"characters\": \"\\u039A\" },\n  \"&kappa;\": { \"codepoints\": [954], \"characters\": \"\\u03BA\" },\n  \"&kappav;\": { \"codepoints\": [1008], \"characters\": \"\\u03F0\" },\n  \"&Kcedil;\": { \"codepoints\": [310], \"characters\": \"\\u0136\" },\n  \"&kcedil;\": { \"codepoints\": [311], \"characters\": \"\\u0137\" },\n  \"&Kcy;\": { \"codepoints\": [1050], \"characters\": \"\\u041A\" },\n  \"&kcy;\": { \"codepoints\": [1082], \"characters\": \"\\u043A\" },\n  \"&Kfr;\": { \"codepoints\": [120078], \"characters\": \"\\uD835\\uDD0E\" },\n  \"&kfr;\": { \"codepoints\": [120104], \"characters\": \"\\uD835\\uDD28\" },\n  \"&kgreen;\": { \"codepoints\": [312], \"characters\": \"\\u0138\" },\n  \"&KHcy;\": { \"codepoints\": [1061], \"characters\": \"\\u0425\" },\n  \"&khcy;\": { \"codepoints\": [1093], \"characters\": \"\\u0445\" },\n  \"&KJcy;\": { \"codepoints\": [1036], \"characters\": \"\\u040C\" },\n  \"&kjcy;\": { \"codepoints\": [1116], \"characters\": \"\\u045C\" },\n  \"&Kopf;\": { \"codepoints\": [120130], \"characters\": \"\\uD835\\uDD42\" },\n  \"&kopf;\": { \"codepoints\": [120156], \"characters\": \"\\uD835\\uDD5C\" },\n  \"&Kscr;\": { \"codepoints\": [119974], \"characters\": \"\\uD835\\uDCA6\" },\n  \"&kscr;\": { \"codepoints\": [120000], \"characters\": \"\\uD835\\uDCC0\" },\n  \"&lAarr;\": { \"codepoints\": [8666], \"characters\": \"\\u21DA\" },\n  \"&Lacute;\": { \"codepoints\": [313], \"characters\": \"\\u0139\" },\n  \"&lacute;\": { \"codepoints\": [314], \"characters\": \"\\u013A\" },\n  \"&laemptyv;\": { \"codepoints\": [10676], \"characters\": \"\\u29B4\" },\n  \"&lagran;\": { \"codepoints\": [8466], \"characters\": \"\\u2112\" },\n  \"&Lambda;\": { \"codepoints\": [923], \"characters\": \"\\u039B\" },\n  \"&lambda;\": { \"codepoints\": [955], \"characters\": \"\\u03BB\" },\n  \"&lang;\": { \"codepoints\": [10216], \"characters\": \"\\u27E8\" },\n  \"&Lang;\": { \"codepoints\": [10218], \"characters\": \"\\u27EA\" },\n  \"&langd;\": { \"codepoints\": [10641], \"characters\": \"\\u2991\" },\n  \"&langle;\": { \"codepoints\": [10216], \"characters\": \"\\u27E8\" },\n  \"&lap;\": { \"codepoints\": [10885], \"characters\": \"\\u2A85\" },\n  \"&Laplacetrf;\": { \"codepoints\": [8466], \"characters\": \"\\u2112\" },\n  \"&laquo;\": { \"codepoints\": [171], \"characters\": \"\\u00AB\" },\n  \"&laquo\": { \"codepoints\": [171], \"characters\": \"\\u00AB\" },\n  \"&larrb;\": { \"codepoints\": [8676], \"characters\": \"\\u21E4\" },\n  \"&larrbfs;\": { \"codepoints\": [10527], \"characters\": \"\\u291F\" },\n  \"&larr;\": { \"codepoints\": [8592], \"characters\": \"\\u2190\" },\n  \"&Larr;\": { \"codepoints\": [8606], \"characters\": \"\\u219E\" },\n  \"&lArr;\": { \"codepoints\": [8656], \"characters\": \"\\u21D0\" },\n  \"&larrfs;\": { \"codepoints\": [10525], \"characters\": \"\\u291D\" },\n  \"&larrhk;\": { \"codepoints\": [8617], \"characters\": \"\\u21A9\" },\n  \"&larrlp;\": { \"codepoints\": [8619], \"characters\": \"\\u21AB\" },\n  \"&larrpl;\": { \"codepoints\": [10553], \"characters\": \"\\u2939\" },\n  \"&larrsim;\": { \"codepoints\": [10611], \"characters\": \"\\u2973\" },\n  \"&larrtl;\": { \"codepoints\": [8610], \"characters\": \"\\u21A2\" },\n  \"&latail;\": { \"codepoints\": [10521], \"characters\": \"\\u2919\" },\n  \"&lAtail;\": { \"codepoints\": [10523], \"characters\": \"\\u291B\" },\n  \"&lat;\": { \"codepoints\": [10923], \"characters\": \"\\u2AAB\" },\n  \"&late;\": { \"codepoints\": [10925], \"characters\": \"\\u2AAD\" },\n  \"&lates;\": { \"codepoints\": [10925, 65024], \"characters\": \"\\u2AAD\\uFE00\" },\n  \"&lbarr;\": { \"codepoints\": [10508], \"characters\": \"\\u290C\" },\n  \"&lBarr;\": { \"codepoints\": [10510], \"characters\": \"\\u290E\" },\n  \"&lbbrk;\": { \"codepoints\": [10098], \"characters\": \"\\u2772\" },\n  \"&lbrace;\": { \"codepoints\": [123], \"characters\": \"\\u007B\" },\n  \"&lbrack;\": { \"codepoints\": [91], \"characters\": \"\\u005B\" },\n  \"&lbrke;\": { \"codepoints\": [10635], \"characters\": \"\\u298B\" },\n  \"&lbrksld;\": { \"codepoints\": [10639], \"characters\": \"\\u298F\" },\n  \"&lbrkslu;\": { \"codepoints\": [10637], \"characters\": \"\\u298D\" },\n  \"&Lcaron;\": { \"codepoints\": [317], \"characters\": \"\\u013D\" },\n  \"&lcaron;\": { \"codepoints\": [318], \"characters\": \"\\u013E\" },\n  \"&Lcedil;\": { \"codepoints\": [315], \"characters\": \"\\u013B\" },\n  \"&lcedil;\": { \"codepoints\": [316], \"characters\": \"\\u013C\" },\n  \"&lceil;\": { \"codepoints\": [8968], \"characters\": \"\\u2308\" },\n  \"&lcub;\": { \"codepoints\": [123], \"characters\": \"\\u007B\" },\n  \"&Lcy;\": { \"codepoints\": [1051], \"characters\": \"\\u041B\" },\n  \"&lcy;\": { \"codepoints\": [1083], \"characters\": \"\\u043B\" },\n  \"&ldca;\": { \"codepoints\": [10550], \"characters\": \"\\u2936\" },\n  \"&ldquo;\": { \"codepoints\": [8220], \"characters\": \"\\u201C\" },\n  \"&ldquor;\": { \"codepoints\": [8222], \"characters\": \"\\u201E\" },\n  \"&ldrdhar;\": { \"codepoints\": [10599], \"characters\": \"\\u2967\" },\n  \"&ldrushar;\": { \"codepoints\": [10571], \"characters\": \"\\u294B\" },\n  \"&ldsh;\": { \"codepoints\": [8626], \"characters\": \"\\u21B2\" },\n  \"&le;\": { \"codepoints\": [8804], \"characters\": \"\\u2264\" },\n  \"&lE;\": { \"codepoints\": [8806], \"characters\": \"\\u2266\" },\n  \"&LeftAngleBracket;\": { \"codepoints\": [10216], \"characters\": \"\\u27E8\" },\n  \"&LeftArrowBar;\": { \"codepoints\": [8676], \"characters\": \"\\u21E4\" },\n  \"&leftarrow;\": { \"codepoints\": [8592], \"characters\": \"\\u2190\" },\n  \"&LeftArrow;\": { \"codepoints\": [8592], \"characters\": \"\\u2190\" },\n  \"&Leftarrow;\": { \"codepoints\": [8656], \"characters\": \"\\u21D0\" },\n  \"&LeftArrowRightArrow;\": { \"codepoints\": [8646], \"characters\": \"\\u21C6\" },\n  \"&leftarrowtail;\": { \"codepoints\": [8610], \"characters\": \"\\u21A2\" },\n  \"&LeftCeiling;\": { \"codepoints\": [8968], \"characters\": \"\\u2308\" },\n  \"&LeftDoubleBracket;\": { \"codepoints\": [10214], \"characters\": \"\\u27E6\" },\n  \"&LeftDownTeeVector;\": { \"codepoints\": [10593], \"characters\": \"\\u2961\" },\n  \"&LeftDownVectorBar;\": { \"codepoints\": [10585], \"characters\": \"\\u2959\" },\n  \"&LeftDownVector;\": { \"codepoints\": [8643], \"characters\": \"\\u21C3\" },\n  \"&LeftFloor;\": { \"codepoints\": [8970], \"characters\": \"\\u230A\" },\n  \"&leftharpoondown;\": { \"codepoints\": [8637], \"characters\": \"\\u21BD\" },\n  \"&leftharpoonup;\": { \"codepoints\": [8636], \"characters\": \"\\u21BC\" },\n  \"&leftleftarrows;\": { \"codepoints\": [8647], \"characters\": \"\\u21C7\" },\n  \"&leftrightarrow;\": { \"codepoints\": [8596], \"characters\": \"\\u2194\" },\n  \"&LeftRightArrow;\": { \"codepoints\": [8596], \"characters\": \"\\u2194\" },\n  \"&Leftrightarrow;\": { \"codepoints\": [8660], \"characters\": \"\\u21D4\" },\n  \"&leftrightarrows;\": { \"codepoints\": [8646], \"characters\": \"\\u21C6\" },\n  \"&leftrightharpoons;\": { \"codepoints\": [8651], \"characters\": \"\\u21CB\" },\n  \"&leftrightsquigarrow;\": { \"codepoints\": [8621], \"characters\": \"\\u21AD\" },\n  \"&LeftRightVector;\": { \"codepoints\": [10574], \"characters\": \"\\u294E\" },\n  \"&LeftTeeArrow;\": { \"codepoints\": [8612], \"characters\": \"\\u21A4\" },\n  \"&LeftTee;\": { \"codepoints\": [8867], \"characters\": \"\\u22A3\" },\n  \"&LeftTeeVector;\": { \"codepoints\": [10586], \"characters\": \"\\u295A\" },\n  \"&leftthreetimes;\": { \"codepoints\": [8907], \"characters\": \"\\u22CB\" },\n  \"&LeftTriangleBar;\": { \"codepoints\": [10703], \"characters\": \"\\u29CF\" },\n  \"&LeftTriangle;\": { \"codepoints\": [8882], \"characters\": \"\\u22B2\" },\n  \"&LeftTriangleEqual;\": { \"codepoints\": [8884], \"characters\": \"\\u22B4\" },\n  \"&LeftUpDownVector;\": { \"codepoints\": [10577], \"characters\": \"\\u2951\" },\n  \"&LeftUpTeeVector;\": { \"codepoints\": [10592], \"characters\": \"\\u2960\" },\n  \"&LeftUpVectorBar;\": { \"codepoints\": [10584], \"characters\": \"\\u2958\" },\n  \"&LeftUpVector;\": { \"codepoints\": [8639], \"characters\": \"\\u21BF\" },\n  \"&LeftVectorBar;\": { \"codepoints\": [10578], \"characters\": \"\\u2952\" },\n  \"&LeftVector;\": { \"codepoints\": [8636], \"characters\": \"\\u21BC\" },\n  \"&lEg;\": { \"codepoints\": [10891], \"characters\": \"\\u2A8B\" },\n  \"&leg;\": { \"codepoints\": [8922], \"characters\": \"\\u22DA\" },\n  \"&leq;\": { \"codepoints\": [8804], \"characters\": \"\\u2264\" },\n  \"&leqq;\": { \"codepoints\": [8806], \"characters\": \"\\u2266\" },\n  \"&leqslant;\": { \"codepoints\": [10877], \"characters\": \"\\u2A7D\" },\n  \"&lescc;\": { \"codepoints\": [10920], \"characters\": \"\\u2AA8\" },\n  \"&les;\": { \"codepoints\": [10877], \"characters\": \"\\u2A7D\" },\n  \"&lesdot;\": { \"codepoints\": [10879], \"characters\": \"\\u2A7F\" },\n  \"&lesdoto;\": { \"codepoints\": [10881], \"characters\": \"\\u2A81\" },\n  \"&lesdotor;\": { \"codepoints\": [10883], \"characters\": \"\\u2A83\" },\n  \"&lesg;\": { \"codepoints\": [8922, 65024], \"characters\": \"\\u22DA\\uFE00\" },\n  \"&lesges;\": { \"codepoints\": [10899], \"characters\": \"\\u2A93\" },\n  \"&lessapprox;\": { \"codepoints\": [10885], \"characters\": \"\\u2A85\" },\n  \"&lessdot;\": { \"codepoints\": [8918], \"characters\": \"\\u22D6\" },\n  \"&lesseqgtr;\": { \"codepoints\": [8922], \"characters\": \"\\u22DA\" },\n  \"&lesseqqgtr;\": { \"codepoints\": [10891], \"characters\": \"\\u2A8B\" },\n  \"&LessEqualGreater;\": { \"codepoints\": [8922], \"characters\": \"\\u22DA\" },\n  \"&LessFullEqual;\": { \"codepoints\": [8806], \"characters\": \"\\u2266\" },\n  \"&LessGreater;\": { \"codepoints\": [8822], \"characters\": \"\\u2276\" },\n  \"&lessgtr;\": { \"codepoints\": [8822], \"characters\": \"\\u2276\" },\n  \"&LessLess;\": { \"codepoints\": [10913], \"characters\": \"\\u2AA1\" },\n  \"&lesssim;\": { \"codepoints\": [8818], \"characters\": \"\\u2272\" },\n  \"&LessSlantEqual;\": { \"codepoints\": [10877], \"characters\": \"\\u2A7D\" },\n  \"&LessTilde;\": { \"codepoints\": [8818], \"characters\": \"\\u2272\" },\n  \"&lfisht;\": { \"codepoints\": [10620], \"characters\": \"\\u297C\" },\n  \"&lfloor;\": { \"codepoints\": [8970], \"characters\": \"\\u230A\" },\n  \"&Lfr;\": { \"codepoints\": [120079], \"characters\": \"\\uD835\\uDD0F\" },\n  \"&lfr;\": { \"codepoints\": [120105], \"characters\": \"\\uD835\\uDD29\" },\n  \"&lg;\": { \"codepoints\": [8822], \"characters\": \"\\u2276\" },\n  \"&lgE;\": { \"codepoints\": [10897], \"characters\": \"\\u2A91\" },\n  \"&lHar;\": { \"codepoints\": [10594], \"characters\": \"\\u2962\" },\n  \"&lhard;\": { \"codepoints\": [8637], \"characters\": \"\\u21BD\" },\n  \"&lharu;\": { \"codepoints\": [8636], \"characters\": \"\\u21BC\" },\n  \"&lharul;\": { \"codepoints\": [10602], \"characters\": \"\\u296A\" },\n  \"&lhblk;\": { \"codepoints\": [9604], \"characters\": \"\\u2584\" },\n  \"&LJcy;\": { \"codepoints\": [1033], \"characters\": \"\\u0409\" },\n  \"&ljcy;\": { \"codepoints\": [1113], \"characters\": \"\\u0459\" },\n  \"&llarr;\": { \"codepoints\": [8647], \"characters\": \"\\u21C7\" },\n  \"&ll;\": { \"codepoints\": [8810], \"characters\": \"\\u226A\" },\n  \"&Ll;\": { \"codepoints\": [8920], \"characters\": \"\\u22D8\" },\n  \"&llcorner;\": { \"codepoints\": [8990], \"characters\": \"\\u231E\" },\n  \"&Lleftarrow;\": { \"codepoints\": [8666], \"characters\": \"\\u21DA\" },\n  \"&llhard;\": { \"codepoints\": [10603], \"characters\": \"\\u296B\" },\n  \"&lltri;\": { \"codepoints\": [9722], \"characters\": \"\\u25FA\" },\n  \"&Lmidot;\": { \"codepoints\": [319], \"characters\": \"\\u013F\" },\n  \"&lmidot;\": { \"codepoints\": [320], \"characters\": \"\\u0140\" },\n  \"&lmoustache;\": { \"codepoints\": [9136], \"characters\": \"\\u23B0\" },\n  \"&lmoust;\": { \"codepoints\": [9136], \"characters\": \"\\u23B0\" },\n  \"&lnap;\": { \"codepoints\": [10889], \"characters\": \"\\u2A89\" },\n  \"&lnapprox;\": { \"codepoints\": [10889], \"characters\": \"\\u2A89\" },\n  \"&lne;\": { \"codepoints\": [10887], \"characters\": \"\\u2A87\" },\n  \"&lnE;\": { \"codepoints\": [8808], \"characters\": \"\\u2268\" },\n  \"&lneq;\": { \"codepoints\": [10887], \"characters\": \"\\u2A87\" },\n  \"&lneqq;\": { \"codepoints\": [8808], \"characters\": \"\\u2268\" },\n  \"&lnsim;\": { \"codepoints\": [8934], \"characters\": \"\\u22E6\" },\n  \"&loang;\": { \"codepoints\": [10220], \"characters\": \"\\u27EC\" },\n  \"&loarr;\": { \"codepoints\": [8701], \"characters\": \"\\u21FD\" },\n  \"&lobrk;\": { \"codepoints\": [10214], \"characters\": \"\\u27E6\" },\n  \"&longleftarrow;\": { \"codepoints\": [10229], \"characters\": \"\\u27F5\" },\n  \"&LongLeftArrow;\": { \"codepoints\": [10229], \"characters\": \"\\u27F5\" },\n  \"&Longleftarrow;\": { \"codepoints\": [10232], \"characters\": \"\\u27F8\" },\n  \"&longleftrightarrow;\": { \"codepoints\": [10231], \"characters\": \"\\u27F7\" },\n  \"&LongLeftRightArrow;\": { \"codepoints\": [10231], \"characters\": \"\\u27F7\" },\n  \"&Longleftrightarrow;\": { \"codepoints\": [10234], \"characters\": \"\\u27FA\" },\n  \"&longmapsto;\": { \"codepoints\": [10236], \"characters\": \"\\u27FC\" },\n  \"&longrightarrow;\": { \"codepoints\": [10230], \"characters\": \"\\u27F6\" },\n  \"&LongRightArrow;\": { \"codepoints\": [10230], \"characters\": \"\\u27F6\" },\n  \"&Longrightarrow;\": { \"codepoints\": [10233], \"characters\": \"\\u27F9\" },\n  \"&looparrowleft;\": { \"codepoints\": [8619], \"characters\": \"\\u21AB\" },\n  \"&looparrowright;\": { \"codepoints\": [8620], \"characters\": \"\\u21AC\" },\n  \"&lopar;\": { \"codepoints\": [10629], \"characters\": \"\\u2985\" },\n  \"&Lopf;\": { \"codepoints\": [120131], \"characters\": \"\\uD835\\uDD43\" },\n  \"&lopf;\": { \"codepoints\": [120157], \"characters\": \"\\uD835\\uDD5D\" },\n  \"&loplus;\": { \"codepoints\": [10797], \"characters\": \"\\u2A2D\" },\n  \"&lotimes;\": { \"codepoints\": [10804], \"characters\": \"\\u2A34\" },\n  \"&lowast;\": { \"codepoints\": [8727], \"characters\": \"\\u2217\" },\n  \"&lowbar;\": { \"codepoints\": [95], \"characters\": \"\\u005F\" },\n  \"&LowerLeftArrow;\": { \"codepoints\": [8601], \"characters\": \"\\u2199\" },\n  \"&LowerRightArrow;\": { \"codepoints\": [8600], \"characters\": \"\\u2198\" },\n  \"&loz;\": { \"codepoints\": [9674], \"characters\": \"\\u25CA\" },\n  \"&lozenge;\": { \"codepoints\": [9674], \"characters\": \"\\u25CA\" },\n  \"&lozf;\": { \"codepoints\": [10731], \"characters\": \"\\u29EB\" },\n  \"&lpar;\": { \"codepoints\": [40], \"characters\": \"\\u0028\" },\n  \"&lparlt;\": { \"codepoints\": [10643], \"characters\": \"\\u2993\" },\n  \"&lrarr;\": { \"codepoints\": [8646], \"characters\": \"\\u21C6\" },\n  \"&lrcorner;\": { \"codepoints\": [8991], \"characters\": \"\\u231F\" },\n  \"&lrhar;\": { \"codepoints\": [8651], \"characters\": \"\\u21CB\" },\n  \"&lrhard;\": { \"codepoints\": [10605], \"characters\": \"\\u296D\" },\n  \"&lrm;\": { \"codepoints\": [8206], \"characters\": \"\\u200E\" },\n  \"&lrtri;\": { \"codepoints\": [8895], \"characters\": \"\\u22BF\" },\n  \"&lsaquo;\": { \"codepoints\": [8249], \"characters\": \"\\u2039\" },\n  \"&lscr;\": { \"codepoints\": [120001], \"characters\": \"\\uD835\\uDCC1\" },\n  \"&Lscr;\": { \"codepoints\": [8466], \"characters\": \"\\u2112\" },\n  \"&lsh;\": { \"codepoints\": [8624], \"characters\": \"\\u21B0\" },\n  \"&Lsh;\": { \"codepoints\": [8624], \"characters\": \"\\u21B0\" },\n  \"&lsim;\": { \"codepoints\": [8818], \"characters\": \"\\u2272\" },\n  \"&lsime;\": { \"codepoints\": [10893], \"characters\": \"\\u2A8D\" },\n  \"&lsimg;\": { \"codepoints\": [10895], \"characters\": \"\\u2A8F\" },\n  \"&lsqb;\": { \"codepoints\": [91], \"characters\": \"\\u005B\" },\n  \"&lsquo;\": { \"codepoints\": [8216], \"characters\": \"\\u2018\" },\n  \"&lsquor;\": { \"codepoints\": [8218], \"characters\": \"\\u201A\" },\n  \"&Lstrok;\": { \"codepoints\": [321], \"characters\": \"\\u0141\" },\n  \"&lstrok;\": { \"codepoints\": [322], \"characters\": \"\\u0142\" },\n  \"&ltcc;\": { \"codepoints\": [10918], \"characters\": \"\\u2AA6\" },\n  \"&ltcir;\": { \"codepoints\": [10873], \"characters\": \"\\u2A79\" },\n  \"&lt;\": { \"codepoints\": [60], \"characters\": \"\\u003C\" },\n  \"&lt\": { \"codepoints\": [60], \"characters\": \"\\u003C\" },\n  \"&LT;\": { \"codepoints\": [60], \"characters\": \"\\u003C\" },\n  \"&LT\": { \"codepoints\": [60], \"characters\": \"\\u003C\" },\n  \"&Lt;\": { \"codepoints\": [8810], \"characters\": \"\\u226A\" },\n  \"&ltdot;\": { \"codepoints\": [8918], \"characters\": \"\\u22D6\" },\n  \"&lthree;\": { \"codepoints\": [8907], \"characters\": \"\\u22CB\" },\n  \"&ltimes;\": { \"codepoints\": [8905], \"characters\": \"\\u22C9\" },\n  \"&ltlarr;\": { \"codepoints\": [10614], \"characters\": \"\\u2976\" },\n  \"&ltquest;\": { \"codepoints\": [10875], \"characters\": \"\\u2A7B\" },\n  \"&ltri;\": { \"codepoints\": [9667], \"characters\": \"\\u25C3\" },\n  \"&ltrie;\": { \"codepoints\": [8884], \"characters\": \"\\u22B4\" },\n  \"&ltrif;\": { \"codepoints\": [9666], \"characters\": \"\\u25C2\" },\n  \"&ltrPar;\": { \"codepoints\": [10646], \"characters\": \"\\u2996\" },\n  \"&lurdshar;\": { \"codepoints\": [10570], \"characters\": \"\\u294A\" },\n  \"&luruhar;\": { \"codepoints\": [10598], \"characters\": \"\\u2966\" },\n  \"&lvertneqq;\": { \"codepoints\": [8808, 65024], \"characters\": \"\\u2268\\uFE00\" },\n  \"&lvnE;\": { \"codepoints\": [8808, 65024], \"characters\": \"\\u2268\\uFE00\" },\n  \"&macr;\": { \"codepoints\": [175], \"characters\": \"\\u00AF\" },\n  \"&macr\": { \"codepoints\": [175], \"characters\": \"\\u00AF\" },\n  \"&male;\": { \"codepoints\": [9794], \"characters\": \"\\u2642\" },\n  \"&malt;\": { \"codepoints\": [10016], \"characters\": \"\\u2720\" },\n  \"&maltese;\": { \"codepoints\": [10016], \"characters\": \"\\u2720\" },\n  \"&Map;\": { \"codepoints\": [10501], \"characters\": \"\\u2905\" },\n  \"&map;\": { \"codepoints\": [8614], \"characters\": \"\\u21A6\" },\n  \"&mapsto;\": { \"codepoints\": [8614], \"characters\": \"\\u21A6\" },\n  \"&mapstodown;\": { \"codepoints\": [8615], \"characters\": \"\\u21A7\" },\n  \"&mapstoleft;\": { \"codepoints\": [8612], \"characters\": \"\\u21A4\" },\n  \"&mapstoup;\": { \"codepoints\": [8613], \"characters\": \"\\u21A5\" },\n  \"&marker;\": { \"codepoints\": [9646], \"characters\": \"\\u25AE\" },\n  \"&mcomma;\": { \"codepoints\": [10793], \"characters\": \"\\u2A29\" },\n  \"&Mcy;\": { \"codepoints\": [1052], \"characters\": \"\\u041C\" },\n  \"&mcy;\": { \"codepoints\": [1084], \"characters\": \"\\u043C\" },\n  \"&mdash;\": { \"codepoints\": [8212], \"characters\": \"\\u2014\" },\n  \"&mDDot;\": { \"codepoints\": [8762], \"characters\": \"\\u223A\" },\n  \"&measuredangle;\": { \"codepoints\": [8737], \"characters\": \"\\u2221\" },\n  \"&MediumSpace;\": { \"codepoints\": [8287], \"characters\": \"\\u205F\" },\n  \"&Mellintrf;\": { \"codepoints\": [8499], \"characters\": \"\\u2133\" },\n  \"&Mfr;\": { \"codepoints\": [120080], \"characters\": \"\\uD835\\uDD10\" },\n  \"&mfr;\": { \"codepoints\": [120106], \"characters\": \"\\uD835\\uDD2A\" },\n  \"&mho;\": { \"codepoints\": [8487], \"characters\": \"\\u2127\" },\n  \"&micro;\": { \"codepoints\": [181], \"characters\": \"\\u00B5\" },\n  \"&micro\": { \"codepoints\": [181], \"characters\": \"\\u00B5\" },\n  \"&midast;\": { \"codepoints\": [42], \"characters\": \"\\u002A\" },\n  \"&midcir;\": { \"codepoints\": [10992], \"characters\": \"\\u2AF0\" },\n  \"&mid;\": { \"codepoints\": [8739], \"characters\": \"\\u2223\" },\n  \"&middot;\": { \"codepoints\": [183], \"characters\": \"\\u00B7\" },\n  \"&middot\": { \"codepoints\": [183], \"characters\": \"\\u00B7\" },\n  \"&minusb;\": { \"codepoints\": [8863], \"characters\": \"\\u229F\" },\n  \"&minus;\": { \"codepoints\": [8722], \"characters\": \"\\u2212\" },\n  \"&minusd;\": { \"codepoints\": [8760], \"characters\": \"\\u2238\" },\n  \"&minusdu;\": { \"codepoints\": [10794], \"characters\": \"\\u2A2A\" },\n  \"&MinusPlus;\": { \"codepoints\": [8723], \"characters\": \"\\u2213\" },\n  \"&mlcp;\": { \"codepoints\": [10971], \"characters\": \"\\u2ADB\" },\n  \"&mldr;\": { \"codepoints\": [8230], \"characters\": \"\\u2026\" },\n  \"&mnplus;\": { \"codepoints\": [8723], \"characters\": \"\\u2213\" },\n  \"&models;\": { \"codepoints\": [8871], \"characters\": \"\\u22A7\" },\n  \"&Mopf;\": { \"codepoints\": [120132], \"characters\": \"\\uD835\\uDD44\" },\n  \"&mopf;\": { \"codepoints\": [120158], \"characters\": \"\\uD835\\uDD5E\" },\n  \"&mp;\": { \"codepoints\": [8723], \"characters\": \"\\u2213\" },\n  \"&mscr;\": { \"codepoints\": [120002], \"characters\": \"\\uD835\\uDCC2\" },\n  \"&Mscr;\": { \"codepoints\": [8499], \"characters\": \"\\u2133\" },\n  \"&mstpos;\": { \"codepoints\": [8766], \"characters\": \"\\u223E\" },\n  \"&Mu;\": { \"codepoints\": [924], \"characters\": \"\\u039C\" },\n  \"&mu;\": { \"codepoints\": [956], \"characters\": \"\\u03BC\" },\n  \"&multimap;\": { \"codepoints\": [8888], \"characters\": \"\\u22B8\" },\n  \"&mumap;\": { \"codepoints\": [8888], \"characters\": \"\\u22B8\" },\n  \"&nabla;\": { \"codepoints\": [8711], \"characters\": \"\\u2207\" },\n  \"&Nacute;\": { \"codepoints\": [323], \"characters\": \"\\u0143\" },\n  \"&nacute;\": { \"codepoints\": [324], \"characters\": \"\\u0144\" },\n  \"&nang;\": { \"codepoints\": [8736, 8402], \"characters\": \"\\u2220\\u20D2\" },\n  \"&nap;\": { \"codepoints\": [8777], \"characters\": \"\\u2249\" },\n  \"&napE;\": { \"codepoints\": [10864, 824], \"characters\": \"\\u2A70\\u0338\" },\n  \"&napid;\": { \"codepoints\": [8779, 824], \"characters\": \"\\u224B\\u0338\" },\n  \"&napos;\": { \"codepoints\": [329], \"characters\": \"\\u0149\" },\n  \"&napprox;\": { \"codepoints\": [8777], \"characters\": \"\\u2249\" },\n  \"&natural;\": { \"codepoints\": [9838], \"characters\": \"\\u266E\" },\n  \"&naturals;\": { \"codepoints\": [8469], \"characters\": \"\\u2115\" },\n  \"&natur;\": { \"codepoints\": [9838], \"characters\": \"\\u266E\" },\n  \"&nbsp;\": { \"codepoints\": [160], \"characters\": \"\\u00A0\" },\n  \"&nbsp\": { \"codepoints\": [160], \"characters\": \"\\u00A0\" },\n  \"&nbump;\": { \"codepoints\": [8782, 824], \"characters\": \"\\u224E\\u0338\" },\n  \"&nbumpe;\": { \"codepoints\": [8783, 824], \"characters\": \"\\u224F\\u0338\" },\n  \"&ncap;\": { \"codepoints\": [10819], \"characters\": \"\\u2A43\" },\n  \"&Ncaron;\": { \"codepoints\": [327], \"characters\": \"\\u0147\" },\n  \"&ncaron;\": { \"codepoints\": [328], \"characters\": \"\\u0148\" },\n  \"&Ncedil;\": { \"codepoints\": [325], \"characters\": \"\\u0145\" },\n  \"&ncedil;\": { \"codepoints\": [326], \"characters\": \"\\u0146\" },\n  \"&ncong;\": { \"codepoints\": [8775], \"characters\": \"\\u2247\" },\n  \"&ncongdot;\": { \"codepoints\": [10861, 824], \"characters\": \"\\u2A6D\\u0338\" },\n  \"&ncup;\": { \"codepoints\": [10818], \"characters\": \"\\u2A42\" },\n  \"&Ncy;\": { \"codepoints\": [1053], \"characters\": \"\\u041D\" },\n  \"&ncy;\": { \"codepoints\": [1085], \"characters\": \"\\u043D\" },\n  \"&ndash;\": { \"codepoints\": [8211], \"characters\": \"\\u2013\" },\n  \"&nearhk;\": { \"codepoints\": [10532], \"characters\": \"\\u2924\" },\n  \"&nearr;\": { \"codepoints\": [8599], \"characters\": \"\\u2197\" },\n  \"&neArr;\": { \"codepoints\": [8663], \"characters\": \"\\u21D7\" },\n  \"&nearrow;\": { \"codepoints\": [8599], \"characters\": \"\\u2197\" },\n  \"&ne;\": { \"codepoints\": [8800], \"characters\": \"\\u2260\" },\n  \"&nedot;\": { \"codepoints\": [8784, 824], \"characters\": \"\\u2250\\u0338\" },\n  \"&NegativeMediumSpace;\": { \"codepoints\": [8203], \"characters\": \"\\u200B\" },\n  \"&NegativeThickSpace;\": { \"codepoints\": [8203], \"characters\": \"\\u200B\" },\n  \"&NegativeThinSpace;\": { \"codepoints\": [8203], \"characters\": \"\\u200B\" },\n  \"&NegativeVeryThinSpace;\": { \"codepoints\": [8203], \"characters\": \"\\u200B\" },\n  \"&nequiv;\": { \"codepoints\": [8802], \"characters\": \"\\u2262\" },\n  \"&nesear;\": { \"codepoints\": [10536], \"characters\": \"\\u2928\" },\n  \"&nesim;\": { \"codepoints\": [8770, 824], \"characters\": \"\\u2242\\u0338\" },\n  \"&NestedGreaterGreater;\": { \"codepoints\": [8811], \"characters\": \"\\u226B\" },\n  \"&NestedLessLess;\": { \"codepoints\": [8810], \"characters\": \"\\u226A\" },\n  \"&NewLine;\": { \"codepoints\": [10], \"characters\": \"\\u000A\" },\n  \"&nexist;\": { \"codepoints\": [8708], \"characters\": \"\\u2204\" },\n  \"&nexists;\": { \"codepoints\": [8708], \"characters\": \"\\u2204\" },\n  \"&Nfr;\": { \"codepoints\": [120081], \"characters\": \"\\uD835\\uDD11\" },\n  \"&nfr;\": { \"codepoints\": [120107], \"characters\": \"\\uD835\\uDD2B\" },\n  \"&ngE;\": { \"codepoints\": [8807, 824], \"characters\": \"\\u2267\\u0338\" },\n  \"&nge;\": { \"codepoints\": [8817], \"characters\": \"\\u2271\" },\n  \"&ngeq;\": { \"codepoints\": [8817], \"characters\": \"\\u2271\" },\n  \"&ngeqq;\": { \"codepoints\": [8807, 824], \"characters\": \"\\u2267\\u0338\" },\n  \"&ngeqslant;\": { \"codepoints\": [10878, 824], \"characters\": \"\\u2A7E\\u0338\" },\n  \"&nges;\": { \"codepoints\": [10878, 824], \"characters\": \"\\u2A7E\\u0338\" },\n  \"&nGg;\": { \"codepoints\": [8921, 824], \"characters\": \"\\u22D9\\u0338\" },\n  \"&ngsim;\": { \"codepoints\": [8821], \"characters\": \"\\u2275\" },\n  \"&nGt;\": { \"codepoints\": [8811, 8402], \"characters\": \"\\u226B\\u20D2\" },\n  \"&ngt;\": { \"codepoints\": [8815], \"characters\": \"\\u226F\" },\n  \"&ngtr;\": { \"codepoints\": [8815], \"characters\": \"\\u226F\" },\n  \"&nGtv;\": { \"codepoints\": [8811, 824], \"characters\": \"\\u226B\\u0338\" },\n  \"&nharr;\": { \"codepoints\": [8622], \"characters\": \"\\u21AE\" },\n  \"&nhArr;\": { \"codepoints\": [8654], \"characters\": \"\\u21CE\" },\n  \"&nhpar;\": { \"codepoints\": [10994], \"characters\": \"\\u2AF2\" },\n  \"&ni;\": { \"codepoints\": [8715], \"characters\": \"\\u220B\" },\n  \"&nis;\": { \"codepoints\": [8956], \"characters\": \"\\u22FC\" },\n  \"&nisd;\": { \"codepoints\": [8954], \"characters\": \"\\u22FA\" },\n  \"&niv;\": { \"codepoints\": [8715], \"characters\": \"\\u220B\" },\n  \"&NJcy;\": { \"codepoints\": [1034], \"characters\": \"\\u040A\" },\n  \"&njcy;\": { \"codepoints\": [1114], \"characters\": \"\\u045A\" },\n  \"&nlarr;\": { \"codepoints\": [8602], \"characters\": \"\\u219A\" },\n  \"&nlArr;\": { \"codepoints\": [8653], \"characters\": \"\\u21CD\" },\n  \"&nldr;\": { \"codepoints\": [8229], \"characters\": \"\\u2025\" },\n  \"&nlE;\": { \"codepoints\": [8806, 824], \"characters\": \"\\u2266\\u0338\" },\n  \"&nle;\": { \"codepoints\": [8816], \"characters\": \"\\u2270\" },\n  \"&nleftarrow;\": { \"codepoints\": [8602], \"characters\": \"\\u219A\" },\n  \"&nLeftarrow;\": { \"codepoints\": [8653], \"characters\": \"\\u21CD\" },\n  \"&nleftrightarrow;\": { \"codepoints\": [8622], \"characters\": \"\\u21AE\" },\n  \"&nLeftrightarrow;\": { \"codepoints\": [8654], \"characters\": \"\\u21CE\" },\n  \"&nleq;\": { \"codepoints\": [8816], \"characters\": \"\\u2270\" },\n  \"&nleqq;\": { \"codepoints\": [8806, 824], \"characters\": \"\\u2266\\u0338\" },\n  \"&nleqslant;\": { \"codepoints\": [10877, 824], \"characters\": \"\\u2A7D\\u0338\" },\n  \"&nles;\": { \"codepoints\": [10877, 824], \"characters\": \"\\u2A7D\\u0338\" },\n  \"&nless;\": { \"codepoints\": [8814], \"characters\": \"\\u226E\" },\n  \"&nLl;\": { \"codepoints\": [8920, 824], \"characters\": \"\\u22D8\\u0338\" },\n  \"&nlsim;\": { \"codepoints\": [8820], \"characters\": \"\\u2274\" },\n  \"&nLt;\": { \"codepoints\": [8810, 8402], \"characters\": \"\\u226A\\u20D2\" },\n  \"&nlt;\": { \"codepoints\": [8814], \"characters\": \"\\u226E\" },\n  \"&nltri;\": { \"codepoints\": [8938], \"characters\": \"\\u22EA\" },\n  \"&nltrie;\": { \"codepoints\": [8940], \"characters\": \"\\u22EC\" },\n  \"&nLtv;\": { \"codepoints\": [8810, 824], \"characters\": \"\\u226A\\u0338\" },\n  \"&nmid;\": { \"codepoints\": [8740], \"characters\": \"\\u2224\" },\n  \"&NoBreak;\": { \"codepoints\": [8288], \"characters\": \"\\u2060\" },\n  \"&NonBreakingSpace;\": { \"codepoints\": [160], \"characters\": \"\\u00A0\" },\n  \"&nopf;\": { \"codepoints\": [120159], \"characters\": \"\\uD835\\uDD5F\" },\n  \"&Nopf;\": { \"codepoints\": [8469], \"characters\": \"\\u2115\" },\n  \"&Not;\": { \"codepoints\": [10988], \"characters\": \"\\u2AEC\" },\n  \"&not;\": { \"codepoints\": [172], \"characters\": \"\\u00AC\" },\n  \"&not\": { \"codepoints\": [172], \"characters\": \"\\u00AC\" },\n  \"&NotCongruent;\": { \"codepoints\": [8802], \"characters\": \"\\u2262\" },\n  \"&NotCupCap;\": { \"codepoints\": [8813], \"characters\": \"\\u226D\" },\n  \"&NotDoubleVerticalBar;\": { \"codepoints\": [8742], \"characters\": \"\\u2226\" },\n  \"&NotElement;\": { \"codepoints\": [8713], \"characters\": \"\\u2209\" },\n  \"&NotEqual;\": { \"codepoints\": [8800], \"characters\": \"\\u2260\" },\n  \"&NotEqualTilde;\": { \"codepoints\": [8770, 824], \"characters\": \"\\u2242\\u0338\" },\n  \"&NotExists;\": { \"codepoints\": [8708], \"characters\": \"\\u2204\" },\n  \"&NotGreater;\": { \"codepoints\": [8815], \"characters\": \"\\u226F\" },\n  \"&NotGreaterEqual;\": { \"codepoints\": [8817], \"characters\": \"\\u2271\" },\n  \"&NotGreaterFullEqual;\": { \"codepoints\": [8807, 824], \"characters\": \"\\u2267\\u0338\" },\n  \"&NotGreaterGreater;\": { \"codepoints\": [8811, 824], \"characters\": \"\\u226B\\u0338\" },\n  \"&NotGreaterLess;\": { \"codepoints\": [8825], \"characters\": \"\\u2279\" },\n  \"&NotGreaterSlantEqual;\": { \"codepoints\": [10878, 824], \"characters\": \"\\u2A7E\\u0338\" },\n  \"&NotGreaterTilde;\": { \"codepoints\": [8821], \"characters\": \"\\u2275\" },\n  \"&NotHumpDownHump;\": { \"codepoints\": [8782, 824], \"characters\": \"\\u224E\\u0338\" },\n  \"&NotHumpEqual;\": { \"codepoints\": [8783, 824], \"characters\": \"\\u224F\\u0338\" },\n  \"&notin;\": { \"codepoints\": [8713], \"characters\": \"\\u2209\" },\n  \"&notindot;\": { \"codepoints\": [8949, 824], \"characters\": \"\\u22F5\\u0338\" },\n  \"&notinE;\": { \"codepoints\": [8953, 824], \"characters\": \"\\u22F9\\u0338\" },\n  \"&notinva;\": { \"codepoints\": [8713], \"characters\": \"\\u2209\" },\n  \"&notinvb;\": { \"codepoints\": [8951], \"characters\": \"\\u22F7\" },\n  \"&notinvc;\": { \"codepoints\": [8950], \"characters\": \"\\u22F6\" },\n  \"&NotLeftTriangleBar;\": { \"codepoints\": [10703, 824], \"characters\": \"\\u29CF\\u0338\" },\n  \"&NotLeftTriangle;\": { \"codepoints\": [8938], \"characters\": \"\\u22EA\" },\n  \"&NotLeftTriangleEqual;\": { \"codepoints\": [8940], \"characters\": \"\\u22EC\" },\n  \"&NotLess;\": { \"codepoints\": [8814], \"characters\": \"\\u226E\" },\n  \"&NotLessEqual;\": { \"codepoints\": [8816], \"characters\": \"\\u2270\" },\n  \"&NotLessGreater;\": { \"codepoints\": [8824], \"characters\": \"\\u2278\" },\n  \"&NotLessLess;\": { \"codepoints\": [8810, 824], \"characters\": \"\\u226A\\u0338\" },\n  \"&NotLessSlantEqual;\": { \"codepoints\": [10877, 824], \"characters\": \"\\u2A7D\\u0338\" },\n  \"&NotLessTilde;\": { \"codepoints\": [8820], \"characters\": \"\\u2274\" },\n  \"&NotNestedGreaterGreater;\": { \"codepoints\": [10914, 824], \"characters\": \"\\u2AA2\\u0338\" },\n  \"&NotNestedLessLess;\": { \"codepoints\": [10913, 824], \"characters\": \"\\u2AA1\\u0338\" },\n  \"&notni;\": { \"codepoints\": [8716], \"characters\": \"\\u220C\" },\n  \"&notniva;\": { \"codepoints\": [8716], \"characters\": \"\\u220C\" },\n  \"&notnivb;\": { \"codepoints\": [8958], \"characters\": \"\\u22FE\" },\n  \"&notnivc;\": { \"codepoints\": [8957], \"characters\": \"\\u22FD\" },\n  \"&NotPrecedes;\": { \"codepoints\": [8832], \"characters\": \"\\u2280\" },\n  \"&NotPrecedesEqual;\": { \"codepoints\": [10927, 824], \"characters\": \"\\u2AAF\\u0338\" },\n  \"&NotPrecedesSlantEqual;\": { \"codepoints\": [8928], \"characters\": \"\\u22E0\" },\n  \"&NotReverseElement;\": { \"codepoints\": [8716], \"characters\": \"\\u220C\" },\n  \"&NotRightTriangleBar;\": { \"codepoints\": [10704, 824], \"characters\": \"\\u29D0\\u0338\" },\n  \"&NotRightTriangle;\": { \"codepoints\": [8939], \"characters\": \"\\u22EB\" },\n  \"&NotRightTriangleEqual;\": { \"codepoints\": [8941], \"characters\": \"\\u22ED\" },\n  \"&NotSquareSubset;\": { \"codepoints\": [8847, 824], \"characters\": \"\\u228F\\u0338\" },\n  \"&NotSquareSubsetEqual;\": { \"codepoints\": [8930], \"characters\": \"\\u22E2\" },\n  \"&NotSquareSuperset;\": { \"codepoints\": [8848, 824], \"characters\": \"\\u2290\\u0338\" },\n  \"&NotSquareSupersetEqual;\": { \"codepoints\": [8931], \"characters\": \"\\u22E3\" },\n  \"&NotSubset;\": { \"codepoints\": [8834, 8402], \"characters\": \"\\u2282\\u20D2\" },\n  \"&NotSubsetEqual;\": { \"codepoints\": [8840], \"characters\": \"\\u2288\" },\n  \"&NotSucceeds;\": { \"codepoints\": [8833], \"characters\": \"\\u2281\" },\n  \"&NotSucceedsEqual;\": { \"codepoints\": [10928, 824], \"characters\": \"\\u2AB0\\u0338\" },\n  \"&NotSucceedsSlantEqual;\": { \"codepoints\": [8929], \"characters\": \"\\u22E1\" },\n  \"&NotSucceedsTilde;\": { \"codepoints\": [8831, 824], \"characters\": \"\\u227F\\u0338\" },\n  \"&NotSuperset;\": { \"codepoints\": [8835, 8402], \"characters\": \"\\u2283\\u20D2\" },\n  \"&NotSupersetEqual;\": { \"codepoints\": [8841], \"characters\": \"\\u2289\" },\n  \"&NotTilde;\": { \"codepoints\": [8769], \"characters\": \"\\u2241\" },\n  \"&NotTildeEqual;\": { \"codepoints\": [8772], \"characters\": \"\\u2244\" },\n  \"&NotTildeFullEqual;\": { \"codepoints\": [8775], \"characters\": \"\\u2247\" },\n  \"&NotTildeTilde;\": { \"codepoints\": [8777], \"characters\": \"\\u2249\" },\n  \"&NotVerticalBar;\": { \"codepoints\": [8740], \"characters\": \"\\u2224\" },\n  \"&nparallel;\": { \"codepoints\": [8742], \"characters\": \"\\u2226\" },\n  \"&npar;\": { \"codepoints\": [8742], \"characters\": \"\\u2226\" },\n  \"&nparsl;\": { \"codepoints\": [11005, 8421], \"characters\": \"\\u2AFD\\u20E5\" },\n  \"&npart;\": { \"codepoints\": [8706, 824], \"characters\": \"\\u2202\\u0338\" },\n  \"&npolint;\": { \"codepoints\": [10772], \"characters\": \"\\u2A14\" },\n  \"&npr;\": { \"codepoints\": [8832], \"characters\": \"\\u2280\" },\n  \"&nprcue;\": { \"codepoints\": [8928], \"characters\": \"\\u22E0\" },\n  \"&nprec;\": { \"codepoints\": [8832], \"characters\": \"\\u2280\" },\n  \"&npreceq;\": { \"codepoints\": [10927, 824], \"characters\": \"\\u2AAF\\u0338\" },\n  \"&npre;\": { \"codepoints\": [10927, 824], \"characters\": \"\\u2AAF\\u0338\" },\n  \"&nrarrc;\": { \"codepoints\": [10547, 824], \"characters\": \"\\u2933\\u0338\" },\n  \"&nrarr;\": { \"codepoints\": [8603], \"characters\": \"\\u219B\" },\n  \"&nrArr;\": { \"codepoints\": [8655], \"characters\": \"\\u21CF\" },\n  \"&nrarrw;\": { \"codepoints\": [8605, 824], \"characters\": \"\\u219D\\u0338\" },\n  \"&nrightarrow;\": { \"codepoints\": [8603], \"characters\": \"\\u219B\" },\n  \"&nRightarrow;\": { \"codepoints\": [8655], \"characters\": \"\\u21CF\" },\n  \"&nrtri;\": { \"codepoints\": [8939], \"characters\": \"\\u22EB\" },\n  \"&nrtrie;\": { \"codepoints\": [8941], \"characters\": \"\\u22ED\" },\n  \"&nsc;\": { \"codepoints\": [8833], \"characters\": \"\\u2281\" },\n  \"&nsccue;\": { \"codepoints\": [8929], \"characters\": \"\\u22E1\" },\n  \"&nsce;\": { \"codepoints\": [10928, 824], \"characters\": \"\\u2AB0\\u0338\" },\n  \"&Nscr;\": { \"codepoints\": [119977], \"characters\": \"\\uD835\\uDCA9\" },\n  \"&nscr;\": { \"codepoints\": [120003], \"characters\": \"\\uD835\\uDCC3\" },\n  \"&nshortmid;\": { \"codepoints\": [8740], \"characters\": \"\\u2224\" },\n  \"&nshortparallel;\": { \"codepoints\": [8742], \"characters\": \"\\u2226\" },\n  \"&nsim;\": { \"codepoints\": [8769], \"characters\": \"\\u2241\" },\n  \"&nsime;\": { \"codepoints\": [8772], \"characters\": \"\\u2244\" },\n  \"&nsimeq;\": { \"codepoints\": [8772], \"characters\": \"\\u2244\" },\n  \"&nsmid;\": { \"codepoints\": [8740], \"characters\": \"\\u2224\" },\n  \"&nspar;\": { \"codepoints\": [8742], \"characters\": \"\\u2226\" },\n  \"&nsqsube;\": { \"codepoints\": [8930], \"characters\": \"\\u22E2\" },\n  \"&nsqsupe;\": { \"codepoints\": [8931], \"characters\": \"\\u22E3\" },\n  \"&nsub;\": { \"codepoints\": [8836], \"characters\": \"\\u2284\" },\n  \"&nsubE;\": { \"codepoints\": [10949, 824], \"characters\": \"\\u2AC5\\u0338\" },\n  \"&nsube;\": { \"codepoints\": [8840], \"characters\": \"\\u2288\" },\n  \"&nsubset;\": { \"codepoints\": [8834, 8402], \"characters\": \"\\u2282\\u20D2\" },\n  \"&nsubseteq;\": { \"codepoints\": [8840], \"characters\": \"\\u2288\" },\n  \"&nsubseteqq;\": { \"codepoints\": [10949, 824], \"characters\": \"\\u2AC5\\u0338\" },\n  \"&nsucc;\": { \"codepoints\": [8833], \"characters\": \"\\u2281\" },\n  \"&nsucceq;\": { \"codepoints\": [10928, 824], \"characters\": \"\\u2AB0\\u0338\" },\n  \"&nsup;\": { \"codepoints\": [8837], \"characters\": \"\\u2285\" },\n  \"&nsupE;\": { \"codepoints\": [10950, 824], \"characters\": \"\\u2AC6\\u0338\" },\n  \"&nsupe;\": { \"codepoints\": [8841], \"characters\": \"\\u2289\" },\n  \"&nsupset;\": { \"codepoints\": [8835, 8402], \"characters\": \"\\u2283\\u20D2\" },\n  \"&nsupseteq;\": { \"codepoints\": [8841], \"characters\": \"\\u2289\" },\n  \"&nsupseteqq;\": { \"codepoints\": [10950, 824], \"characters\": \"\\u2AC6\\u0338\" },\n  \"&ntgl;\": { \"codepoints\": [8825], \"characters\": \"\\u2279\" },\n  \"&Ntilde;\": { \"codepoints\": [209], \"characters\": \"\\u00D1\" },\n  \"&Ntilde\": { \"codepoints\": [209], \"characters\": \"\\u00D1\" },\n  \"&ntilde;\": { \"codepoints\": [241], \"characters\": \"\\u00F1\" },\n  \"&ntilde\": { \"codepoints\": [241], \"characters\": \"\\u00F1\" },\n  \"&ntlg;\": { \"codepoints\": [8824], \"characters\": \"\\u2278\" },\n  \"&ntriangleleft;\": { \"codepoints\": [8938], \"characters\": \"\\u22EA\" },\n  \"&ntrianglelefteq;\": { \"codepoints\": [8940], \"characters\": \"\\u22EC\" },\n  \"&ntriangleright;\": { \"codepoints\": [8939], \"characters\": \"\\u22EB\" },\n  \"&ntrianglerighteq;\": { \"codepoints\": [8941], \"characters\": \"\\u22ED\" },\n  \"&Nu;\": { \"codepoints\": [925], \"characters\": \"\\u039D\" },\n  \"&nu;\": { \"codepoints\": [957], \"characters\": \"\\u03BD\" },\n  \"&num;\": { \"codepoints\": [35], \"characters\": \"\\u0023\" },\n  \"&numero;\": { \"codepoints\": [8470], \"characters\": \"\\u2116\" },\n  \"&numsp;\": { \"codepoints\": [8199], \"characters\": \"\\u2007\" },\n  \"&nvap;\": { \"codepoints\": [8781, 8402], \"characters\": \"\\u224D\\u20D2\" },\n  \"&nvdash;\": { \"codepoints\": [8876], \"characters\": \"\\u22AC\" },\n  \"&nvDash;\": { \"codepoints\": [8877], \"characters\": \"\\u22AD\" },\n  \"&nVdash;\": { \"codepoints\": [8878], \"characters\": \"\\u22AE\" },\n  \"&nVDash;\": { \"codepoints\": [8879], \"characters\": \"\\u22AF\" },\n  \"&nvge;\": { \"codepoints\": [8805, 8402], \"characters\": \"\\u2265\\u20D2\" },\n  \"&nvgt;\": { \"codepoints\": [62, 8402], \"characters\": \"\\u003E\\u20D2\" },\n  \"&nvHarr;\": { \"codepoints\": [10500], \"characters\": \"\\u2904\" },\n  \"&nvinfin;\": { \"codepoints\": [10718], \"characters\": \"\\u29DE\" },\n  \"&nvlArr;\": { \"codepoints\": [10498], \"characters\": \"\\u2902\" },\n  \"&nvle;\": { \"codepoints\": [8804, 8402], \"characters\": \"\\u2264\\u20D2\" },\n  \"&nvlt;\": { \"codepoints\": [60, 8402], \"characters\": \"\\u003C\\u20D2\" },\n  \"&nvltrie;\": { \"codepoints\": [8884, 8402], \"characters\": \"\\u22B4\\u20D2\" },\n  \"&nvrArr;\": { \"codepoints\": [10499], \"characters\": \"\\u2903\" },\n  \"&nvrtrie;\": { \"codepoints\": [8885, 8402], \"characters\": \"\\u22B5\\u20D2\" },\n  \"&nvsim;\": { \"codepoints\": [8764, 8402], \"characters\": \"\\u223C\\u20D2\" },\n  \"&nwarhk;\": { \"codepoints\": [10531], \"characters\": \"\\u2923\" },\n  \"&nwarr;\": { \"codepoints\": [8598], \"characters\": \"\\u2196\" },\n  \"&nwArr;\": { \"codepoints\": [8662], \"characters\": \"\\u21D6\" },\n  \"&nwarrow;\": { \"codepoints\": [8598], \"characters\": \"\\u2196\" },\n  \"&nwnear;\": { \"codepoints\": [10535], \"characters\": \"\\u2927\" },\n  \"&Oacute;\": { \"codepoints\": [211], \"characters\": \"\\u00D3\" },\n  \"&Oacute\": { \"codepoints\": [211], \"characters\": \"\\u00D3\" },\n  \"&oacute;\": { \"codepoints\": [243], \"characters\": \"\\u00F3\" },\n  \"&oacute\": { \"codepoints\": [243], \"characters\": \"\\u00F3\" },\n  \"&oast;\": { \"codepoints\": [8859], \"characters\": \"\\u229B\" },\n  \"&Ocirc;\": { \"codepoints\": [212], \"characters\": \"\\u00D4\" },\n  \"&Ocirc\": { \"codepoints\": [212], \"characters\": \"\\u00D4\" },\n  \"&ocirc;\": { \"codepoints\": [244], \"characters\": \"\\u00F4\" },\n  \"&ocirc\": { \"codepoints\": [244], \"characters\": \"\\u00F4\" },\n  \"&ocir;\": { \"codepoints\": [8858], \"characters\": \"\\u229A\" },\n  \"&Ocy;\": { \"codepoints\": [1054], \"characters\": \"\\u041E\" },\n  \"&ocy;\": { \"codepoints\": [1086], \"characters\": \"\\u043E\" },\n  \"&odash;\": { \"codepoints\": [8861], \"characters\": \"\\u229D\" },\n  \"&Odblac;\": { \"codepoints\": [336], \"characters\": \"\\u0150\" },\n  \"&odblac;\": { \"codepoints\": [337], \"characters\": \"\\u0151\" },\n  \"&odiv;\": { \"codepoints\": [10808], \"characters\": \"\\u2A38\" },\n  \"&odot;\": { \"codepoints\": [8857], \"characters\": \"\\u2299\" },\n  \"&odsold;\": { \"codepoints\": [10684], \"characters\": \"\\u29BC\" },\n  \"&OElig;\": { \"codepoints\": [338], \"characters\": \"\\u0152\" },\n  \"&oelig;\": { \"codepoints\": [339], \"characters\": \"\\u0153\" },\n  \"&ofcir;\": { \"codepoints\": [10687], \"characters\": \"\\u29BF\" },\n  \"&Ofr;\": { \"codepoints\": [120082], \"characters\": \"\\uD835\\uDD12\" },\n  \"&ofr;\": { \"codepoints\": [120108], \"characters\": \"\\uD835\\uDD2C\" },\n  \"&ogon;\": { \"codepoints\": [731], \"characters\": \"\\u02DB\" },\n  \"&Ograve;\": { \"codepoints\": [210], \"characters\": \"\\u00D2\" },\n  \"&Ograve\": { \"codepoints\": [210], \"characters\": \"\\u00D2\" },\n  \"&ograve;\": { \"codepoints\": [242], \"characters\": \"\\u00F2\" },\n  \"&ograve\": { \"codepoints\": [242], \"characters\": \"\\u00F2\" },\n  \"&ogt;\": { \"codepoints\": [10689], \"characters\": \"\\u29C1\" },\n  \"&ohbar;\": { \"codepoints\": [10677], \"characters\": \"\\u29B5\" },\n  \"&ohm;\": { \"codepoints\": [937], \"characters\": \"\\u03A9\" },\n  \"&oint;\": { \"codepoints\": [8750], \"characters\": \"\\u222E\" },\n  \"&olarr;\": { \"codepoints\": [8634], \"characters\": \"\\u21BA\" },\n  \"&olcir;\": { \"codepoints\": [10686], \"characters\": \"\\u29BE\" },\n  \"&olcross;\": { \"codepoints\": [10683], \"characters\": \"\\u29BB\" },\n  \"&oline;\": { \"codepoints\": [8254], \"characters\": \"\\u203E\" },\n  \"&olt;\": { \"codepoints\": [10688], \"characters\": \"\\u29C0\" },\n  \"&Omacr;\": { \"codepoints\": [332], \"characters\": \"\\u014C\" },\n  \"&omacr;\": { \"codepoints\": [333], \"characters\": \"\\u014D\" },\n  \"&Omega;\": { \"codepoints\": [937], \"characters\": \"\\u03A9\" },\n  \"&omega;\": { \"codepoints\": [969], \"characters\": \"\\u03C9\" },\n  \"&Omicron;\": { \"codepoints\": [927], \"characters\": \"\\u039F\" },\n  \"&omicron;\": { \"codepoints\": [959], \"characters\": \"\\u03BF\" },\n  \"&omid;\": { \"codepoints\": [10678], \"characters\": \"\\u29B6\" },\n  \"&ominus;\": { \"codepoints\": [8854], \"characters\": \"\\u2296\" },\n  \"&Oopf;\": { \"codepoints\": [120134], \"characters\": \"\\uD835\\uDD46\" },\n  \"&oopf;\": { \"codepoints\": [120160], \"characters\": \"\\uD835\\uDD60\" },\n  \"&opar;\": { \"codepoints\": [10679], \"characters\": \"\\u29B7\" },\n  \"&OpenCurlyDoubleQuote;\": { \"codepoints\": [8220], \"characters\": \"\\u201C\" },\n  \"&OpenCurlyQuote;\": { \"codepoints\": [8216], \"characters\": \"\\u2018\" },\n  \"&operp;\": { \"codepoints\": [10681], \"characters\": \"\\u29B9\" },\n  \"&oplus;\": { \"codepoints\": [8853], \"characters\": \"\\u2295\" },\n  \"&orarr;\": { \"codepoints\": [8635], \"characters\": \"\\u21BB\" },\n  \"&Or;\": { \"codepoints\": [10836], \"characters\": \"\\u2A54\" },\n  \"&or;\": { \"codepoints\": [8744], \"characters\": \"\\u2228\" },\n  \"&ord;\": { \"codepoints\": [10845], \"characters\": \"\\u2A5D\" },\n  \"&order;\": { \"codepoints\": [8500], \"characters\": \"\\u2134\" },\n  \"&orderof;\": { \"codepoints\": [8500], \"characters\": \"\\u2134\" },\n  \"&ordf;\": { \"codepoints\": [170], \"characters\": \"\\u00AA\" },\n  \"&ordf\": { \"codepoints\": [170], \"characters\": \"\\u00AA\" },\n  \"&ordm;\": { \"codepoints\": [186], \"characters\": \"\\u00BA\" },\n  \"&ordm\": { \"codepoints\": [186], \"characters\": \"\\u00BA\" },\n  \"&origof;\": { \"codepoints\": [8886], \"characters\": \"\\u22B6\" },\n  \"&oror;\": { \"codepoints\": [10838], \"characters\": \"\\u2A56\" },\n  \"&orslope;\": { \"codepoints\": [10839], \"characters\": \"\\u2A57\" },\n  \"&orv;\": { \"codepoints\": [10843], \"characters\": \"\\u2A5B\" },\n  \"&oS;\": { \"codepoints\": [9416], \"characters\": \"\\u24C8\" },\n  \"&Oscr;\": { \"codepoints\": [119978], \"characters\": \"\\uD835\\uDCAA\" },\n  \"&oscr;\": { \"codepoints\": [8500], \"characters\": \"\\u2134\" },\n  \"&Oslash;\": { \"codepoints\": [216], \"characters\": \"\\u00D8\" },\n  \"&Oslash\": { \"codepoints\": [216], \"characters\": \"\\u00D8\" },\n  \"&oslash;\": { \"codepoints\": [248], \"characters\": \"\\u00F8\" },\n  \"&oslash\": { \"codepoints\": [248], \"characters\": \"\\u00F8\" },\n  \"&osol;\": { \"codepoints\": [8856], \"characters\": \"\\u2298\" },\n  \"&Otilde;\": { \"codepoints\": [213], \"characters\": \"\\u00D5\" },\n  \"&Otilde\": { \"codepoints\": [213], \"characters\": \"\\u00D5\" },\n  \"&otilde;\": { \"codepoints\": [245], \"characters\": \"\\u00F5\" },\n  \"&otilde\": { \"codepoints\": [245], \"characters\": \"\\u00F5\" },\n  \"&otimesas;\": { \"codepoints\": [10806], \"characters\": \"\\u2A36\" },\n  \"&Otimes;\": { \"codepoints\": [10807], \"characters\": \"\\u2A37\" },\n  \"&otimes;\": { \"codepoints\": [8855], \"characters\": \"\\u2297\" },\n  \"&Ouml;\": { \"codepoints\": [214], \"characters\": \"\\u00D6\" },\n  \"&Ouml\": { \"codepoints\": [214], \"characters\": \"\\u00D6\" },\n  \"&ouml;\": { \"codepoints\": [246], \"characters\": \"\\u00F6\" },\n  \"&ouml\": { \"codepoints\": [246], \"characters\": \"\\u00F6\" },\n  \"&ovbar;\": { \"codepoints\": [9021], \"characters\": \"\\u233D\" },\n  \"&OverBar;\": { \"codepoints\": [8254], \"characters\": \"\\u203E\" },\n  \"&OverBrace;\": { \"codepoints\": [9182], \"characters\": \"\\u23DE\" },\n  \"&OverBracket;\": { \"codepoints\": [9140], \"characters\": \"\\u23B4\" },\n  \"&OverParenthesis;\": { \"codepoints\": [9180], \"characters\": \"\\u23DC\" },\n  \"&para;\": { \"codepoints\": [182], \"characters\": \"\\u00B6\" },\n  \"&para\": { \"codepoints\": [182], \"characters\": \"\\u00B6\" },\n  \"&parallel;\": { \"codepoints\": [8741], \"characters\": \"\\u2225\" },\n  \"&par;\": { \"codepoints\": [8741], \"characters\": \"\\u2225\" },\n  \"&parsim;\": { \"codepoints\": [10995], \"characters\": \"\\u2AF3\" },\n  \"&parsl;\": { \"codepoints\": [11005], \"characters\": \"\\u2AFD\" },\n  \"&part;\": { \"codepoints\": [8706], \"characters\": \"\\u2202\" },\n  \"&PartialD;\": { \"codepoints\": [8706], \"characters\": \"\\u2202\" },\n  \"&Pcy;\": { \"codepoints\": [1055], \"characters\": \"\\u041F\" },\n  \"&pcy;\": { \"codepoints\": [1087], \"characters\": \"\\u043F\" },\n  \"&percnt;\": { \"codepoints\": [37], \"characters\": \"\\u0025\" },\n  \"&period;\": { \"codepoints\": [46], \"characters\": \"\\u002E\" },\n  \"&permil;\": { \"codepoints\": [8240], \"characters\": \"\\u2030\" },\n  \"&perp;\": { \"codepoints\": [8869], \"characters\": \"\\u22A5\" },\n  \"&pertenk;\": { \"codepoints\": [8241], \"characters\": \"\\u2031\" },\n  \"&Pfr;\": { \"codepoints\": [120083], \"characters\": \"\\uD835\\uDD13\" },\n  \"&pfr;\": { \"codepoints\": [120109], \"characters\": \"\\uD835\\uDD2D\" },\n  \"&Phi;\": { \"codepoints\": [934], \"characters\": \"\\u03A6\" },\n  \"&phi;\": { \"codepoints\": [966], \"characters\": \"\\u03C6\" },\n  \"&phiv;\": { \"codepoints\": [981], \"characters\": \"\\u03D5\" },\n  \"&phmmat;\": { \"codepoints\": [8499], \"characters\": \"\\u2133\" },\n  \"&phone;\": { \"codepoints\": [9742], \"characters\": \"\\u260E\" },\n  \"&Pi;\": { \"codepoints\": [928], \"characters\": \"\\u03A0\" },\n  \"&pi;\": { \"codepoints\": [960], \"characters\": \"\\u03C0\" },\n  \"&pitchfork;\": { \"codepoints\": [8916], \"characters\": \"\\u22D4\" },\n  \"&piv;\": { \"codepoints\": [982], \"characters\": \"\\u03D6\" },\n  \"&planck;\": { \"codepoints\": [8463], \"characters\": \"\\u210F\" },\n  \"&planckh;\": { \"codepoints\": [8462], \"characters\": \"\\u210E\" },\n  \"&plankv;\": { \"codepoints\": [8463], \"characters\": \"\\u210F\" },\n  \"&plusacir;\": { \"codepoints\": [10787], \"characters\": \"\\u2A23\" },\n  \"&plusb;\": { \"codepoints\": [8862], \"characters\": \"\\u229E\" },\n  \"&pluscir;\": { \"codepoints\": [10786], \"characters\": \"\\u2A22\" },\n  \"&plus;\": { \"codepoints\": [43], \"characters\": \"\\u002B\" },\n  \"&plusdo;\": { \"codepoints\": [8724], \"characters\": \"\\u2214\" },\n  \"&plusdu;\": { \"codepoints\": [10789], \"characters\": \"\\u2A25\" },\n  \"&pluse;\": { \"codepoints\": [10866], \"characters\": \"\\u2A72\" },\n  \"&PlusMinus;\": { \"codepoints\": [177], \"characters\": \"\\u00B1\" },\n  \"&plusmn;\": { \"codepoints\": [177], \"characters\": \"\\u00B1\" },\n  \"&plusmn\": { \"codepoints\": [177], \"characters\": \"\\u00B1\" },\n  \"&plussim;\": { \"codepoints\": [10790], \"characters\": \"\\u2A26\" },\n  \"&plustwo;\": { \"codepoints\": [10791], \"characters\": \"\\u2A27\" },\n  \"&pm;\": { \"codepoints\": [177], \"characters\": \"\\u00B1\" },\n  \"&Poincareplane;\": { \"codepoints\": [8460], \"characters\": \"\\u210C\" },\n  \"&pointint;\": { \"codepoints\": [10773], \"characters\": \"\\u2A15\" },\n  \"&popf;\": { \"codepoints\": [120161], \"characters\": \"\\uD835\\uDD61\" },\n  \"&Popf;\": { \"codepoints\": [8473], \"characters\": \"\\u2119\" },\n  \"&pound;\": { \"codepoints\": [163], \"characters\": \"\\u00A3\" },\n  \"&pound\": { \"codepoints\": [163], \"characters\": \"\\u00A3\" },\n  \"&prap;\": { \"codepoints\": [10935], \"characters\": \"\\u2AB7\" },\n  \"&Pr;\": { \"codepoints\": [10939], \"characters\": \"\\u2ABB\" },\n  \"&pr;\": { \"codepoints\": [8826], \"characters\": \"\\u227A\" },\n  \"&prcue;\": { \"codepoints\": [8828], \"characters\": \"\\u227C\" },\n  \"&precapprox;\": { \"codepoints\": [10935], \"characters\": \"\\u2AB7\" },\n  \"&prec;\": { \"codepoints\": [8826], \"characters\": \"\\u227A\" },\n  \"&preccurlyeq;\": { \"codepoints\": [8828], \"characters\": \"\\u227C\" },\n  \"&Precedes;\": { \"codepoints\": [8826], \"characters\": \"\\u227A\" },\n  \"&PrecedesEqual;\": { \"codepoints\": [10927], \"characters\": \"\\u2AAF\" },\n  \"&PrecedesSlantEqual;\": { \"codepoints\": [8828], \"characters\": \"\\u227C\" },\n  \"&PrecedesTilde;\": { \"codepoints\": [8830], \"characters\": \"\\u227E\" },\n  \"&preceq;\": { \"codepoints\": [10927], \"characters\": \"\\u2AAF\" },\n  \"&precnapprox;\": { \"codepoints\": [10937], \"characters\": \"\\u2AB9\" },\n  \"&precneqq;\": { \"codepoints\": [10933], \"characters\": \"\\u2AB5\" },\n  \"&precnsim;\": { \"codepoints\": [8936], \"characters\": \"\\u22E8\" },\n  \"&pre;\": { \"codepoints\": [10927], \"characters\": \"\\u2AAF\" },\n  \"&prE;\": { \"codepoints\": [10931], \"characters\": \"\\u2AB3\" },\n  \"&precsim;\": { \"codepoints\": [8830], \"characters\": \"\\u227E\" },\n  \"&prime;\": { \"codepoints\": [8242], \"characters\": \"\\u2032\" },\n  \"&Prime;\": { \"codepoints\": [8243], \"characters\": \"\\u2033\" },\n  \"&primes;\": { \"codepoints\": [8473], \"characters\": \"\\u2119\" },\n  \"&prnap;\": { \"codepoints\": [10937], \"characters\": \"\\u2AB9\" },\n  \"&prnE;\": { \"codepoints\": [10933], \"characters\": \"\\u2AB5\" },\n  \"&prnsim;\": { \"codepoints\": [8936], \"characters\": \"\\u22E8\" },\n  \"&prod;\": { \"codepoints\": [8719], \"characters\": \"\\u220F\" },\n  \"&Product;\": { \"codepoints\": [8719], \"characters\": \"\\u220F\" },\n  \"&profalar;\": { \"codepoints\": [9006], \"characters\": \"\\u232E\" },\n  \"&profline;\": { \"codepoints\": [8978], \"characters\": \"\\u2312\" },\n  \"&profsurf;\": { \"codepoints\": [8979], \"characters\": \"\\u2313\" },\n  \"&prop;\": { \"codepoints\": [8733], \"characters\": \"\\u221D\" },\n  \"&Proportional;\": { \"codepoints\": [8733], \"characters\": \"\\u221D\" },\n  \"&Proportion;\": { \"codepoints\": [8759], \"characters\": \"\\u2237\" },\n  \"&propto;\": { \"codepoints\": [8733], \"characters\": \"\\u221D\" },\n  \"&prsim;\": { \"codepoints\": [8830], \"characters\": \"\\u227E\" },\n  \"&prurel;\": { \"codepoints\": [8880], \"characters\": \"\\u22B0\" },\n  \"&Pscr;\": { \"codepoints\": [119979], \"characters\": \"\\uD835\\uDCAB\" },\n  \"&pscr;\": { \"codepoints\": [120005], \"characters\": \"\\uD835\\uDCC5\" },\n  \"&Psi;\": { \"codepoints\": [936], \"characters\": \"\\u03A8\" },\n  \"&psi;\": { \"codepoints\": [968], \"characters\": \"\\u03C8\" },\n  \"&puncsp;\": { \"codepoints\": [8200], \"characters\": \"\\u2008\" },\n  \"&Qfr;\": { \"codepoints\": [120084], \"characters\": \"\\uD835\\uDD14\" },\n  \"&qfr;\": { \"codepoints\": [120110], \"characters\": \"\\uD835\\uDD2E\" },\n  \"&qint;\": { \"codepoints\": [10764], \"characters\": \"\\u2A0C\" },\n  \"&qopf;\": { \"codepoints\": [120162], \"characters\": \"\\uD835\\uDD62\" },\n  \"&Qopf;\": { \"codepoints\": [8474], \"characters\": \"\\u211A\" },\n  \"&qprime;\": { \"codepoints\": [8279], \"characters\": \"\\u2057\" },\n  \"&Qscr;\": { \"codepoints\": [119980], \"characters\": \"\\uD835\\uDCAC\" },\n  \"&qscr;\": { \"codepoints\": [120006], \"characters\": \"\\uD835\\uDCC6\" },\n  \"&quaternions;\": { \"codepoints\": [8461], \"characters\": \"\\u210D\" },\n  \"&quatint;\": { \"codepoints\": [10774], \"characters\": \"\\u2A16\" },\n  \"&quest;\": { \"codepoints\": [63], \"characters\": \"\\u003F\" },\n  \"&questeq;\": { \"codepoints\": [8799], \"characters\": \"\\u225F\" },\n  \"&quot;\": { \"codepoints\": [34], \"characters\": \"\\u0022\" },\n  \"&quot\": { \"codepoints\": [34], \"characters\": \"\\u0022\" },\n  \"&QUOT;\": { \"codepoints\": [34], \"characters\": \"\\u0022\" },\n  \"&QUOT\": { \"codepoints\": [34], \"characters\": \"\\u0022\" },\n  \"&rAarr;\": { \"codepoints\": [8667], \"characters\": \"\\u21DB\" },\n  \"&race;\": { \"codepoints\": [8765, 817], \"characters\": \"\\u223D\\u0331\" },\n  \"&Racute;\": { \"codepoints\": [340], \"characters\": \"\\u0154\" },\n  \"&racute;\": { \"codepoints\": [341], \"characters\": \"\\u0155\" },\n  \"&radic;\": { \"codepoints\": [8730], \"characters\": \"\\u221A\" },\n  \"&raemptyv;\": { \"codepoints\": [10675], \"characters\": \"\\u29B3\" },\n  \"&rang;\": { \"codepoints\": [10217], \"characters\": \"\\u27E9\" },\n  \"&Rang;\": { \"codepoints\": [10219], \"characters\": \"\\u27EB\" },\n  \"&rangd;\": { \"codepoints\": [10642], \"characters\": \"\\u2992\" },\n  \"&range;\": { \"codepoints\": [10661], \"characters\": \"\\u29A5\" },\n  \"&rangle;\": { \"codepoints\": [10217], \"characters\": \"\\u27E9\" },\n  \"&raquo;\": { \"codepoints\": [187], \"characters\": \"\\u00BB\" },\n  \"&raquo\": { \"codepoints\": [187], \"characters\": \"\\u00BB\" },\n  \"&rarrap;\": { \"codepoints\": [10613], \"characters\": \"\\u2975\" },\n  \"&rarrb;\": { \"codepoints\": [8677], \"characters\": \"\\u21E5\" },\n  \"&rarrbfs;\": { \"codepoints\": [10528], \"characters\": \"\\u2920\" },\n  \"&rarrc;\": { \"codepoints\": [10547], \"characters\": \"\\u2933\" },\n  \"&rarr;\": { \"codepoints\": [8594], \"characters\": \"\\u2192\" },\n  \"&Rarr;\": { \"codepoints\": [8608], \"characters\": \"\\u21A0\" },\n  \"&rArr;\": { \"codepoints\": [8658], \"characters\": \"\\u21D2\" },\n  \"&rarrfs;\": { \"codepoints\": [10526], \"characters\": \"\\u291E\" },\n  \"&rarrhk;\": { \"codepoints\": [8618], \"characters\": \"\\u21AA\" },\n  \"&rarrlp;\": { \"codepoints\": [8620], \"characters\": \"\\u21AC\" },\n  \"&rarrpl;\": { \"codepoints\": [10565], \"characters\": \"\\u2945\" },\n  \"&rarrsim;\": { \"codepoints\": [10612], \"characters\": \"\\u2974\" },\n  \"&Rarrtl;\": { \"codepoints\": [10518], \"characters\": \"\\u2916\" },\n  \"&rarrtl;\": { \"codepoints\": [8611], \"characters\": \"\\u21A3\" },\n  \"&rarrw;\": { \"codepoints\": [8605], \"characters\": \"\\u219D\" },\n  \"&ratail;\": { \"codepoints\": [10522], \"characters\": \"\\u291A\" },\n  \"&rAtail;\": { \"codepoints\": [10524], \"characters\": \"\\u291C\" },\n  \"&ratio;\": { \"codepoints\": [8758], \"characters\": \"\\u2236\" },\n  \"&rationals;\": { \"codepoints\": [8474], \"characters\": \"\\u211A\" },\n  \"&rbarr;\": { \"codepoints\": [10509], \"characters\": \"\\u290D\" },\n  \"&rBarr;\": { \"codepoints\": [10511], \"characters\": \"\\u290F\" },\n  \"&RBarr;\": { \"codepoints\": [10512], \"characters\": \"\\u2910\" },\n  \"&rbbrk;\": { \"codepoints\": [10099], \"characters\": \"\\u2773\" },\n  \"&rbrace;\": { \"codepoints\": [125], \"characters\": \"\\u007D\" },\n  \"&rbrack;\": { \"codepoints\": [93], \"characters\": \"\\u005D\" },\n  \"&rbrke;\": { \"codepoints\": [10636], \"characters\": \"\\u298C\" },\n  \"&rbrksld;\": { \"codepoints\": [10638], \"characters\": \"\\u298E\" },\n  \"&rbrkslu;\": { \"codepoints\": [10640], \"characters\": \"\\u2990\" },\n  \"&Rcaron;\": { \"codepoints\": [344], \"characters\": \"\\u0158\" },\n  \"&rcaron;\": { \"codepoints\": [345], \"characters\": \"\\u0159\" },\n  \"&Rcedil;\": { \"codepoints\": [342], \"characters\": \"\\u0156\" },\n  \"&rcedil;\": { \"codepoints\": [343], \"characters\": \"\\u0157\" },\n  \"&rceil;\": { \"codepoints\": [8969], \"characters\": \"\\u2309\" },\n  \"&rcub;\": { \"codepoints\": [125], \"characters\": \"\\u007D\" },\n  \"&Rcy;\": { \"codepoints\": [1056], \"characters\": \"\\u0420\" },\n  \"&rcy;\": { \"codepoints\": [1088], \"characters\": \"\\u0440\" },\n  \"&rdca;\": { \"codepoints\": [10551], \"characters\": \"\\u2937\" },\n  \"&rdldhar;\": { \"codepoints\": [10601], \"characters\": \"\\u2969\" },\n  \"&rdquo;\": { \"codepoints\": [8221], \"characters\": \"\\u201D\" },\n  \"&rdquor;\": { \"codepoints\": [8221], \"characters\": \"\\u201D\" },\n  \"&rdsh;\": { \"codepoints\": [8627], \"characters\": \"\\u21B3\" },\n  \"&real;\": { \"codepoints\": [8476], \"characters\": \"\\u211C\" },\n  \"&realine;\": { \"codepoints\": [8475], \"characters\": \"\\u211B\" },\n  \"&realpart;\": { \"codepoints\": [8476], \"characters\": \"\\u211C\" },\n  \"&reals;\": { \"codepoints\": [8477], \"characters\": \"\\u211D\" },\n  \"&Re;\": { \"codepoints\": [8476], \"characters\": \"\\u211C\" },\n  \"&rect;\": { \"codepoints\": [9645], \"characters\": \"\\u25AD\" },\n  \"&reg;\": { \"codepoints\": [174], \"characters\": \"\\u00AE\" },\n  \"&reg\": { \"codepoints\": [174], \"characters\": \"\\u00AE\" },\n  \"&REG;\": { \"codepoints\": [174], \"characters\": \"\\u00AE\" },\n  \"&REG\": { \"codepoints\": [174], \"characters\": \"\\u00AE\" },\n  \"&ReverseElement;\": { \"codepoints\": [8715], \"characters\": \"\\u220B\" },\n  \"&ReverseEquilibrium;\": { \"codepoints\": [8651], \"characters\": \"\\u21CB\" },\n  \"&ReverseUpEquilibrium;\": { \"codepoints\": [10607], \"characters\": \"\\u296F\" },\n  \"&rfisht;\": { \"codepoints\": [10621], \"characters\": \"\\u297D\" },\n  \"&rfloor;\": { \"codepoints\": [8971], \"characters\": \"\\u230B\" },\n  \"&rfr;\": { \"codepoints\": [120111], \"characters\": \"\\uD835\\uDD2F\" },\n  \"&Rfr;\": { \"codepoints\": [8476], \"characters\": \"\\u211C\" },\n  \"&rHar;\": { \"codepoints\": [10596], \"characters\": \"\\u2964\" },\n  \"&rhard;\": { \"codepoints\": [8641], \"characters\": \"\\u21C1\" },\n  \"&rharu;\": { \"codepoints\": [8640], \"characters\": \"\\u21C0\" },\n  \"&rharul;\": { \"codepoints\": [10604], \"characters\": \"\\u296C\" },\n  \"&Rho;\": { \"codepoints\": [929], \"characters\": \"\\u03A1\" },\n  \"&rho;\": { \"codepoints\": [961], \"characters\": \"\\u03C1\" },\n  \"&rhov;\": { \"codepoints\": [1009], \"characters\": \"\\u03F1\" },\n  \"&RightAngleBracket;\": { \"codepoints\": [10217], \"characters\": \"\\u27E9\" },\n  \"&RightArrowBar;\": { \"codepoints\": [8677], \"characters\": \"\\u21E5\" },\n  \"&rightarrow;\": { \"codepoints\": [8594], \"characters\": \"\\u2192\" },\n  \"&RightArrow;\": { \"codepoints\": [8594], \"characters\": \"\\u2192\" },\n  \"&Rightarrow;\": { \"codepoints\": [8658], \"characters\": \"\\u21D2\" },\n  \"&RightArrowLeftArrow;\": { \"codepoints\": [8644], \"characters\": \"\\u21C4\" },\n  \"&rightarrowtail;\": { \"codepoints\": [8611], \"characters\": \"\\u21A3\" },\n  \"&RightCeiling;\": { \"codepoints\": [8969], \"characters\": \"\\u2309\" },\n  \"&RightDoubleBracket;\": { \"codepoints\": [10215], \"characters\": \"\\u27E7\" },\n  \"&RightDownTeeVector;\": { \"codepoints\": [10589], \"characters\": \"\\u295D\" },\n  \"&RightDownVectorBar;\": { \"codepoints\": [10581], \"characters\": \"\\u2955\" },\n  \"&RightDownVector;\": { \"codepoints\": [8642], \"characters\": \"\\u21C2\" },\n  \"&RightFloor;\": { \"codepoints\": [8971], \"characters\": \"\\u230B\" },\n  \"&rightharpoondown;\": { \"codepoints\": [8641], \"characters\": \"\\u21C1\" },\n  \"&rightharpoonup;\": { \"codepoints\": [8640], \"characters\": \"\\u21C0\" },\n  \"&rightleftarrows;\": { \"codepoints\": [8644], \"characters\": \"\\u21C4\" },\n  \"&rightleftharpoons;\": { \"codepoints\": [8652], \"characters\": \"\\u21CC\" },\n  \"&rightrightarrows;\": { \"codepoints\": [8649], \"characters\": \"\\u21C9\" },\n  \"&rightsquigarrow;\": { \"codepoints\": [8605], \"characters\": \"\\u219D\" },\n  \"&RightTeeArrow;\": { \"codepoints\": [8614], \"characters\": \"\\u21A6\" },\n  \"&RightTee;\": { \"codepoints\": [8866], \"characters\": \"\\u22A2\" },\n  \"&RightTeeVector;\": { \"codepoints\": [10587], \"characters\": \"\\u295B\" },\n  \"&rightthreetimes;\": { \"codepoints\": [8908], \"characters\": \"\\u22CC\" },\n  \"&RightTriangleBar;\": { \"codepoints\": [10704], \"characters\": \"\\u29D0\" },\n  \"&RightTriangle;\": { \"codepoints\": [8883], \"characters\": \"\\u22B3\" },\n  \"&RightTriangleEqual;\": { \"codepoints\": [8885], \"characters\": \"\\u22B5\" },\n  \"&RightUpDownVector;\": { \"codepoints\": [10575], \"characters\": \"\\u294F\" },\n  \"&RightUpTeeVector;\": { \"codepoints\": [10588], \"characters\": \"\\u295C\" },\n  \"&RightUpVectorBar;\": { \"codepoints\": [10580], \"characters\": \"\\u2954\" },\n  \"&RightUpVector;\": { \"codepoints\": [8638], \"characters\": \"\\u21BE\" },\n  \"&RightVectorBar;\": { \"codepoints\": [10579], \"characters\": \"\\u2953\" },\n  \"&RightVector;\": { \"codepoints\": [8640], \"characters\": \"\\u21C0\" },\n  \"&ring;\": { \"codepoints\": [730], \"characters\": \"\\u02DA\" },\n  \"&risingdotseq;\": { \"codepoints\": [8787], \"characters\": \"\\u2253\" },\n  \"&rlarr;\": { \"codepoints\": [8644], \"characters\": \"\\u21C4\" },\n  \"&rlhar;\": { \"codepoints\": [8652], \"characters\": \"\\u21CC\" },\n  \"&rlm;\": { \"codepoints\": [8207], \"characters\": \"\\u200F\" },\n  \"&rmoustache;\": { \"codepoints\": [9137], \"characters\": \"\\u23B1\" },\n  \"&rmoust;\": { \"codepoints\": [9137], \"characters\": \"\\u23B1\" },\n  \"&rnmid;\": { \"codepoints\": [10990], \"characters\": \"\\u2AEE\" },\n  \"&roang;\": { \"codepoints\": [10221], \"characters\": \"\\u27ED\" },\n  \"&roarr;\": { \"codepoints\": [8702], \"characters\": \"\\u21FE\" },\n  \"&robrk;\": { \"codepoints\": [10215], \"characters\": \"\\u27E7\" },\n  \"&ropar;\": { \"codepoints\": [10630], \"characters\": \"\\u2986\" },\n  \"&ropf;\": { \"codepoints\": [120163], \"characters\": \"\\uD835\\uDD63\" },\n  \"&Ropf;\": { \"codepoints\": [8477], \"characters\": \"\\u211D\" },\n  \"&roplus;\": { \"codepoints\": [10798], \"characters\": \"\\u2A2E\" },\n  \"&rotimes;\": { \"codepoints\": [10805], \"characters\": \"\\u2A35\" },\n  \"&RoundImplies;\": { \"codepoints\": [10608], \"characters\": \"\\u2970\" },\n  \"&rpar;\": { \"codepoints\": [41], \"characters\": \"\\u0029\" },\n  \"&rpargt;\": { \"codepoints\": [10644], \"characters\": \"\\u2994\" },\n  \"&rppolint;\": { \"codepoints\": [10770], \"characters\": \"\\u2A12\" },\n  \"&rrarr;\": { \"codepoints\": [8649], \"characters\": \"\\u21C9\" },\n  \"&Rrightarrow;\": { \"codepoints\": [8667], \"characters\": \"\\u21DB\" },\n  \"&rsaquo;\": { \"codepoints\": [8250], \"characters\": \"\\u203A\" },\n  \"&rscr;\": { \"codepoints\": [120007], \"characters\": \"\\uD835\\uDCC7\" },\n  \"&Rscr;\": { \"codepoints\": [8475], \"characters\": \"\\u211B\" },\n  \"&rsh;\": { \"codepoints\": [8625], \"characters\": \"\\u21B1\" },\n  \"&Rsh;\": { \"codepoints\": [8625], \"characters\": \"\\u21B1\" },\n  \"&rsqb;\": { \"codepoints\": [93], \"characters\": \"\\u005D\" },\n  \"&rsquo;\": { \"codepoints\": [8217], \"characters\": \"\\u2019\" },\n  \"&rsquor;\": { \"codepoints\": [8217], \"characters\": \"\\u2019\" },\n  \"&rthree;\": { \"codepoints\": [8908], \"characters\": \"\\u22CC\" },\n  \"&rtimes;\": { \"codepoints\": [8906], \"characters\": \"\\u22CA\" },\n  \"&rtri;\": { \"codepoints\": [9657], \"characters\": \"\\u25B9\" },\n  \"&rtrie;\": { \"codepoints\": [8885], \"characters\": \"\\u22B5\" },\n  \"&rtrif;\": { \"codepoints\": [9656], \"characters\": \"\\u25B8\" },\n  \"&rtriltri;\": { \"codepoints\": [10702], \"characters\": \"\\u29CE\" },\n  \"&RuleDelayed;\": { \"codepoints\": [10740], \"characters\": \"\\u29F4\" },\n  \"&ruluhar;\": { \"codepoints\": [10600], \"characters\": \"\\u2968\" },\n  \"&rx;\": { \"codepoints\": [8478], \"characters\": \"\\u211E\" },\n  \"&Sacute;\": { \"codepoints\": [346], \"characters\": \"\\u015A\" },\n  \"&sacute;\": { \"codepoints\": [347], \"characters\": \"\\u015B\" },\n  \"&sbquo;\": { \"codepoints\": [8218], \"characters\": \"\\u201A\" },\n  \"&scap;\": { \"codepoints\": [10936], \"characters\": \"\\u2AB8\" },\n  \"&Scaron;\": { \"codepoints\": [352], \"characters\": \"\\u0160\" },\n  \"&scaron;\": { \"codepoints\": [353], \"characters\": \"\\u0161\" },\n  \"&Sc;\": { \"codepoints\": [10940], \"characters\": \"\\u2ABC\" },\n  \"&sc;\": { \"codepoints\": [8827], \"characters\": \"\\u227B\" },\n  \"&sccue;\": { \"codepoints\": [8829], \"characters\": \"\\u227D\" },\n  \"&sce;\": { \"codepoints\": [10928], \"characters\": \"\\u2AB0\" },\n  \"&scE;\": { \"codepoints\": [10932], \"characters\": \"\\u2AB4\" },\n  \"&Scedil;\": { \"codepoints\": [350], \"characters\": \"\\u015E\" },\n  \"&scedil;\": { \"codepoints\": [351], \"characters\": \"\\u015F\" },\n  \"&Scirc;\": { \"codepoints\": [348], \"characters\": \"\\u015C\" },\n  \"&scirc;\": { \"codepoints\": [349], \"characters\": \"\\u015D\" },\n  \"&scnap;\": { \"codepoints\": [10938], \"characters\": \"\\u2ABA\" },\n  \"&scnE;\": { \"codepoints\": [10934], \"characters\": \"\\u2AB6\" },\n  \"&scnsim;\": { \"codepoints\": [8937], \"characters\": \"\\u22E9\" },\n  \"&scpolint;\": { \"codepoints\": [10771], \"characters\": \"\\u2A13\" },\n  \"&scsim;\": { \"codepoints\": [8831], \"characters\": \"\\u227F\" },\n  \"&Scy;\": { \"codepoints\": [1057], \"characters\": \"\\u0421\" },\n  \"&scy;\": { \"codepoints\": [1089], \"characters\": \"\\u0441\" },\n  \"&sdotb;\": { \"codepoints\": [8865], \"characters\": \"\\u22A1\" },\n  \"&sdot;\": { \"codepoints\": [8901], \"characters\": \"\\u22C5\" },\n  \"&sdote;\": { \"codepoints\": [10854], \"characters\": \"\\u2A66\" },\n  \"&searhk;\": { \"codepoints\": [10533], \"characters\": \"\\u2925\" },\n  \"&searr;\": { \"codepoints\": [8600], \"characters\": \"\\u2198\" },\n  \"&seArr;\": { \"codepoints\": [8664], \"characters\": \"\\u21D8\" },\n  \"&searrow;\": { \"codepoints\": [8600], \"characters\": \"\\u2198\" },\n  \"&sect;\": { \"codepoints\": [167], \"characters\": \"\\u00A7\" },\n  \"&sect\": { \"codepoints\": [167], \"characters\": \"\\u00A7\" },\n  \"&semi;\": { \"codepoints\": [59], \"characters\": \"\\u003B\" },\n  \"&seswar;\": { \"codepoints\": [10537], \"characters\": \"\\u2929\" },\n  \"&setminus;\": { \"codepoints\": [8726], \"characters\": \"\\u2216\" },\n  \"&setmn;\": { \"codepoints\": [8726], \"characters\": \"\\u2216\" },\n  \"&sext;\": { \"codepoints\": [10038], \"characters\": \"\\u2736\" },\n  \"&Sfr;\": { \"codepoints\": [120086], \"characters\": \"\\uD835\\uDD16\" },\n  \"&sfr;\": { \"codepoints\": [120112], \"characters\": \"\\uD835\\uDD30\" },\n  \"&sfrown;\": { \"codepoints\": [8994], \"characters\": \"\\u2322\" },\n  \"&sharp;\": { \"codepoints\": [9839], \"characters\": \"\\u266F\" },\n  \"&SHCHcy;\": { \"codepoints\": [1065], \"characters\": \"\\u0429\" },\n  \"&shchcy;\": { \"codepoints\": [1097], \"characters\": \"\\u0449\" },\n  \"&SHcy;\": { \"codepoints\": [1064], \"characters\": \"\\u0428\" },\n  \"&shcy;\": { \"codepoints\": [1096], \"characters\": \"\\u0448\" },\n  \"&ShortDownArrow;\": { \"codepoints\": [8595], \"characters\": \"\\u2193\" },\n  \"&ShortLeftArrow;\": { \"codepoints\": [8592], \"characters\": \"\\u2190\" },\n  \"&shortmid;\": { \"codepoints\": [8739], \"characters\": \"\\u2223\" },\n  \"&shortparallel;\": { \"codepoints\": [8741], \"characters\": \"\\u2225\" },\n  \"&ShortRightArrow;\": { \"codepoints\": [8594], \"characters\": \"\\u2192\" },\n  \"&ShortUpArrow;\": { \"codepoints\": [8593], \"characters\": \"\\u2191\" },\n  \"&shy;\": { \"codepoints\": [173], \"characters\": \"\\u00AD\" },\n  \"&shy\": { \"codepoints\": [173], \"characters\": \"\\u00AD\" },\n  \"&Sigma;\": { \"codepoints\": [931], \"characters\": \"\\u03A3\" },\n  \"&sigma;\": { \"codepoints\": [963], \"characters\": \"\\u03C3\" },\n  \"&sigmaf;\": { \"codepoints\": [962], \"characters\": \"\\u03C2\" },\n  \"&sigmav;\": { \"codepoints\": [962], \"characters\": \"\\u03C2\" },\n  \"&sim;\": { \"codepoints\": [8764], \"characters\": \"\\u223C\" },\n  \"&simdot;\": { \"codepoints\": [10858], \"characters\": \"\\u2A6A\" },\n  \"&sime;\": { \"codepoints\": [8771], \"characters\": \"\\u2243\" },\n  \"&simeq;\": { \"codepoints\": [8771], \"characters\": \"\\u2243\" },\n  \"&simg;\": { \"codepoints\": [10910], \"characters\": \"\\u2A9E\" },\n  \"&simgE;\": { \"codepoints\": [10912], \"characters\": \"\\u2AA0\" },\n  \"&siml;\": { \"codepoints\": [10909], \"characters\": \"\\u2A9D\" },\n  \"&simlE;\": { \"codepoints\": [10911], \"characters\": \"\\u2A9F\" },\n  \"&simne;\": { \"codepoints\": [8774], \"characters\": \"\\u2246\" },\n  \"&simplus;\": { \"codepoints\": [10788], \"characters\": \"\\u2A24\" },\n  \"&simrarr;\": { \"codepoints\": [10610], \"characters\": \"\\u2972\" },\n  \"&slarr;\": { \"codepoints\": [8592], \"characters\": \"\\u2190\" },\n  \"&SmallCircle;\": { \"codepoints\": [8728], \"characters\": \"\\u2218\" },\n  \"&smallsetminus;\": { \"codepoints\": [8726], \"characters\": \"\\u2216\" },\n  \"&smashp;\": { \"codepoints\": [10803], \"characters\": \"\\u2A33\" },\n  \"&smeparsl;\": { \"codepoints\": [10724], \"characters\": \"\\u29E4\" },\n  \"&smid;\": { \"codepoints\": [8739], \"characters\": \"\\u2223\" },\n  \"&smile;\": { \"codepoints\": [8995], \"characters\": \"\\u2323\" },\n  \"&smt;\": { \"codepoints\": [10922], \"characters\": \"\\u2AAA\" },\n  \"&smte;\": { \"codepoints\": [10924], \"characters\": \"\\u2AAC\" },\n  \"&smtes;\": { \"codepoints\": [10924, 65024], \"characters\": \"\\u2AAC\\uFE00\" },\n  \"&SOFTcy;\": { \"codepoints\": [1068], \"characters\": \"\\u042C\" },\n  \"&softcy;\": { \"codepoints\": [1100], \"characters\": \"\\u044C\" },\n  \"&solbar;\": { \"codepoints\": [9023], \"characters\": \"\\u233F\" },\n  \"&solb;\": { \"codepoints\": [10692], \"characters\": \"\\u29C4\" },\n  \"&sol;\": { \"codepoints\": [47], \"characters\": \"\\u002F\" },\n  \"&Sopf;\": { \"codepoints\": [120138], \"characters\": \"\\uD835\\uDD4A\" },\n  \"&sopf;\": { \"codepoints\": [120164], \"characters\": \"\\uD835\\uDD64\" },\n  \"&spades;\": { \"codepoints\": [9824], \"characters\": \"\\u2660\" },\n  \"&spadesuit;\": { \"codepoints\": [9824], \"characters\": \"\\u2660\" },\n  \"&spar;\": { \"codepoints\": [8741], \"characters\": \"\\u2225\" },\n  \"&sqcap;\": { \"codepoints\": [8851], \"characters\": \"\\u2293\" },\n  \"&sqcaps;\": { \"codepoints\": [8851, 65024], \"characters\": \"\\u2293\\uFE00\" },\n  \"&sqcup;\": { \"codepoints\": [8852], \"characters\": \"\\u2294\" },\n  \"&sqcups;\": { \"codepoints\": [8852, 65024], \"characters\": \"\\u2294\\uFE00\" },\n  \"&Sqrt;\": { \"codepoints\": [8730], \"characters\": \"\\u221A\" },\n  \"&sqsub;\": { \"codepoints\": [8847], \"characters\": \"\\u228F\" },\n  \"&sqsube;\": { \"codepoints\": [8849], \"characters\": \"\\u2291\" },\n  \"&sqsubset;\": { \"codepoints\": [8847], \"characters\": \"\\u228F\" },\n  \"&sqsubseteq;\": { \"codepoints\": [8849], \"characters\": \"\\u2291\" },\n  \"&sqsup;\": { \"codepoints\": [8848], \"characters\": \"\\u2290\" },\n  \"&sqsupe;\": { \"codepoints\": [8850], \"characters\": \"\\u2292\" },\n  \"&sqsupset;\": { \"codepoints\": [8848], \"characters\": \"\\u2290\" },\n  \"&sqsupseteq;\": { \"codepoints\": [8850], \"characters\": \"\\u2292\" },\n  \"&square;\": { \"codepoints\": [9633], \"characters\": \"\\u25A1\" },\n  \"&Square;\": { \"codepoints\": [9633], \"characters\": \"\\u25A1\" },\n  \"&SquareIntersection;\": { \"codepoints\": [8851], \"characters\": \"\\u2293\" },\n  \"&SquareSubset;\": { \"codepoints\": [8847], \"characters\": \"\\u228F\" },\n  \"&SquareSubsetEqual;\": { \"codepoints\": [8849], \"characters\": \"\\u2291\" },\n  \"&SquareSuperset;\": { \"codepoints\": [8848], \"characters\": \"\\u2290\" },\n  \"&SquareSupersetEqual;\": { \"codepoints\": [8850], \"characters\": \"\\u2292\" },\n  \"&SquareUnion;\": { \"codepoints\": [8852], \"characters\": \"\\u2294\" },\n  \"&squarf;\": { \"codepoints\": [9642], \"characters\": \"\\u25AA\" },\n  \"&squ;\": { \"codepoints\": [9633], \"characters\": \"\\u25A1\" },\n  \"&squf;\": { \"codepoints\": [9642], \"characters\": \"\\u25AA\" },\n  \"&srarr;\": { \"codepoints\": [8594], \"characters\": \"\\u2192\" },\n  \"&Sscr;\": { \"codepoints\": [119982], \"characters\": \"\\uD835\\uDCAE\" },\n  \"&sscr;\": { \"codepoints\": [120008], \"characters\": \"\\uD835\\uDCC8\" },\n  \"&ssetmn;\": { \"codepoints\": [8726], \"characters\": \"\\u2216\" },\n  \"&ssmile;\": { \"codepoints\": [8995], \"characters\": \"\\u2323\" },\n  \"&sstarf;\": { \"codepoints\": [8902], \"characters\": \"\\u22C6\" },\n  \"&Star;\": { \"codepoints\": [8902], \"characters\": \"\\u22C6\" },\n  \"&star;\": { \"codepoints\": [9734], \"characters\": \"\\u2606\" },\n  \"&starf;\": { \"codepoints\": [9733], \"characters\": \"\\u2605\" },\n  \"&straightepsilon;\": { \"codepoints\": [1013], \"characters\": \"\\u03F5\" },\n  \"&straightphi;\": { \"codepoints\": [981], \"characters\": \"\\u03D5\" },\n  \"&strns;\": { \"codepoints\": [175], \"characters\": \"\\u00AF\" },\n  \"&sub;\": { \"codepoints\": [8834], \"characters\": \"\\u2282\" },\n  \"&Sub;\": { \"codepoints\": [8912], \"characters\": \"\\u22D0\" },\n  \"&subdot;\": { \"codepoints\": [10941], \"characters\": \"\\u2ABD\" },\n  \"&subE;\": { \"codepoints\": [10949], \"characters\": \"\\u2AC5\" },\n  \"&sube;\": { \"codepoints\": [8838], \"characters\": \"\\u2286\" },\n  \"&subedot;\": { \"codepoints\": [10947], \"characters\": \"\\u2AC3\" },\n  \"&submult;\": { \"codepoints\": [10945], \"characters\": \"\\u2AC1\" },\n  \"&subnE;\": { \"codepoints\": [10955], \"characters\": \"\\u2ACB\" },\n  \"&subne;\": { \"codepoints\": [8842], \"characters\": \"\\u228A\" },\n  \"&subplus;\": { \"codepoints\": [10943], \"characters\": \"\\u2ABF\" },\n  \"&subrarr;\": { \"codepoints\": [10617], \"characters\": \"\\u2979\" },\n  \"&subset;\": { \"codepoints\": [8834], \"characters\": \"\\u2282\" },\n  \"&Subset;\": { \"codepoints\": [8912], \"characters\": \"\\u22D0\" },\n  \"&subseteq;\": { \"codepoints\": [8838], \"characters\": \"\\u2286\" },\n  \"&subseteqq;\": { \"codepoints\": [10949], \"characters\": \"\\u2AC5\" },\n  \"&SubsetEqual;\": { \"codepoints\": [8838], \"characters\": \"\\u2286\" },\n  \"&subsetneq;\": { \"codepoints\": [8842], \"characters\": \"\\u228A\" },\n  \"&subsetneqq;\": { \"codepoints\": [10955], \"characters\": \"\\u2ACB\" },\n  \"&subsim;\": { \"codepoints\": [10951], \"characters\": \"\\u2AC7\" },\n  \"&subsub;\": { \"codepoints\": [10965], \"characters\": \"\\u2AD5\" },\n  \"&subsup;\": { \"codepoints\": [10963], \"characters\": \"\\u2AD3\" },\n  \"&succapprox;\": { \"codepoints\": [10936], \"characters\": \"\\u2AB8\" },\n  \"&succ;\": { \"codepoints\": [8827], \"characters\": \"\\u227B\" },\n  \"&succcurlyeq;\": { \"codepoints\": [8829], \"characters\": \"\\u227D\" },\n  \"&Succeeds;\": { \"codepoints\": [8827], \"characters\": \"\\u227B\" },\n  \"&SucceedsEqual;\": { \"codepoints\": [10928], \"characters\": \"\\u2AB0\" },\n  \"&SucceedsSlantEqual;\": { \"codepoints\": [8829], \"characters\": \"\\u227D\" },\n  \"&SucceedsTilde;\": { \"codepoints\": [8831], \"characters\": \"\\u227F\" },\n  \"&succeq;\": { \"codepoints\": [10928], \"characters\": \"\\u2AB0\" },\n  \"&succnapprox;\": { \"codepoints\": [10938], \"characters\": \"\\u2ABA\" },\n  \"&succneqq;\": { \"codepoints\": [10934], \"characters\": \"\\u2AB6\" },\n  \"&succnsim;\": { \"codepoints\": [8937], \"characters\": \"\\u22E9\" },\n  \"&succsim;\": { \"codepoints\": [8831], \"characters\": \"\\u227F\" },\n  \"&SuchThat;\": { \"codepoints\": [8715], \"characters\": \"\\u220B\" },\n  \"&sum;\": { \"codepoints\": [8721], \"characters\": \"\\u2211\" },\n  \"&Sum;\": { \"codepoints\": [8721], \"characters\": \"\\u2211\" },\n  \"&sung;\": { \"codepoints\": [9834], \"characters\": \"\\u266A\" },\n  \"&sup1;\": { \"codepoints\": [185], \"characters\": \"\\u00B9\" },\n  \"&sup1\": { \"codepoints\": [185], \"characters\": \"\\u00B9\" },\n  \"&sup2;\": { \"codepoints\": [178], \"characters\": \"\\u00B2\" },\n  \"&sup2\": { \"codepoints\": [178], \"characters\": \"\\u00B2\" },\n  \"&sup3;\": { \"codepoints\": [179], \"characters\": \"\\u00B3\" },\n  \"&sup3\": { \"codepoints\": [179], \"characters\": \"\\u00B3\" },\n  \"&sup;\": { \"codepoints\": [8835], \"characters\": \"\\u2283\" },\n  \"&Sup;\": { \"codepoints\": [8913], \"characters\": \"\\u22D1\" },\n  \"&supdot;\": { \"codepoints\": [10942], \"characters\": \"\\u2ABE\" },\n  \"&supdsub;\": { \"codepoints\": [10968], \"characters\": \"\\u2AD8\" },\n  \"&supE;\": { \"codepoints\": [10950], \"characters\": \"\\u2AC6\" },\n  \"&supe;\": { \"codepoints\": [8839], \"characters\": \"\\u2287\" },\n  \"&supedot;\": { \"codepoints\": [10948], \"characters\": \"\\u2AC4\" },\n  \"&Superset;\": { \"codepoints\": [8835], \"characters\": \"\\u2283\" },\n  \"&SupersetEqual;\": { \"codepoints\": [8839], \"characters\": \"\\u2287\" },\n  \"&suphsol;\": { \"codepoints\": [10185], \"characters\": \"\\u27C9\" },\n  \"&suphsub;\": { \"codepoints\": [10967], \"characters\": \"\\u2AD7\" },\n  \"&suplarr;\": { \"codepoints\": [10619], \"characters\": \"\\u297B\" },\n  \"&supmult;\": { \"codepoints\": [10946], \"characters\": \"\\u2AC2\" },\n  \"&supnE;\": { \"codepoints\": [10956], \"characters\": \"\\u2ACC\" },\n  \"&supne;\": { \"codepoints\": [8843], \"characters\": \"\\u228B\" },\n  \"&supplus;\": { \"codepoints\": [10944], \"characters\": \"\\u2AC0\" },\n  \"&supset;\": { \"codepoints\": [8835], \"characters\": \"\\u2283\" },\n  \"&Supset;\": { \"codepoints\": [8913], \"characters\": \"\\u22D1\" },\n  \"&supseteq;\": { \"codepoints\": [8839], \"characters\": \"\\u2287\" },\n  \"&supseteqq;\": { \"codepoints\": [10950], \"characters\": \"\\u2AC6\" },\n  \"&supsetneq;\": { \"codepoints\": [8843], \"characters\": \"\\u228B\" },\n  \"&supsetneqq;\": { \"codepoints\": [10956], \"characters\": \"\\u2ACC\" },\n  \"&supsim;\": { \"codepoints\": [10952], \"characters\": \"\\u2AC8\" },\n  \"&supsub;\": { \"codepoints\": [10964], \"characters\": \"\\u2AD4\" },\n  \"&supsup;\": { \"codepoints\": [10966], \"characters\": \"\\u2AD6\" },\n  \"&swarhk;\": { \"codepoints\": [10534], \"characters\": \"\\u2926\" },\n  \"&swarr;\": { \"codepoints\": [8601], \"characters\": \"\\u2199\" },\n  \"&swArr;\": { \"codepoints\": [8665], \"characters\": \"\\u21D9\" },\n  \"&swarrow;\": { \"codepoints\": [8601], \"characters\": \"\\u2199\" },\n  \"&swnwar;\": { \"codepoints\": [10538], \"characters\": \"\\u292A\" },\n  \"&szlig;\": { \"codepoints\": [223], \"characters\": \"\\u00DF\" },\n  \"&szlig\": { \"codepoints\": [223], \"characters\": \"\\u00DF\" },\n  \"&Tab;\": { \"codepoints\": [9], \"characters\": \"\\u0009\" },\n  \"&target;\": { \"codepoints\": [8982], \"characters\": \"\\u2316\" },\n  \"&Tau;\": { \"codepoints\": [932], \"characters\": \"\\u03A4\" },\n  \"&tau;\": { \"codepoints\": [964], \"characters\": \"\\u03C4\" },\n  \"&tbrk;\": { \"codepoints\": [9140], \"characters\": \"\\u23B4\" },\n  \"&Tcaron;\": { \"codepoints\": [356], \"characters\": \"\\u0164\" },\n  \"&tcaron;\": { \"codepoints\": [357], \"characters\": \"\\u0165\" },\n  \"&Tcedil;\": { \"codepoints\": [354], \"characters\": \"\\u0162\" },\n  \"&tcedil;\": { \"codepoints\": [355], \"characters\": \"\\u0163\" },\n  \"&Tcy;\": { \"codepoints\": [1058], \"characters\": \"\\u0422\" },\n  \"&tcy;\": { \"codepoints\": [1090], \"characters\": \"\\u0442\" },\n  \"&tdot;\": { \"codepoints\": [8411], \"characters\": \"\\u20DB\" },\n  \"&telrec;\": { \"codepoints\": [8981], \"characters\": \"\\u2315\" },\n  \"&Tfr;\": { \"codepoints\": [120087], \"characters\": \"\\uD835\\uDD17\" },\n  \"&tfr;\": { \"codepoints\": [120113], \"characters\": \"\\uD835\\uDD31\" },\n  \"&there4;\": { \"codepoints\": [8756], \"characters\": \"\\u2234\" },\n  \"&therefore;\": { \"codepoints\": [8756], \"characters\": \"\\u2234\" },\n  \"&Therefore;\": { \"codepoints\": [8756], \"characters\": \"\\u2234\" },\n  \"&Theta;\": { \"codepoints\": [920], \"characters\": \"\\u0398\" },\n  \"&theta;\": { \"codepoints\": [952], \"characters\": \"\\u03B8\" },\n  \"&thetasym;\": { \"codepoints\": [977], \"characters\": \"\\u03D1\" },\n  \"&thetav;\": { \"codepoints\": [977], \"characters\": \"\\u03D1\" },\n  \"&thickapprox;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\n  \"&thicksim;\": { \"codepoints\": [8764], \"characters\": \"\\u223C\" },\n  \"&ThickSpace;\": { \"codepoints\": [8287, 8202], \"characters\": \"\\u205F\\u200A\" },\n  \"&ThinSpace;\": { \"codepoints\": [8201], \"characters\": \"\\u2009\" },\n  \"&thinsp;\": { \"codepoints\": [8201], \"characters\": \"\\u2009\" },\n  \"&thkap;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\n  \"&thksim;\": { \"codepoints\": [8764], \"characters\": \"\\u223C\" },\n  \"&THORN;\": { \"codepoints\": [222], \"characters\": \"\\u00DE\" },\n  \"&THORN\": { \"codepoints\": [222], \"characters\": \"\\u00DE\" },\n  \"&thorn;\": { \"codepoints\": [254], \"characters\": \"\\u00FE\" },\n  \"&thorn\": { \"codepoints\": [254], \"characters\": \"\\u00FE\" },\n  \"&tilde;\": { \"codepoints\": [732], \"characters\": \"\\u02DC\" },\n  \"&Tilde;\": { \"codepoints\": [8764], \"characters\": \"\\u223C\" },\n  \"&TildeEqual;\": { \"codepoints\": [8771], \"characters\": \"\\u2243\" },\n  \"&TildeFullEqual;\": { \"codepoints\": [8773], \"characters\": \"\\u2245\" },\n  \"&TildeTilde;\": { \"codepoints\": [8776], \"characters\": \"\\u2248\" },\n  \"&timesbar;\": { \"codepoints\": [10801], \"characters\": \"\\u2A31\" },\n  \"&timesb;\": { \"codepoints\": [8864], \"characters\": \"\\u22A0\" },\n  \"&times;\": { \"codepoints\": [215], \"characters\": \"\\u00D7\" },\n  \"&times\": { \"codepoints\": [215], \"characters\": \"\\u00D7\" },\n  \"&timesd;\": { \"codepoints\": [10800], \"characters\": \"\\u2A30\" },\n  \"&tint;\": { \"codepoints\": [8749], \"characters\": \"\\u222D\" },\n  \"&toea;\": { \"codepoints\": [10536], \"characters\": \"\\u2928\" },\n  \"&topbot;\": { \"codepoints\": [9014], \"characters\": \"\\u2336\" },\n  \"&topcir;\": { \"codepoints\": [10993], \"characters\": \"\\u2AF1\" },\n  \"&top;\": { \"codepoints\": [8868], \"characters\": \"\\u22A4\" },\n  \"&Topf;\": { \"codepoints\": [120139], \"characters\": \"\\uD835\\uDD4B\" },\n  \"&topf;\": { \"codepoints\": [120165], \"characters\": \"\\uD835\\uDD65\" },\n  \"&topfork;\": { \"codepoints\": [10970], \"characters\": \"\\u2ADA\" },\n  \"&tosa;\": { \"codepoints\": [10537], \"characters\": \"\\u2929\" },\n  \"&tprime;\": { \"codepoints\": [8244], \"characters\": \"\\u2034\" },\n  \"&trade;\": { \"codepoints\": [8482], \"characters\": \"\\u2122\" },\n  \"&TRADE;\": { \"codepoints\": [8482], \"characters\": \"\\u2122\" },\n  \"&triangle;\": { \"codepoints\": [9653], \"characters\": \"\\u25B5\" },\n  \"&triangledown;\": { \"codepoints\": [9663], \"characters\": \"\\u25BF\" },\n  \"&triangleleft;\": { \"codepoints\": [9667], \"characters\": \"\\u25C3\" },\n  \"&trianglelefteq;\": { \"codepoints\": [8884], \"characters\": \"\\u22B4\" },\n  \"&triangleq;\": { \"codepoints\": [8796], \"characters\": \"\\u225C\" },\n  \"&triangleright;\": { \"codepoints\": [9657], \"characters\": \"\\u25B9\" },\n  \"&trianglerighteq;\": { \"codepoints\": [8885], \"characters\": \"\\u22B5\" },\n  \"&tridot;\": { \"codepoints\": [9708], \"characters\": \"\\u25EC\" },\n  \"&trie;\": { \"codepoints\": [8796], \"characters\": \"\\u225C\" },\n  \"&triminus;\": { \"codepoints\": [10810], \"characters\": \"\\u2A3A\" },\n  \"&TripleDot;\": { \"codepoints\": [8411], \"characters\": \"\\u20DB\" },\n  \"&triplus;\": { \"codepoints\": [10809], \"characters\": \"\\u2A39\" },\n  \"&trisb;\": { \"codepoints\": [10701], \"characters\": \"\\u29CD\" },\n  \"&tritime;\": { \"codepoints\": [10811], \"characters\": \"\\u2A3B\" },\n  \"&trpezium;\": { \"codepoints\": [9186], \"characters\": \"\\u23E2\" },\n  \"&Tscr;\": { \"codepoints\": [119983], \"characters\": \"\\uD835\\uDCAF\" },\n  \"&tscr;\": { \"codepoints\": [120009], \"characters\": \"\\uD835\\uDCC9\" },\n  \"&TScy;\": { \"codepoints\": [1062], \"characters\": \"\\u0426\" },\n  \"&tscy;\": { \"codepoints\": [1094], \"characters\": \"\\u0446\" },\n  \"&TSHcy;\": { \"codepoints\": [1035], \"characters\": \"\\u040B\" },\n  \"&tshcy;\": { \"codepoints\": [1115], \"characters\": \"\\u045B\" },\n  \"&Tstrok;\": { \"codepoints\": [358], \"characters\": \"\\u0166\" },\n  \"&tstrok;\": { \"codepoints\": [359], \"characters\": \"\\u0167\" },\n  \"&twixt;\": { \"codepoints\": [8812], \"characters\": \"\\u226C\" },\n  \"&twoheadleftarrow;\": { \"codepoints\": [8606], \"characters\": \"\\u219E\" },\n  \"&twoheadrightarrow;\": { \"codepoints\": [8608], \"characters\": \"\\u21A0\" },\n  \"&Uacute;\": { \"codepoints\": [218], \"characters\": \"\\u00DA\" },\n  \"&Uacute\": { \"codepoints\": [218], \"characters\": \"\\u00DA\" },\n  \"&uacute;\": { \"codepoints\": [250], \"characters\": \"\\u00FA\" },\n  \"&uacute\": { \"codepoints\": [250], \"characters\": \"\\u00FA\" },\n  \"&uarr;\": { \"codepoints\": [8593], \"characters\": \"\\u2191\" },\n  \"&Uarr;\": { \"codepoints\": [8607], \"characters\": \"\\u219F\" },\n  \"&uArr;\": { \"codepoints\": [8657], \"characters\": \"\\u21D1\" },\n  \"&Uarrocir;\": { \"codepoints\": [10569], \"characters\": \"\\u2949\" },\n  \"&Ubrcy;\": { \"codepoints\": [1038], \"characters\": \"\\u040E\" },\n  \"&ubrcy;\": { \"codepoints\": [1118], \"characters\": \"\\u045E\" },\n  \"&Ubreve;\": { \"codepoints\": [364], \"characters\": \"\\u016C\" },\n  \"&ubreve;\": { \"codepoints\": [365], \"characters\": \"\\u016D\" },\n  \"&Ucirc;\": { \"codepoints\": [219], \"characters\": \"\\u00DB\" },\n  \"&Ucirc\": { \"codepoints\": [219], \"characters\": \"\\u00DB\" },\n  \"&ucirc;\": { \"codepoints\": [251], \"characters\": \"\\u00FB\" },\n  \"&ucirc\": { \"codepoints\": [251], \"characters\": \"\\u00FB\" },\n  \"&Ucy;\": { \"codepoints\": [1059], \"characters\": \"\\u0423\" },\n  \"&ucy;\": { \"codepoints\": [1091], \"characters\": \"\\u0443\" },\n  \"&udarr;\": { \"codepoints\": [8645], \"characters\": \"\\u21C5\" },\n  \"&Udblac;\": { \"codepoints\": [368], \"characters\": \"\\u0170\" },\n  \"&udblac;\": { \"codepoints\": [369], \"characters\": \"\\u0171\" },\n  \"&udhar;\": { \"codepoints\": [10606], \"characters\": \"\\u296E\" },\n  \"&ufisht;\": { \"codepoints\": [10622], \"characters\": \"\\u297E\" },\n  \"&Ufr;\": { \"codepoints\": [120088], \"characters\": \"\\uD835\\uDD18\" },\n  \"&ufr;\": { \"codepoints\": [120114], \"characters\": \"\\uD835\\uDD32\" },\n  \"&Ugrave;\": { \"codepoints\": [217], \"characters\": \"\\u00D9\" },\n  \"&Ugrave\": { \"codepoints\": [217], \"characters\": \"\\u00D9\" },\n  \"&ugrave;\": { \"codepoints\": [249], \"characters\": \"\\u00F9\" },\n  \"&ugrave\": { \"codepoints\": [249], \"characters\": \"\\u00F9\" },\n  \"&uHar;\": { \"codepoints\": [10595], \"characters\": \"\\u2963\" },\n  \"&uharl;\": { \"codepoints\": [8639], \"characters\": \"\\u21BF\" },\n  \"&uharr;\": { \"codepoints\": [8638], \"characters\": \"\\u21BE\" },\n  \"&uhblk;\": { \"codepoints\": [9600], \"characters\": \"\\u2580\" },\n  \"&ulcorn;\": { \"codepoints\": [8988], \"characters\": \"\\u231C\" },\n  \"&ulcorner;\": { \"codepoints\": [8988], \"characters\": \"\\u231C\" },\n  \"&ulcrop;\": { \"codepoints\": [8975], \"characters\": \"\\u230F\" },\n  \"&ultri;\": { \"codepoints\": [9720], \"characters\": \"\\u25F8\" },\n  \"&Umacr;\": { \"codepoints\": [362], \"characters\": \"\\u016A\" },\n  \"&umacr;\": { \"codepoints\": [363], \"characters\": \"\\u016B\" },\n  \"&uml;\": { \"codepoints\": [168], \"characters\": \"\\u00A8\" },\n  \"&uml\": { \"codepoints\": [168], \"characters\": \"\\u00A8\" },\n  \"&UnderBar;\": { \"codepoints\": [95], \"characters\": \"\\u005F\" },\n  \"&UnderBrace;\": { \"codepoints\": [9183], \"characters\": \"\\u23DF\" },\n  \"&UnderBracket;\": { \"codepoints\": [9141], \"characters\": \"\\u23B5\" },\n  \"&UnderParenthesis;\": { \"codepoints\": [9181], \"characters\": \"\\u23DD\" },\n  \"&Union;\": { \"codepoints\": [8899], \"characters\": \"\\u22C3\" },\n  \"&UnionPlus;\": { \"codepoints\": [8846], \"characters\": \"\\u228E\" },\n  \"&Uogon;\": { \"codepoints\": [370], \"characters\": \"\\u0172\" },\n  \"&uogon;\": { \"codepoints\": [371], \"characters\": \"\\u0173\" },\n  \"&Uopf;\": { \"codepoints\": [120140], \"characters\": \"\\uD835\\uDD4C\" },\n  \"&uopf;\": { \"codepoints\": [120166], \"characters\": \"\\uD835\\uDD66\" },\n  \"&UpArrowBar;\": { \"codepoints\": [10514], \"characters\": \"\\u2912\" },\n  \"&uparrow;\": { \"codepoints\": [8593], \"characters\": \"\\u2191\" },\n  \"&UpArrow;\": { \"codepoints\": [8593], \"characters\": \"\\u2191\" },\n  \"&Uparrow;\": { \"codepoints\": [8657], \"characters\": \"\\u21D1\" },\n  \"&UpArrowDownArrow;\": { \"codepoints\": [8645], \"characters\": \"\\u21C5\" },\n  \"&updownarrow;\": { \"codepoints\": [8597], \"characters\": \"\\u2195\" },\n  \"&UpDownArrow;\": { \"codepoints\": [8597], \"characters\": \"\\u2195\" },\n  \"&Updownarrow;\": { \"codepoints\": [8661], \"characters\": \"\\u21D5\" },\n  \"&UpEquilibrium;\": { \"codepoints\": [10606], \"characters\": \"\\u296E\" },\n  \"&upharpoonleft;\": { \"codepoints\": [8639], \"characters\": \"\\u21BF\" },\n  \"&upharpoonright;\": { \"codepoints\": [8638], \"characters\": \"\\u21BE\" },\n  \"&uplus;\": { \"codepoints\": [8846], \"characters\": \"\\u228E\" },\n  \"&UpperLeftArrow;\": { \"codepoints\": [8598], \"characters\": \"\\u2196\" },\n  \"&UpperRightArrow;\": { \"codepoints\": [8599], \"characters\": \"\\u2197\" },\n  \"&upsi;\": { \"codepoints\": [965], \"characters\": \"\\u03C5\" },\n  \"&Upsi;\": { \"codepoints\": [978], \"characters\": \"\\u03D2\" },\n  \"&upsih;\": { \"codepoints\": [978], \"characters\": \"\\u03D2\" },\n  \"&Upsilon;\": { \"codepoints\": [933], \"characters\": \"\\u03A5\" },\n  \"&upsilon;\": { \"codepoints\": [965], \"characters\": \"\\u03C5\" },\n  \"&UpTeeArrow;\": { \"codepoints\": [8613], \"characters\": \"\\u21A5\" },\n  \"&UpTee;\": { \"codepoints\": [8869], \"characters\": \"\\u22A5\" },\n  \"&upuparrows;\": { \"codepoints\": [8648], \"characters\": \"\\u21C8\" },\n  \"&urcorn;\": { \"codepoints\": [8989], \"characters\": \"\\u231D\" },\n  \"&urcorner;\": { \"codepoints\": [8989], \"characters\": \"\\u231D\" },\n  \"&urcrop;\": { \"codepoints\": [8974], \"characters\": \"\\u230E\" },\n  \"&Uring;\": { \"codepoints\": [366], \"characters\": \"\\u016E\" },\n  \"&uring;\": { \"codepoints\": [367], \"characters\": \"\\u016F\" },\n  \"&urtri;\": { \"codepoints\": [9721], \"characters\": \"\\u25F9\" },\n  \"&Uscr;\": { \"codepoints\": [119984], \"characters\": \"\\uD835\\uDCB0\" },\n  \"&uscr;\": { \"codepoints\": [120010], \"characters\": \"\\uD835\\uDCCA\" },\n  \"&utdot;\": { \"codepoints\": [8944], \"characters\": \"\\u22F0\" },\n  \"&Utilde;\": { \"codepoints\": [360], \"characters\": \"\\u0168\" },\n  \"&utilde;\": { \"codepoints\": [361], \"characters\": \"\\u0169\" },\n  \"&utri;\": { \"codepoints\": [9653], \"characters\": \"\\u25B5\" },\n  \"&utrif;\": { \"codepoints\": [9652], \"characters\": \"\\u25B4\" },\n  \"&uuarr;\": { \"codepoints\": [8648], \"characters\": \"\\u21C8\" },\n  \"&Uuml;\": { \"codepoints\": [220], \"characters\": \"\\u00DC\" },\n  \"&Uuml\": { \"codepoints\": [220], \"characters\": \"\\u00DC\" },\n  \"&uuml;\": { \"codepoints\": [252], \"characters\": \"\\u00FC\" },\n  \"&uuml\": { \"codepoints\": [252], \"characters\": \"\\u00FC\" },\n  \"&uwangle;\": { \"codepoints\": [10663], \"characters\": \"\\u29A7\" },\n  \"&vangrt;\": { \"codepoints\": [10652], \"characters\": \"\\u299C\" },\n  \"&varepsilon;\": { \"codepoints\": [1013], \"characters\": \"\\u03F5\" },\n  \"&varkappa;\": { \"codepoints\": [1008], \"characters\": \"\\u03F0\" },\n  \"&varnothing;\": { \"codepoints\": [8709], \"characters\": \"\\u2205\" },\n  \"&varphi;\": { \"codepoints\": [981], \"characters\": \"\\u03D5\" },\n  \"&varpi;\": { \"codepoints\": [982], \"characters\": \"\\u03D6\" },\n  \"&varpropto;\": { \"codepoints\": [8733], \"characters\": \"\\u221D\" },\n  \"&varr;\": { \"codepoints\": [8597], \"characters\": \"\\u2195\" },\n  \"&vArr;\": { \"codepoints\": [8661], \"characters\": \"\\u21D5\" },\n  \"&varrho;\": { \"codepoints\": [1009], \"characters\": \"\\u03F1\" },\n  \"&varsigma;\": { \"codepoints\": [962], \"characters\": \"\\u03C2\" },\n  \"&varsubsetneq;\": { \"codepoints\": [8842, 65024], \"characters\": \"\\u228A\\uFE00\" },\n  \"&varsubsetneqq;\": { \"codepoints\": [10955, 65024], \"characters\": \"\\u2ACB\\uFE00\" },\n  \"&varsupsetneq;\": { \"codepoints\": [8843, 65024], \"characters\": \"\\u228B\\uFE00\" },\n  \"&varsupsetneqq;\": { \"codepoints\": [10956, 65024], \"characters\": \"\\u2ACC\\uFE00\" },\n  \"&vartheta;\": { \"codepoints\": [977], \"characters\": \"\\u03D1\" },\n  \"&vartriangleleft;\": { \"codepoints\": [8882], \"characters\": \"\\u22B2\" },\n  \"&vartriangleright;\": { \"codepoints\": [8883], \"characters\": \"\\u22B3\" },\n  \"&vBar;\": { \"codepoints\": [10984], \"characters\": \"\\u2AE8\" },\n  \"&Vbar;\": { \"codepoints\": [10987], \"characters\": \"\\u2AEB\" },\n  \"&vBarv;\": { \"codepoints\": [10985], \"characters\": \"\\u2AE9\" },\n  \"&Vcy;\": { \"codepoints\": [1042], \"characters\": \"\\u0412\" },\n  \"&vcy;\": { \"codepoints\": [1074], \"characters\": \"\\u0432\" },\n  \"&vdash;\": { \"codepoints\": [8866], \"characters\": \"\\u22A2\" },\n  \"&vDash;\": { \"codepoints\": [8872], \"characters\": \"\\u22A8\" },\n  \"&Vdash;\": { \"codepoints\": [8873], \"characters\": \"\\u22A9\" },\n  \"&VDash;\": { \"codepoints\": [8875], \"characters\": \"\\u22AB\" },\n  \"&Vdashl;\": { \"codepoints\": [10982], \"characters\": \"\\u2AE6\" },\n  \"&veebar;\": { \"codepoints\": [8891], \"characters\": \"\\u22BB\" },\n  \"&vee;\": { \"codepoints\": [8744], \"characters\": \"\\u2228\" },\n  \"&Vee;\": { \"codepoints\": [8897], \"characters\": \"\\u22C1\" },\n  \"&veeeq;\": { \"codepoints\": [8794], \"characters\": \"\\u225A\" },\n  \"&vellip;\": { \"codepoints\": [8942], \"characters\": \"\\u22EE\" },\n  \"&verbar;\": { \"codepoints\": [124], \"characters\": \"\\u007C\" },\n  \"&Verbar;\": { \"codepoints\": [8214], \"characters\": \"\\u2016\" },\n  \"&vert;\": { \"codepoints\": [124], \"characters\": \"\\u007C\" },\n  \"&Vert;\": { \"codepoints\": [8214], \"characters\": \"\\u2016\" },\n  \"&VerticalBar;\": { \"codepoints\": [8739], \"characters\": \"\\u2223\" },\n  \"&VerticalLine;\": { \"codepoints\": [124], \"characters\": \"\\u007C\" },\n  \"&VerticalSeparator;\": { \"codepoints\": [10072], \"characters\": \"\\u2758\" },\n  \"&VerticalTilde;\": { \"codepoints\": [8768], \"characters\": \"\\u2240\" },\n  \"&VeryThinSpace;\": { \"codepoints\": [8202], \"characters\": \"\\u200A\" },\n  \"&Vfr;\": { \"codepoints\": [120089], \"characters\": \"\\uD835\\uDD19\" },\n  \"&vfr;\": { \"codepoints\": [120115], \"characters\": \"\\uD835\\uDD33\" },\n  \"&vltri;\": { \"codepoints\": [8882], \"characters\": \"\\u22B2\" },\n  \"&vnsub;\": { \"codepoints\": [8834, 8402], \"characters\": \"\\u2282\\u20D2\" },\n  \"&vnsup;\": { \"codepoints\": [8835, 8402], \"characters\": \"\\u2283\\u20D2\" },\n  \"&Vopf;\": { \"codepoints\": [120141], \"characters\": \"\\uD835\\uDD4D\" },\n  \"&vopf;\": { \"codepoints\": [120167], \"characters\": \"\\uD835\\uDD67\" },\n  \"&vprop;\": { \"codepoints\": [8733], \"characters\": \"\\u221D\" },\n  \"&vrtri;\": { \"codepoints\": [8883], \"characters\": \"\\u22B3\" },\n  \"&Vscr;\": { \"codepoints\": [119985], \"characters\": \"\\uD835\\uDCB1\" },\n  \"&vscr;\": { \"codepoints\": [120011], \"characters\": \"\\uD835\\uDCCB\" },\n  \"&vsubnE;\": { \"codepoints\": [10955, 65024], \"characters\": \"\\u2ACB\\uFE00\" },\n  \"&vsubne;\": { \"codepoints\": [8842, 65024], \"characters\": \"\\u228A\\uFE00\" },\n  \"&vsupnE;\": { \"codepoints\": [10956, 65024], \"characters\": \"\\u2ACC\\uFE00\" },\n  \"&vsupne;\": { \"codepoints\": [8843, 65024], \"characters\": \"\\u228B\\uFE00\" },\n  \"&Vvdash;\": { \"codepoints\": [8874], \"characters\": \"\\u22AA\" },\n  \"&vzigzag;\": { \"codepoints\": [10650], \"characters\": \"\\u299A\" },\n  \"&Wcirc;\": { \"codepoints\": [372], \"characters\": \"\\u0174\" },\n  \"&wcirc;\": { \"codepoints\": [373], \"characters\": \"\\u0175\" },\n  \"&wedbar;\": { \"codepoints\": [10847], \"characters\": \"\\u2A5F\" },\n  \"&wedge;\": { \"codepoints\": [8743], \"characters\": \"\\u2227\" },\n  \"&Wedge;\": { \"codepoints\": [8896], \"characters\": \"\\u22C0\" },\n  \"&wedgeq;\": { \"codepoints\": [8793], \"characters\": \"\\u2259\" },\n  \"&weierp;\": { \"codepoints\": [8472], \"characters\": \"\\u2118\" },\n  \"&Wfr;\": { \"codepoints\": [120090], \"characters\": \"\\uD835\\uDD1A\" },\n  \"&wfr;\": { \"codepoints\": [120116], \"characters\": \"\\uD835\\uDD34\" },\n  \"&Wopf;\": { \"codepoints\": [120142], \"characters\": \"\\uD835\\uDD4E\" },\n  \"&wopf;\": { \"codepoints\": [120168], \"characters\": \"\\uD835\\uDD68\" },\n  \"&wp;\": { \"codepoints\": [8472], \"characters\": \"\\u2118\" },\n  \"&wr;\": { \"codepoints\": [8768], \"characters\": \"\\u2240\" },\n  \"&wreath;\": { \"codepoints\": [8768], \"characters\": \"\\u2240\" },\n  \"&Wscr;\": { \"codepoints\": [119986], \"characters\": \"\\uD835\\uDCB2\" },\n  \"&wscr;\": { \"codepoints\": [120012], \"characters\": \"\\uD835\\uDCCC\" },\n  \"&xcap;\": { \"codepoints\": [8898], \"characters\": \"\\u22C2\" },\n  \"&xcirc;\": { \"codepoints\": [9711], \"characters\": \"\\u25EF\" },\n  \"&xcup;\": { \"codepoints\": [8899], \"characters\": \"\\u22C3\" },\n  \"&xdtri;\": { \"codepoints\": [9661], \"characters\": \"\\u25BD\" },\n  \"&Xfr;\": { \"codepoints\": [120091], \"characters\": \"\\uD835\\uDD1B\" },\n  \"&xfr;\": { \"codepoints\": [120117], \"characters\": \"\\uD835\\uDD35\" },\n  \"&xharr;\": { \"codepoints\": [10231], \"characters\": \"\\u27F7\" },\n  \"&xhArr;\": { \"codepoints\": [10234], \"characters\": \"\\u27FA\" },\n  \"&Xi;\": { \"codepoints\": [926], \"characters\": \"\\u039E\" },\n  \"&xi;\": { \"codepoints\": [958], \"characters\": \"\\u03BE\" },\n  \"&xlarr;\": { \"codepoints\": [10229], \"characters\": \"\\u27F5\" },\n  \"&xlArr;\": { \"codepoints\": [10232], \"characters\": \"\\u27F8\" },\n  \"&xmap;\": { \"codepoints\": [10236], \"characters\": \"\\u27FC\" },\n  \"&xnis;\": { \"codepoints\": [8955], \"characters\": \"\\u22FB\" },\n  \"&xodot;\": { \"codepoints\": [10752], \"characters\": \"\\u2A00\" },\n  \"&Xopf;\": { \"codepoints\": [120143], \"characters\": \"\\uD835\\uDD4F\" },\n  \"&xopf;\": { \"codepoints\": [120169], \"characters\": \"\\uD835\\uDD69\" },\n  \"&xoplus;\": { \"codepoints\": [10753], \"characters\": \"\\u2A01\" },\n  \"&xotime;\": { \"codepoints\": [10754], \"characters\": \"\\u2A02\" },\n  \"&xrarr;\": { \"codepoints\": [10230], \"characters\": \"\\u27F6\" },\n  \"&xrArr;\": { \"codepoints\": [10233], \"characters\": \"\\u27F9\" },\n  \"&Xscr;\": { \"codepoints\": [119987], \"characters\": \"\\uD835\\uDCB3\" },\n  \"&xscr;\": { \"codepoints\": [120013], \"characters\": \"\\uD835\\uDCCD\" },\n  \"&xsqcup;\": { \"codepoints\": [10758], \"characters\": \"\\u2A06\" },\n  \"&xuplus;\": { \"codepoints\": [10756], \"characters\": \"\\u2A04\" },\n  \"&xutri;\": { \"codepoints\": [9651], \"characters\": \"\\u25B3\" },\n  \"&xvee;\": { \"codepoints\": [8897], \"characters\": \"\\u22C1\" },\n  \"&xwedge;\": { \"codepoints\": [8896], \"characters\": \"\\u22C0\" },\n  \"&Yacute;\": { \"codepoints\": [221], \"characters\": \"\\u00DD\" },\n  \"&Yacute\": { \"codepoints\": [221], \"characters\": \"\\u00DD\" },\n  \"&yacute;\": { \"codepoints\": [253], \"characters\": \"\\u00FD\" },\n  \"&yacute\": { \"codepoints\": [253], \"characters\": \"\\u00FD\" },\n  \"&YAcy;\": { \"codepoints\": [1071], \"characters\": \"\\u042F\" },\n  \"&yacy;\": { \"codepoints\": [1103], \"characters\": \"\\u044F\" },\n  \"&Ycirc;\": { \"codepoints\": [374], \"characters\": \"\\u0176\" },\n  \"&ycirc;\": { \"codepoints\": [375], \"characters\": \"\\u0177\" },\n  \"&Ycy;\": { \"codepoints\": [1067], \"characters\": \"\\u042B\" },\n  \"&ycy;\": { \"codepoints\": [1099], \"characters\": \"\\u044B\" },\n  \"&yen;\": { \"codepoints\": [165], \"characters\": \"\\u00A5\" },\n  \"&yen\": { \"codepoints\": [165], \"characters\": \"\\u00A5\" },\n  \"&Yfr;\": { \"codepoints\": [120092], \"characters\": \"\\uD835\\uDD1C\" },\n  \"&yfr;\": { \"codepoints\": [120118], \"characters\": \"\\uD835\\uDD36\" },\n  \"&YIcy;\": { \"codepoints\": [1031], \"characters\": \"\\u0407\" },\n  \"&yicy;\": { \"codepoints\": [1111], \"characters\": \"\\u0457\" },\n  \"&Yopf;\": { \"codepoints\": [120144], \"characters\": \"\\uD835\\uDD50\" },\n  \"&yopf;\": { \"codepoints\": [120170], \"characters\": \"\\uD835\\uDD6A\" },\n  \"&Yscr;\": { \"codepoints\": [119988], \"characters\": \"\\uD835\\uDCB4\" },\n  \"&yscr;\": { \"codepoints\": [120014], \"characters\": \"\\uD835\\uDCCE\" },\n  \"&YUcy;\": { \"codepoints\": [1070], \"characters\": \"\\u042E\" },\n  \"&yucy;\": { \"codepoints\": [1102], \"characters\": \"\\u044E\" },\n  \"&yuml;\": { \"codepoints\": [255], \"characters\": \"\\u00FF\" },\n  \"&yuml\": { \"codepoints\": [255], \"characters\": \"\\u00FF\" },\n  \"&Yuml;\": { \"codepoints\": [376], \"characters\": \"\\u0178\" },\n  \"&Zacute;\": { \"codepoints\": [377], \"characters\": \"\\u0179\" },\n  \"&zacute;\": { \"codepoints\": [378], \"characters\": \"\\u017A\" },\n  \"&Zcaron;\": { \"codepoints\": [381], \"characters\": \"\\u017D\" },\n  \"&zcaron;\": { \"codepoints\": [382], \"characters\": \"\\u017E\" },\n  \"&Zcy;\": { \"codepoints\": [1047], \"characters\": \"\\u0417\" },\n  \"&zcy;\": { \"codepoints\": [1079], \"characters\": \"\\u0437\" },\n  \"&Zdot;\": { \"codepoints\": [379], \"characters\": \"\\u017B\" },\n  \"&zdot;\": { \"codepoints\": [380], \"characters\": \"\\u017C\" },\n  \"&zeetrf;\": { \"codepoints\": [8488], \"characters\": \"\\u2128\" },\n  \"&ZeroWidthSpace;\": { \"codepoints\": [8203], \"characters\": \"\\u200B\" },\n  \"&Zeta;\": { \"codepoints\": [918], \"characters\": \"\\u0396\" },\n  \"&zeta;\": { \"codepoints\": [950], \"characters\": \"\\u03B6\" },\n  \"&zfr;\": { \"codepoints\": [120119], \"characters\": \"\\uD835\\uDD37\" },\n  \"&Zfr;\": { \"codepoints\": [8488], \"characters\": \"\\u2128\" },\n  \"&ZHcy;\": { \"codepoints\": [1046], \"characters\": \"\\u0416\" },\n  \"&zhcy;\": { \"codepoints\": [1078], \"characters\": \"\\u0436\" },\n  \"&zigrarr;\": { \"codepoints\": [8669], \"characters\": \"\\u21DD\" },\n  \"&zopf;\": { \"codepoints\": [120171], \"characters\": \"\\uD835\\uDD6B\" },\n  \"&Zopf;\": { \"codepoints\": [8484], \"characters\": \"\\u2124\" },\n  \"&Zscr;\": { \"codepoints\": [119989], \"characters\": \"\\uD835\\uDCB5\" },\n  \"&zscr;\": { \"codepoints\": [120015], \"characters\": \"\\uD835\\uDCCF\" },\n  \"&zwj;\": { \"codepoints\": [8205], \"characters\": \"\\u200D\" },\n  \"&zwnj;\": { \"codepoints\": [8204], \"characters\": \"\\u200C\" }\n};\n\nvar ALPHANUMERIC = /^[a-zA-Z0-9]/;\nvar getPossibleNamedEntityStart = makeRegexMatcher(/^&[a-zA-Z0-9]/);\nvar getApparentNamedEntity = makeRegexMatcher(/^&[a-zA-Z0-9]+;/);\n\nvar getNamedEntityByFirstChar = {};\n(function () {\n  var namedEntitiesByFirstChar = {};\n  for (var ent in ENTITIES) {\n    var chr = ent.charAt(1);\n    namedEntitiesByFirstChar[chr] = (namedEntitiesByFirstChar[chr] || []);\n    namedEntitiesByFirstChar[chr].push(ent.slice(2));\n  }\n  for (var chr in namedEntitiesByFirstChar) {\n    getNamedEntityByFirstChar[chr] = makeRegexMatcher(\n      new RegExp('^&' + chr + '(?:' +\n                 namedEntitiesByFirstChar[chr].join('|') + ')'));\n  }\n})();\n\n// Run a provided \"matcher\" function but reset the current position afterwards.\n// Fatal failure of the matcher is not suppressed.\nvar peekMatcher = function (scanner, matcher) {\n  var start = scanner.pos;\n  var result = matcher(scanner);\n  scanner.pos = start;\n  return result;\n};\n\n// Returns a string like \"&amp;\" or a falsy value if no match.  Fails fatally\n// if something looks like a named entity but isn't.\nvar getNamedCharRef = function (scanner, inAttribute) {\n  // look for `&` followed by alphanumeric\n  if (! peekMatcher(scanner, getPossibleNamedEntityStart))\n    return null;\n\n  var matcher = getNamedEntityByFirstChar[scanner.rest().charAt(1)];\n  var entity = null;\n  if (matcher)\n    entity = peekMatcher(scanner, matcher);\n\n  if (entity) {\n    if (entity.slice(-1) !== ';') {\n      // Certain character references with no semi are an error, like `&lt`.\n      // In attribute values, however, this is not fatal if the next character\n      // is alphanumeric.\n      //\n      // This rule affects href attributes, for example, deeming \"/?foo=bar&ltc=abc\"\n      // to be ok but \"/?foo=bar&lt=abc\" to not be.\n      if (inAttribute && ALPHANUMERIC.test(scanner.rest().charAt(entity.length)))\n        return null;\n      scanner.fatal(\"Character reference requires semicolon: \" + entity);\n    } else {\n      scanner.pos += entity.length;\n      return entity;\n    }\n  } else {\n    // we couldn't match any real entity, so see if this is a bad entity\n    // or something we can overlook.\n    var badEntity = peekMatcher(scanner, getApparentNamedEntity);\n    if (badEntity)\n      scanner.fatal(\"Invalid character reference: \" + badEntity);\n    // `&aaaa` is ok with no semicolon\n    return null;\n  }\n};\n\n// Returns the sequence of one or two codepoints making up an entity as an array.\n// Codepoints in the array are integers and may be out of the single-char JavaScript\n// range.\nvar getCodePoints = function (namedEntity) {\n  return ENTITIES[namedEntity].codepoints;\n};\n\nvar ALLOWED_AFTER_AMP = /^[\\u0009\\u000a\\u000c <&]/;\n\nvar getCharRefNumber = makeRegexMatcher(/^(?:[xX][0-9a-fA-F]+|[0-9]+);/);\n\nvar BIG_BAD_CODEPOINTS = (function (obj) {\n  var list = [0x1FFFE, 0x1FFFF, 0x2FFFE, 0x2FFFF, 0x3FFFE, 0x3FFFF,\n              0x4FFFE, 0x4FFFF, 0x5FFFE, 0x5FFFF, 0x6FFFE, 0x6FFFF,\n              0x7FFFE, 0x7FFFF, 0x8FFFE, 0x8FFFF, 0x9FFFE, 0x9FFFF,\n              0xAFFFE, 0xAFFFF, 0xBFFFE, 0xBFFFF, 0xCFFFE, 0xCFFFF,\n              0xDFFFE, 0xDFFFF, 0xEFFFE, 0xEFFFF, 0xFFFFE, 0xFFFFF,\n              0x10FFFE, 0x10FFFF];\n  for (var i = 0; i < list.length; i++)\n    obj[list[i]] = true;\n\n  return obj;\n})({});\n\nvar isLegalCodepoint = function (cp) {\n  if ((cp === 0) ||\n      (cp >= 0x80 && cp <= 0x9f) ||\n      (cp >= 0xd800 && cp <= 0xdfff) ||\n      (cp >= 0x10ffff) ||\n      (cp >= 0x1 && cp <= 0x8) ||\n      (cp === 0xb) ||\n      (cp >= 0xd && cp <= 0x1f) ||\n      (cp >= 0x7f && cp <= 0x9f) ||\n      (cp >= 0xfdd0 && cp <= 0xfdef) ||\n      (cp === 0xfffe) ||\n      (cp === 0xffff) ||\n      (cp >= 0x10000 && BIG_BAD_CODEPOINTS[cp]))\n    return false;\n\n  return true;\n};\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#consume-a-character-reference\n//\n// Matches a character reference if possible, including the initial `&`.\n// Fails fatally in error cases (assuming an initial `&` is matched), like a disallowed codepoint\n// number or a bad named character reference.\n//\n// `inAttribute` is truthy if we are in an attribute value.\n//\n// `allowedChar` is an optional character that,\n// if found after the initial `&`, aborts parsing silently rather than failing fatally.  In real use it is\n// either `\"`, `'`, or `>` and is supplied when parsing attribute values.  NOTE: In the current spec, the\n// value of `allowedChar` doesn't actually seem to end up mattering, but there is still some debate about\n// the right approach to ampersands.\ngetCharacterReference = HTMLTools.Parse.getCharacterReference = function (scanner, inAttribute, allowedChar) {\n  if (scanner.peek() !== '&')\n    // no ampersand\n    return null;\n\n  var afterAmp = scanner.rest().charAt(1);\n\n  if (afterAmp === '#') {\n    scanner.pos += 2;\n    // refNumber includes possible initial `x` and final semicolon\n    var refNumber = getCharRefNumber(scanner);\n    // At this point we've consumed the input, so we're committed to returning\n    // something or failing fatally.\n    if (! refNumber)\n      scanner.fatal(\"Invalid numerical character reference starting with &#\");\n    var codepoint;\n    if (refNumber.charAt(0) === 'x' || refNumber.charAt(0) === 'X') {\n      // hex\n      var hex = refNumber.slice(1, -1);\n      while (hex.charAt(0) === '0')\n        hex = hex.slice(1);\n      if (hex.length > 6)\n        scanner.fatal(\"Numerical character reference too large: 0x\" + hex);\n      codepoint = parseInt(hex || \"0\", 16);\n    } else {\n      var dec = refNumber.slice(0, -1);\n      while (dec.charAt(0) === '0')\n        dec = dec.slice(1);\n      if (dec.length > 7)\n        scanner.fatal(\"Numerical character reference too large: \" + dec);\n      codepoint = parseInt(dec || \"0\", 10);\n    }\n    if (! isLegalCodepoint(codepoint))\n      scanner.fatal(\"Illegal codepoint in numerical character reference: &#\" + refNumber);\n    return { t: 'CharRef',\n             v: '&#' + refNumber,\n             cp: [codepoint] };\n  } else if ((! afterAmp) // EOF\n             || (allowedChar && afterAmp === allowedChar)\n             || ALLOWED_AFTER_AMP.test(afterAmp)) {\n    return null;\n  } else {\n    var namedEntity = getNamedCharRef(scanner, inAttribute);\n    if (namedEntity) {\n      return { t: 'CharRef',\n               v: namedEntity,\n               cp: getCodePoints(namedEntity) };\n    } else {\n      return null;\n    }\n  }\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/html-tools/tokenize.js                                                                             //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n// Token types:\n//\n// { t: 'Doctype',\n//   v: String (entire Doctype declaration from the source),\n//   name: String,\n//   systemId: String (optional),\n//   publicId: String (optional)\n// }\n//\n// { t: 'Comment',\n//   v: String (not including \"<!--\" and \"-->\")\n// }\n//\n// { t: 'Chars',\n//   v: String (pure text like you might pass to document.createTextNode,\n//              no character references)\n// }\n//\n// { t: 'Tag',\n//   isEnd: Boolean (optional),\n//   isSelfClosing: Boolean (optional),\n//   n: String (tag name, in lowercase or camel case),\n//   attrs: dictionary of { String: [tokens] }\n//          OR [{ String: [tokens] }, TemplateTag tokens...]\n//     (only for start tags; required)\n// }\n//\n// { t: 'CharRef',\n//   v: String (entire character reference from the source, e.g. \"&amp;\"),\n//   cp: [Integer] (array of Unicode code point numbers it expands to)\n// }\n//\n// We keep around both the original form of the character reference and its\n// expansion so that subsequent processing steps have the option to\n// re-emit it (if they are generating HTML) or interpret it.  Named and\n// numerical code points may be more than 16 bits, in which case they\n// need to passed through codePointToString to make a JavaScript string.\n// Most named entities and all numeric character references are one codepoint\n// (e.g. \"&amp;\" is [38]), but a few are two codepoints.\n//\n// { t: 'TemplateTag',\n//   v: HTMLTools.TemplateTag\n// }\n\n// The HTML tokenization spec says to preprocess the input stream to replace\n// CR(LF)? with LF.  However, preprocessing `scanner` would complicate things\n// by making indexes not match the input (e.g. for error messages), so we just\n// keep in mind as we go along that an LF might be represented by CRLF or CR.\n// In most cases, it doesn't actually matter what combination of whitespace\n// characters are present (e.g. inside tags).\nvar HTML_SPACE = /^[\\f\\n\\r\\t ]/;\n\nvar convertCRLF = function (str) {\n  return str.replace(/\\r\\n?/g, '\\n');\n};\n\ngetComment = HTMLTools.Parse.getComment = function (scanner) {\n  if (scanner.rest().slice(0, 4) !== '<!--')\n    return null;\n  scanner.pos += 4;\n\n  // Valid comments are easy to parse; they end at the first `--`!\n  // Our main job is throwing errors.\n\n  var rest = scanner.rest();\n  if (rest.charAt(0) === '>' || rest.slice(0, 2) === '->')\n    scanner.fatal(\"HTML comment can't start with > or ->\");\n\n  var closePos = rest.indexOf('-->');\n  if (closePos < 0)\n    scanner.fatal(\"Unclosed HTML comment\");\n\n  var commentContents = rest.slice(0, closePos);\n  if (commentContents.slice(-1) === '-')\n    scanner.fatal(\"HTML comment must end at first `--`\");\n  if (commentContents.indexOf(\"--\") >= 0)\n    scanner.fatal(\"HTML comment cannot contain `--` anywhere\");\n  if (commentContents.indexOf('\\u0000') >= 0)\n    scanner.fatal(\"HTML comment cannot contain NULL\");\n\n  scanner.pos += closePos + 3;\n\n  return { t: 'Comment',\n           v: convertCRLF(commentContents) };\n};\n\nvar skipSpaces = function (scanner) {\n  while (HTML_SPACE.test(scanner.peek()))\n    scanner.pos++;\n};\n\nvar requireSpaces = function (scanner) {\n  if (! HTML_SPACE.test(scanner.peek()))\n    scanner.fatal(\"Expected space\");\n  skipSpaces(scanner);\n};\n\nvar getDoctypeQuotedString = function (scanner) {\n  var quote = scanner.peek();\n  if (! (quote === '\"' || quote === \"'\"))\n    scanner.fatal(\"Expected single or double quote in DOCTYPE\");\n  scanner.pos++;\n\n  if (scanner.peek() === quote)\n    // prevent a falsy return value (empty string)\n    scanner.fatal(\"Malformed DOCTYPE\");\n\n  var str = '';\n  var ch;\n  while ((ch = scanner.peek()), ch !== quote) {\n    if ((! ch) || (ch === '\\u0000') || (ch === '>'))\n      scanner.fatal(\"Malformed DOCTYPE\");\n    str += ch;\n    scanner.pos++;\n  }\n\n  scanner.pos++;\n\n  return str;\n};\n\n// See http://www.whatwg.org/specs/web-apps/current-work/multipage/syntax.html#the-doctype.\n//\n// If `getDocType` sees \"<!DOCTYPE\" (case-insensitive), it will match or fail fatally.\ngetDoctype = HTMLTools.Parse.getDoctype = function (scanner) {\n  if (HTMLTools.asciiLowerCase(scanner.rest().slice(0, 9)) !== '<!doctype')\n    return null;\n  var start = scanner.pos;\n  scanner.pos += 9;\n\n  requireSpaces(scanner);\n\n  var ch = scanner.peek();\n  if ((! ch) || (ch === '>') || (ch === '\\u0000'))\n    scanner.fatal('Malformed DOCTYPE');\n  var name = ch;\n  scanner.pos++;\n\n  while ((ch = scanner.peek()), ! (HTML_SPACE.test(ch) || ch === '>')) {\n    if ((! ch) || (ch === '\\u0000'))\n      scanner.fatal('Malformed DOCTYPE');\n    name += ch;\n    scanner.pos++;\n  }\n  name = HTMLTools.asciiLowerCase(name);\n\n  // Now we're looking at a space or a `>`.\n  skipSpaces(scanner);\n\n  var systemId = null;\n  var publicId = null;\n\n  if (scanner.peek() !== '>') {\n    // Now we're essentially in the \"After DOCTYPE name state\" of the tokenizer,\n    // but we're not looking at space or `>`.\n\n    // this should be \"public\" or \"system\".\n    var publicOrSystem = HTMLTools.asciiLowerCase(scanner.rest().slice(0, 6));\n\n    if (publicOrSystem === 'system') {\n      scanner.pos += 6;\n      requireSpaces(scanner);\n      systemId = getDoctypeQuotedString(scanner);\n      skipSpaces(scanner);\n      if (scanner.peek() !== '>')\n        scanner.fatal(\"Malformed DOCTYPE\");\n    } else if (publicOrSystem === 'public') {\n      scanner.pos += 6;\n      requireSpaces(scanner);\n      publicId = getDoctypeQuotedString(scanner);\n      if (scanner.peek() !== '>') {\n        requireSpaces(scanner);\n        if (scanner.peek() !== '>') {\n          systemId = getDoctypeQuotedString(scanner);\n          skipSpaces(scanner);\n          if (scanner.peek() !== '>')\n            scanner.fatal(\"Malformed DOCTYPE\");\n        }\n      }\n    } else {\n      scanner.fatal(\"Expected PUBLIC or SYSTEM in DOCTYPE\");\n    }\n  }\n\n  // looking at `>`\n  scanner.pos++;\n  var result = { t: 'Doctype',\n                 v: scanner.input.slice(start, scanner.pos),\n                 name: name };\n\n  if (systemId)\n    result.systemId = systemId;\n  if (publicId)\n    result.publicId = publicId;\n\n  return result;\n};\n\n// The special character `{` is only allowed as the first character\n// of a Chars, so that we have a chance to detect template tags.\nvar getChars = makeRegexMatcher(/^[^&<\\u0000][^&<\\u0000{]*/);\n\nvar assertIsTemplateTag = function (x) {\n  if (! (x instanceof HTMLTools.TemplateTag))\n    throw new Error(\"Expected an instance of HTMLTools.TemplateTag\");\n  return x;\n};\n\n// Returns the next HTML token, or `null` if we reach EOF.\n//\n// Note that if we have a `getTemplateTag` function that sometimes\n// consumes characters and emits nothing (e.g. in the case of template\n// comments), we may go from not-at-EOF to at-EOF and return `null`,\n// while otherwise we always find some token to return.\ngetHTMLToken = HTMLTools.Parse.getHTMLToken = function (scanner, dataMode) {\n  var result = null;\n  if (scanner.getTemplateTag) {\n    // Try to parse a template tag by calling out to the provided\n    // `getTemplateTag` function.  If the function returns `null` but\n    // consumes characters, it must have parsed a comment or something,\n    // so we loop and try it again.  If it ever returns `null` without\n    // consuming anything, that means it didn't see anything interesting\n    // so we look for a normal token.  If it returns a truthy value,\n    // the value must be instanceof HTMLTools.TemplateTag.  We wrap it\n    // in a Special token.\n    var lastPos = scanner.pos;\n    result = scanner.getTemplateTag(\n      scanner,\n      (dataMode === 'rcdata' ? TEMPLATE_TAG_POSITION.IN_RCDATA :\n       (dataMode === 'rawtext' ? TEMPLATE_TAG_POSITION.IN_RAWTEXT :\n        TEMPLATE_TAG_POSITION.ELEMENT)));\n\n    if (result)\n      return { t: 'TemplateTag', v: assertIsTemplateTag(result) };\n    else if (scanner.pos > lastPos)\n      return null;\n  }\n\n  var chars = getChars(scanner);\n  if (chars)\n    return { t: 'Chars',\n             v: convertCRLF(chars) };\n\n  var ch = scanner.peek();\n  if (! ch)\n    return null; // EOF\n\n  if (ch === '\\u0000')\n    scanner.fatal(\"Illegal NULL character\");\n\n  if (ch === '&') {\n    if (dataMode !== 'rawtext') {\n      var charRef = getCharacterReference(scanner);\n      if (charRef)\n        return charRef;\n    }\n\n    scanner.pos++;\n    return { t: 'Chars',\n             v: '&' };\n  }\n\n  // If we're here, we're looking at `<`.\n\n  if (scanner.peek() === '<' && dataMode) {\n    // don't interpret tags\n    scanner.pos++;\n    return { t: 'Chars',\n             v: '<' };\n  }\n\n  // `getTag` will claim anything starting with `<` not followed by `!`.\n  // `getComment` takes `<!--` and getDoctype takes `<!doctype`.\n  result = (getTagToken(scanner) || getComment(scanner) || getDoctype(scanner));\n\n  if (result)\n    return result;\n\n  scanner.fatal(\"Unexpected `<!` directive.\");\n};\n\nvar getTagName = makeRegexMatcher(/^[a-zA-Z][^\\f\\n\\r\\t />{]*/);\nvar getClangle = makeRegexMatcher(/^>/);\nvar getSlash = makeRegexMatcher(/^\\//);\nvar getAttributeName = makeRegexMatcher(/^[^>/\\u0000\"'<=\\f\\n\\r\\t ][^\\f\\n\\r\\t /=>\"'<\\u0000]*/);\n\n// Try to parse `>` or `/>`, mutating `tag` to be self-closing in the latter\n// case (and failing fatally if `/` isn't followed by `>`).\n// Return tag if successful.\nvar handleEndOfTag = function (scanner, tag) {\n  if (getClangle(scanner))\n    return tag;\n\n  if (getSlash(scanner)) {\n    if (! getClangle(scanner))\n      scanner.fatal(\"Expected `>` after `/`\");\n    tag.isSelfClosing = true;\n    return tag;\n  }\n\n  return null;\n};\n\n// Scan a quoted or unquoted attribute value (omit `quote` for unquoted).\nvar getAttributeValue = function (scanner, quote) {\n  if (quote) {\n    if (scanner.peek() !== quote)\n      return null;\n    scanner.pos++;\n  }\n\n  var tokens = [];\n  var charsTokenToExtend = null;\n\n  var charRef;\n  while (true) {\n    var ch = scanner.peek();\n    var templateTag;\n    var curPos = scanner.pos;\n    if (quote && ch === quote) {\n      scanner.pos++;\n      return tokens;\n    } else if ((! quote) && (HTML_SPACE.test(ch) || ch === '>')) {\n      return tokens;\n    } else if (! ch) {\n      scanner.fatal(\"Unclosed attribute in tag\");\n    } else if (quote ? ch === '\\u0000' : ('\\u0000\"\\'<=`'.indexOf(ch) >= 0)) {\n      scanner.fatal(\"Unexpected character in attribute value\");\n    } else if (ch === '&' &&\n               (charRef = getCharacterReference(scanner, true,\n                                                quote || '>'))) {\n      tokens.push(charRef);\n      charsTokenToExtend = null;\n    } else if (scanner.getTemplateTag &&\n               ((templateTag = scanner.getTemplateTag(\n                 scanner, TEMPLATE_TAG_POSITION.IN_ATTRIBUTE)) ||\n                scanner.pos > curPos /* `{{! comment}}` */)) {\n      if (templateTag) {\n        tokens.push({t: 'TemplateTag',\n                     v: assertIsTemplateTag(templateTag)});\n        charsTokenToExtend = null;\n      }\n    } else {\n      if (! charsTokenToExtend) {\n        charsTokenToExtend = { t: 'Chars', v: '' };\n        tokens.push(charsTokenToExtend);\n      }\n      charsTokenToExtend.v += (ch === '\\r' ? '\\n' : ch);\n      scanner.pos++;\n      if (quote && ch === '\\r' && scanner.peek() === '\\n')\n        scanner.pos++;\n    }\n  }\n};\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\ngetTagToken = HTMLTools.Parse.getTagToken = function (scanner) {\n  if (! (scanner.peek() === '<' && scanner.rest().charAt(1) !== '!'))\n    return null;\n  scanner.pos++;\n\n  var tag = { t: 'Tag' };\n\n  // now looking at the character after `<`, which is not a `!`\n  if (scanner.peek() === '/') {\n    tag.isEnd = true;\n    scanner.pos++;\n  }\n\n  var tagName = getTagName(scanner);\n  if (! tagName)\n    scanner.fatal(\"Expected tag name after `<`\");\n  tag.n = HTMLTools.properCaseTagName(tagName);\n\n  if (scanner.peek() === '/' && tag.isEnd)\n    scanner.fatal(\"End tag can't have trailing slash\");\n  if (handleEndOfTag(scanner, tag))\n    return tag;\n\n  if (scanner.isEOF())\n    scanner.fatal(\"Unclosed `<`\");\n\n  if (! HTML_SPACE.test(scanner.peek()))\n    // e.g. `<a{{b}}>`\n    scanner.fatal(\"Expected space after tag name\");\n\n  // we're now in \"Before attribute name state\" of the tokenizer\n  skipSpaces(scanner);\n\n  if (scanner.peek() === '/' && tag.isEnd)\n    scanner.fatal(\"End tag can't have trailing slash\");\n  if (handleEndOfTag(scanner, tag))\n    return tag;\n\n  if (tag.isEnd)\n    scanner.fatal(\"End tag can't have attributes\");\n\n  tag.attrs = {};\n  var nondynamicAttrs = tag.attrs;\n\n  while (true) {\n    // Note: at the top of this loop, we've already skipped any spaces.\n\n    // This will be set to true if after parsing the attribute, we should\n    // require spaces (or else an end of tag, i.e. `>` or `/>`).\n    var spacesRequiredAfter = false;\n\n    // first, try for a template tag.\n    var curPos = scanner.pos;\n    var templateTag = (scanner.getTemplateTag &&\n                       scanner.getTemplateTag(\n                         scanner, TEMPLATE_TAG_POSITION.IN_START_TAG));\n    if (templateTag || (scanner.pos > curPos)) {\n      if (templateTag) {\n        if (tag.attrs === nondynamicAttrs)\n          tag.attrs = [nondynamicAttrs];\n        tag.attrs.push({ t: 'TemplateTag',\n                         v: assertIsTemplateTag(templateTag) });\n      } // else, must have scanned a `{{! comment}}`\n\n      spacesRequiredAfter = true;\n    } else {\n\n      var attributeName = getAttributeName(scanner);\n      if (! attributeName)\n        scanner.fatal(\"Expected attribute name in tag\");\n      // Throw error on `{` in attribute name.  This provides *some* error message\n      // if someone writes `<a x{{y}}>` or `<a x{{y}}=z>`.  The HTML tokenization\n      // spec doesn't say that `{` is invalid, but the DOM API (setAttribute) won't\n      // allow it, so who cares.\n      if (attributeName.indexOf('{') >= 0)\n        scanner.fatal(\"Unexpected `{` in attribute name.\");\n      attributeName = HTMLTools.properCaseAttributeName(attributeName);\n\n      if (hasOwnProperty.call(nondynamicAttrs, attributeName))\n        scanner.fatal(\"Duplicate attribute in tag: \" + attributeName);\n\n      nondynamicAttrs[attributeName] = [];\n\n      skipSpaces(scanner);\n\n      if (handleEndOfTag(scanner, tag))\n        return tag;\n\n      var ch = scanner.peek();\n      if (! ch)\n        scanner.fatal(\"Unclosed <\");\n      if ('\\u0000\"\\'<'.indexOf(ch) >= 0)\n        scanner.fatal(\"Unexpected character after attribute name in tag\");\n\n      if (ch === '=') {\n        scanner.pos++;\n\n        skipSpaces(scanner);\n\n        ch = scanner.peek();\n        if (! ch)\n          scanner.fatal(\"Unclosed <\");\n        if ('\\u0000><=`'.indexOf(ch) >= 0)\n          scanner.fatal(\"Unexpected character after = in tag\");\n\n        if ((ch === '\"') || (ch === \"'\"))\n          nondynamicAttrs[attributeName] = getAttributeValue(scanner, ch);\n        else\n          nondynamicAttrs[attributeName] = getAttributeValue(scanner);\n\n        spacesRequiredAfter = true;\n      }\n    }\n    // now we are in the \"post-attribute\" position, whether it was a template tag\n    // attribute (like `{{x}}`) or a normal one (like `x` or `x=y`).\n\n    if (handleEndOfTag(scanner, tag))\n      return tag;\n\n    if (scanner.isEOF())\n      scanner.fatal(\"Unclosed `<`\");\n\n    if (spacesRequiredAfter)\n      requireSpaces(scanner);\n    else\n      skipSpaces(scanner);\n\n    if (handleEndOfTag(scanner, tag))\n      return tag;\n  }\n};\n\nTEMPLATE_TAG_POSITION = HTMLTools.TEMPLATE_TAG_POSITION = {\n  ELEMENT: 1,\n  IN_START_TAG: 2,\n  IN_ATTRIBUTE: 3,\n  IN_RCDATA: 4,\n  IN_RAWTEXT: 5\n};\n\n// tagName must be proper case\nisLookingAtEndTag = function (scanner, tagName) {\n  var rest = scanner.rest();\n  var pos = 0; // into rest\n  var firstPart = /^<\\/([a-zA-Z]+)/.exec(rest);\n  if (firstPart &&\n      HTMLTools.properCaseTagName(firstPart[1]) === tagName) {\n    // we've seen `</foo`, now see if the end tag continues\n    pos += firstPart[0].length;\n    while (pos < rest.length && HTML_SPACE.test(rest.charAt(pos)))\n      pos++;\n    if (pos < rest.length && rest.charAt(pos) === '>')\n      return true;\n  }\n  return false;\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/html-tools/templatetag.js                                                                          //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n// _assign is like _.extend or the upcoming Object.assign.\n// Copy src's own, enumerable properties onto tgt and return\n// tgt.\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\nvar _assign = function (tgt, src) {\n  for (var k in src) {\n    if (_hasOwnProperty.call(src, k))\n      tgt[k] = src[k];\n  }\n  return tgt;\n};\n\n\nHTMLTools.TemplateTag = function (props) {\n  if (! (this instanceof HTMLTools.TemplateTag))\n    // called without `new`\n    return new HTMLTools.TemplateTag;\n\n  if (props)\n    _assign(this, props);\n};\n\n_assign(HTMLTools.TemplateTag.prototype, {\n  constructorName: 'HTMLTools.TemplateTag',\n  toJS: function (visitor) {\n    return visitor.generateCall(this.constructorName,\n                                _assign({}, this));\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                             //\n// packages/html-tools/parse.js                                                                                //\n//                                                                                                             //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                               //\n\n// Parse a \"fragment\" of HTML, up to the end of the input or a particular\n// template tag (using the \"shouldStop\" option).\nHTMLTools.parseFragment = function (input, options) {\n  var scanner;\n  if (typeof input === 'string')\n    scanner = new Scanner(input);\n  else\n    // input can be a scanner.  We'd better not have a different\n    // value for the \"getTemplateTag\" option as when the scanner\n    // was created, because we don't do anything special to reset\n    // the value (which is attached to the scanner).\n    scanner = input;\n\n  // ```\n  // { getTemplateTag: function (scanner, templateTagPosition) {\n  //     if (templateTagPosition === HTMLTools.TEMPLATE_TAG_POSITION.ELEMENT) {\n  //       ...\n  // ```\n  if (options && options.getTemplateTag)\n    scanner.getTemplateTag = options.getTemplateTag;\n\n  // function (scanner) -> boolean\n  var shouldStop = options && options.shouldStop;\n\n  var result;\n  if (options && options.textMode) {\n    if (options.textMode === HTML.TEXTMODE.STRING) {\n      result = getRawText(scanner, null, shouldStop);\n    } else if (options.textMode === HTML.TEXTMODE.RCDATA) {\n      result = getRCData(scanner, null, shouldStop);\n    } else {\n      throw new Error(\"Unsupported textMode: \" + options.textMode);\n    }\n  } else {\n    result = getContent(scanner, shouldStop);\n  }\n  if (! scanner.isEOF()) {\n    // If we aren't at the end of the input, we either stopped at an unmatched\n    // HTML end tag or at a template tag (like `{{else}}` or `{{/if}}`).\n    // Detect the former case (stopped at an HTML end tag) and throw a good\n    // error.\n\n    var posBefore = scanner.pos;\n\n    try {\n      var endTag = getHTMLToken(scanner);\n    } catch (e) {\n      // ignore errors from getTemplateTag\n    }\n\n    // XXX we make some assumptions about shouldStop here, like that it\n    // won't tell us to stop at an HTML end tag.  Should refactor\n    // `shouldStop` into something more suitable.\n    if (endTag && endTag.t === 'Tag' && endTag.isEnd) {\n      var closeTag = endTag.n;\n      var isVoidElement = HTML.isVoidElement(closeTag);\n      scanner.fatal(\"Unexpected HTML close tag\" +\n                    (isVoidElement ?\n                     '.  <' + endTag.n + '> should have no close tag.' : ''));\n    }\n\n    scanner.pos = posBefore; // rewind, we'll continue parsing as usual\n\n    // If no \"shouldStop\" option was provided, we should have consumed the whole\n    // input.\n    if (! shouldStop)\n      scanner.fatal(\"Expected EOF\");\n  }\n\n  return result;\n};\n\n// Take a numeric Unicode code point, which may be larger than 16 bits,\n// and encode it as a JavaScript UTF-16 string.\n//\n// Adapted from\n// http://stackoverflow.com/questions/7126384/expressing-utf-16-unicode-characters-in-javascript/7126661.\ncodePointToString = HTMLTools.codePointToString = function(cp) {\n  if (cp >= 0 && cp <= 0xD7FF || cp >= 0xE000 && cp <= 0xFFFF) {\n    return String.fromCharCode(cp);\n  } else if (cp >= 0x10000 && cp <= 0x10FFFF) {\n\n    // we substract 0x10000 from cp to get a 20-bit number\n    // in the range 0..0xFFFF\n    cp -= 0x10000;\n\n    // we add 0xD800 to the number formed by the first 10 bits\n    // to give the first byte\n    var first = ((0xffc00 & cp) >> 10) + 0xD800;\n\n    // we add 0xDC00 to the number formed by the low 10 bits\n    // to give the second byte\n    var second = (0x3ff & cp) + 0xDC00;\n\n    return String.fromCharCode(first) + String.fromCharCode(second);\n  } else {\n    return '';\n  }\n};\n\ngetContent = HTMLTools.Parse.getContent = function (scanner, shouldStopFunc) {\n  var items = [];\n\n  while (! scanner.isEOF()) {\n    if (shouldStopFunc && shouldStopFunc(scanner))\n      break;\n\n    var posBefore = scanner.pos;\n    var token = getHTMLToken(scanner);\n    if (! token)\n      // tokenizer reached EOF on its own, e.g. while scanning\n      // template comments like `{{! foo}}`.\n      continue;\n\n    if (token.t === 'Doctype') {\n      scanner.fatal(\"Unexpected Doctype\");\n    } else if (token.t === 'Chars') {\n      pushOrAppendString(items, token.v);\n    } else if (token.t === 'CharRef') {\n      items.push(convertCharRef(token));\n    } else if (token.t === 'Comment') {\n      items.push(HTML.Comment(token.v));\n    } else if (token.t === 'TemplateTag') {\n      items.push(token.v);\n    } else if (token.t === 'Tag') {\n      if (token.isEnd) {\n        // Stop when we encounter an end tag at the top level.\n        // Rewind; we'll re-parse the end tag later.\n        scanner.pos = posBefore;\n        break;\n      }\n\n      var tagName = token.n;\n      // is this an element with no close tag (a BR, HR, IMG, etc.) based\n      // on its name?\n      var isVoid = HTML.isVoidElement(tagName);\n      if (token.isSelfClosing) {\n        if (! (isVoid || HTML.isKnownSVGElement(tagName) || tagName.indexOf(':') >= 0))\n          scanner.fatal('Only certain elements like BR, HR, IMG, etc. (and foreign elements like SVG) are allowed to self-close');\n      }\n\n      // result of parseAttrs may be null\n      var attrs = parseAttrs(token.attrs);\n      // arrays need to be wrapped in HTML.Attrs(...)\n      // when used to construct tags\n      if (HTML.isArray(attrs))\n        attrs = HTML.Attrs.apply(null, attrs);\n\n      var tagFunc = HTML.getTag(tagName);\n      if (isVoid || token.isSelfClosing) {\n        items.push(attrs ? tagFunc(attrs) : tagFunc());\n      } else {\n        // parse HTML tag contents.\n\n        // HTML treats a final `/` in a tag as part of an attribute, as in `<a href=/foo/>`, but the template author who writes `<circle r={{r}}/>`, say, may not be thinking about that, so generate a good error message in the \"looks like self-close\" case.\n        var looksLikeSelfClose = (scanner.input.substr(scanner.pos - 2, 2) === '/>');\n\n        var content = null;\n        if (token.n === 'textarea') {\n          if (scanner.peek() === '\\n')\n            scanner.pos++;\n          var textareaValue = getRCData(scanner, token.n, shouldStopFunc);\n          if (textareaValue) {\n            if (attrs instanceof HTML.Attrs) {\n              attrs = HTML.Attrs.apply(\n                null, attrs.value.concat([{value: textareaValue}]));\n            } else {\n              attrs = (attrs || {});\n              attrs.value = textareaValue;\n            }\n          }\n        } else if (token.n === 'script' || token.n === 'style') {\n          content = getRawText(scanner, token.n, shouldStopFunc);\n        } else {\n          content = getContent(scanner, shouldStopFunc);\n        }\n\n        var endTag = getHTMLToken(scanner);\n\n        if (! (endTag && endTag.t === 'Tag' && endTag.isEnd && endTag.n === tagName))\n          scanner.fatal('Expected \"' + tagName + '\" end tag' + (looksLikeSelfClose ? ' -- if the \"<' + token.n + ' />\" tag was supposed to self-close, try adding a space before the \"/\"' : ''));\n\n        // XXX support implied end tags in cases allowed by the spec\n\n        // make `content` into an array suitable for applying tag constructor\n        // as in `FOO.apply(null, content)`.\n        if (content == null)\n          content = [];\n        else if (! (content instanceof Array))\n          content = [content];\n\n        items.push(HTML.getTag(tagName).apply(\n          null, (attrs ? [attrs] : []).concat(content)));\n      }\n    } else {\n      scanner.fatal(\"Unknown token type: \" + token.t);\n    }\n  }\n\n  if (items.length === 0)\n    return null;\n  else if (items.length === 1)\n    return items[0];\n  else\n    return items;\n};\n\nvar pushOrAppendString = function (items, string) {\n  if (items.length &&\n      typeof items[items.length - 1] === 'string')\n    items[items.length - 1] += string;\n  else\n    items.push(string);\n};\n\n// get RCDATA to go in the lowercase (or camel case) tagName (e.g. \"textarea\")\ngetRCData = HTMLTools.Parse.getRCData = function (scanner, tagName, shouldStopFunc) {\n  var items = [];\n\n  while (! scanner.isEOF()) {\n    // break at appropriate end tag\n    if (tagName && isLookingAtEndTag(scanner, tagName))\n      break;\n\n    if (shouldStopFunc && shouldStopFunc(scanner))\n      break;\n\n    var token = getHTMLToken(scanner, 'rcdata');\n    if (! token)\n      // tokenizer reached EOF on its own, e.g. while scanning\n      // template comments like `{{! foo}}`.\n      continue;\n\n    if (token.t === 'Chars') {\n      pushOrAppendString(items, token.v);\n    } else if (token.t === 'CharRef') {\n      items.push(convertCharRef(token));\n    } else if (token.t === 'TemplateTag') {\n      items.push(token.v);\n    } else {\n      // (can't happen)\n      scanner.fatal(\"Unknown or unexpected token type: \" + token.t);\n    }\n  }\n\n  if (items.length === 0)\n    return null;\n  else if (items.length === 1)\n    return items[0];\n  else\n    return items;\n};\n\nvar getRawText = function (scanner, tagName, shouldStopFunc) {\n  var items = [];\n\n  while (! scanner.isEOF()) {\n    // break at appropriate end tag\n    if (tagName && isLookingAtEndTag(scanner, tagName))\n      break;\n\n    if (shouldStopFunc && shouldStopFunc(scanner))\n      break;\n\n    var token = getHTMLToken(scanner, 'rawtext');\n    if (! token)\n      // tokenizer reached EOF on its own, e.g. while scanning\n      // template comments like `{{! foo}}`.\n      continue;\n\n    if (token.t === 'Chars') {\n      pushOrAppendString(items, token.v);\n    } else if (token.t === 'TemplateTag') {\n      items.push(token.v);\n    } else {\n      // (can't happen)\n      scanner.fatal(\"Unknown or unexpected token type: \" + token.t);\n    }\n  }\n\n  if (items.length === 0)\n    return null;\n  else if (items.length === 1)\n    return items[0];\n  else\n    return items;\n};\n\n// Input: A token like `{ t: 'CharRef', v: '&amp;', cp: [38] }`.\n//\n// Output: A tag like `HTML.CharRef({ html: '&amp;', str: '&' })`.\nvar convertCharRef = function (token) {\n  var codePoints = token.cp;\n  var str = '';\n  for (var i = 0; i < codePoints.length; i++)\n    str += codePointToString(codePoints[i]);\n  return HTML.CharRef({ html: token.v, str: str });\n};\n\n// Input is always a dictionary (even if zero attributes) and each\n// value in the dictionary is an array of `Chars`, `CharRef`,\n// and maybe `TemplateTag` tokens.\n//\n// Output is null if there are zero attributes, and otherwise a\n// dictionary, or an array of dictionaries and template tags.\n// Each value in the dictionary is HTMLjs (e.g. a\n// string or an array of `Chars`, `CharRef`, and `TemplateTag`\n// nodes).\n//\n// An attribute value with no input tokens is represented as \"\",\n// not an empty array, in order to prop open empty attributes\n// with no template tags.\nvar parseAttrs = function (attrs) {\n  var result = null;\n\n  if (HTML.isArray(attrs)) {\n    // first element is nondynamic attrs, rest are template tags\n    var nondynamicAttrs = parseAttrs(attrs[0]);\n    if (nondynamicAttrs) {\n      result = (result || []);\n      result.push(nondynamicAttrs);\n    }\n    for (var i = 1; i < attrs.length; i++) {\n      var token = attrs[i];\n      if (token.t !== 'TemplateTag')\n        throw new Error(\"Expected TemplateTag token\");\n      result = (result || []);\n      result.push(token.v);\n    }\n    return result;\n  }\n\n  for (var k in attrs) {\n    if (! result)\n      result = {};\n\n    var inValue = attrs[k];\n    var outParts = [];\n    for (var i = 0; i < inValue.length; i++) {\n      var token = inValue[i];\n      if (token.t === 'CharRef') {\n        outParts.push(convertCharRef(token));\n      } else if (token.t === 'TemplateTag') {\n        outParts.push(token.v);\n      } else if (token.t === 'Chars') {\n        pushOrAppendString(outParts, token.v);\n      }\n    }\n\n    var outValue = (inValue.length === 0 ? '' :\n                    (outParts.length === 1 ? outParts[0] : outParts));\n    var properKey = HTMLTools.properCaseAttributeName(k);\n    result[properKey] = outValue;\n  }\n\n  return result;\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['html-tools'] = {}, {\n  HTMLTools: HTMLTools\n});\n\n})();\n\n//# sourceMappingURL=html-tools.js.map\n"]},"hash":"910121bc8c9cda90a0b292fc63195937feee3367"}

{"metadata":{"usedHelpers":["typeof"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/bundle/programs/server/packages/babel-runtime.js","filenameRelative":"/bundle/programs/server/packages/babel-runtime.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/bundle/programs/server/packages/babel-runtime.js.map","sourceFileName":"/bundle/programs/server/packages/babel-runtime.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"babel-runtime"},"ignored":false,"code":"var _typeof;module.import(\"babel-runtime/helpers/typeof\",{\"default\":function(v){_typeof=v}});\n(function () {\n\n  /* Imports */\n  var Meteor = Package.meteor.Meteor;\n  var global = Package.meteor.global;\n  var meteorEnv = Package.meteor.meteorEnv;\n  var meteorInstall = Package.modules.meteorInstall;\n  var Buffer = Package.modules.Buffer;\n  var process = Package.modules.process;\n  var Promise = Package.promise.Promise;\n\n  /* Package-scope variables */\n  var meteorBabelHelpers;\n\n  var require = meteorInstall({ \"node_modules\": { \"meteor\": { \"babel-runtime\": { \"babel-runtime.js\": [\"meteor-babel-helpers\", \"regenerator-runtime\", function (require, exports, module) {\n\n            /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n            //                                                                                                         //\n            // packages/babel-runtime/babel-runtime.js                                                                 //\n            //                                                                                                         //\n            /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n            //\n            var hasOwn = Object.prototype.hasOwnProperty;\n            var S = typeof Symbol === \"function\" ? Symbol : {};\n            var iteratorSymbol = S.iterator || \"@@iterator\";\n\n            meteorBabelHelpers = require(\"meteor-babel-helpers\");\n\n            var BabelRuntime = {\n              // es6.templateLiterals\n              // Constructs the object passed to the tag function in a tagged\n              // template literal.\n              taggedTemplateLiteralLoose: function taggedTemplateLiteralLoose(strings, raw) {\n                // Babel's own version of this calls Object.freeze on `strings` and\n                // `strings.raw`, but it doesn't seem worth the compatibility and\n                // performance concerns.  If you're writing code against this helper,\n                // don't add properties to these objects.\n                strings.raw = raw;\n                return strings;\n              },\n\n              // es6.classes\n              // Checks that a class constructor is being called with `new`, and throws\n              // an error if it is not.\n              classCallCheck: function classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                  throw new TypeError(\"Cannot call a class as a function\");\n                }\n              },\n\n              // es6.classes\n              inherits: function inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                  throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n                }\n\n                if (superClass) {\n                  if (Object.create) {\n                    // All but IE 8\n                    subClass.prototype = Object.create(superClass.prototype, {\n                      constructor: {\n                        value: subClass,\n                        enumerable: false,\n                        writable: true,\n                        configurable: true\n                      }\n                    });\n                  } else {\n                    // IE 8 path.  Slightly worse for modern browsers, because `constructor`\n                    // is enumerable and shows up in the inspector unnecessarily.\n                    // It's not an \"own\" property of any instance though.\n                    //\n                    // For correctness when writing code,\n                    // don't enumerate all the own-and-inherited properties of an instance\n                    // of a class and expect not to find `constructor` (but who does that?).\n                    var F = function F() {\n                      this.constructor = subClass;\n                    };\n                    F.prototype = superClass.prototype;\n                    subClass.prototype = new F();\n                  }\n\n                  // For modern browsers, this would be `subClass.__proto__ = superClass`,\n                  // but IE <=10 don't support `__proto__`, and in this case the difference\n                  // would be detectable; code that works in modern browsers could easily\n                  // fail on IE 8 if we ever used the `__proto__` trick.\n                  //\n                  // There's no perfect way to make static methods inherited if they are\n                  // assigned after declaration of the classes.  The best we can do is\n                  // to copy them.  In other words, when you write `class Foo\n                  // extends Bar`, we copy the static methods from Bar onto Foo, but future\n                  // ones are not copied.\n                  //\n                  // For correctness when writing code, don't add static methods to a class\n                  // after you subclass it.\n\n                  // The ecmascript-runtime package provides adequate polyfills for\n                  // all of these Object.* functions (and Array#forEach), and anyone\n                  // using babel-runtime is almost certainly using it because of the\n                  // ecmascript package, which also implies ecmascript-runtime.\n                  Object.getOwnPropertyNames(superClass).forEach(function (k) {\n                    // This property descriptor dance preserves getter/setter behavior\n                    // in browsers that support accessor properties (all except\n                    // IE8). In IE8, the superClass can't have accessor properties\n                    // anyway, so this code is still safe.\n                    var descriptor = Object.getOwnPropertyDescriptor(superClass, k);\n                    if (descriptor && (typeof descriptor === \"undefined\" ? \"undefined\" : _typeof(descriptor)) === \"object\") {\n                      if (Object.getOwnPropertyDescriptor(subClass, k)) {\n                        // If subClass already has a property by this name, then it\n                        // would not be inherited, so it should not be copied. This\n                        // notably excludes properties like .prototype and .name.\n                        return;\n                      }\n\n                      Object.defineProperty(subClass, k, descriptor);\n                    }\n                  });\n                }\n              },\n\n              createClass: function () {\n                var hasDefineProperty = false;\n                try {\n                  // IE 8 has a broken Object.defineProperty, so feature-test by\n                  // trying to call it.\n                  Object.defineProperty({}, 'x', {});\n                  hasDefineProperty = true;\n                } catch (e) {}\n\n                function defineProperties(target, props) {\n                  for (var i = 0; i < props.length; i++) {\n                    var descriptor = props[i];\n                    descriptor.enumerable = descriptor.enumerable || false;\n                    descriptor.configurable = true;\n                    if (\"value\" in descriptor) descriptor.writable = true;\n                    Object.defineProperty(target, descriptor.key, descriptor);\n                  }\n                }\n\n                return function (Constructor, protoProps, staticProps) {\n                  if (!hasDefineProperty) {\n                    // e.g. `class Foo { get bar() {} }`.  If you try to use getters and\n                    // setters in IE 8, you will get a big nasty error, with or without\n                    // Babel.  I don't know of any other syntax features besides getters\n                    // and setters that will trigger this error.\n                    throw new Error(\"Your browser does not support this type of class property.  \" + \"For example, Internet Explorer 8 does not support getters and \" + \"setters.\");\n                  }\n\n                  if (protoProps) defineProperties(Constructor.prototype, protoProps);\n                  if (staticProps) defineProperties(Constructor, staticProps);\n                  return Constructor;\n                };\n              }(),\n\n              \"typeof\": function _typeof(obj) {\n                return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj);\n              },\n\n              possibleConstructorReturn: function possibleConstructorReturn(self, call) {\n                if (!self) {\n                  throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }\n\n                var callType = typeof call === \"undefined\" ? \"undefined\" : _typeof(call);\n                if (call && callType === \"function\" || callType === \"object\") {\n                  return call;\n                }\n\n                return self;\n              },\n\n              interopRequireDefault: function interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { 'default': obj };\n              },\n\n              interopRequireWildcard: function interopRequireWildcard(obj) {\n                if (obj && obj.__esModule) {\n                  return obj;\n                }\n\n                var newObj = {};\n\n                if (obj != null) {\n                  for (var key in obj) {\n                    if (hasOwn.call(obj, key)) {\n                      newObj[key] = obj[key];\n                    }\n                  }\n                }\n\n                newObj[\"default\"] = obj;\n                return newObj;\n              },\n\n              interopExportWildcard: function interopExportWildcard(obj, defaults) {\n                var newObj = defaults({}, obj);\n                delete newObj[\"default\"];\n                return newObj;\n              },\n\n              defaults: function defaults(obj, _defaults) {\n                Object.getOwnPropertyNames(_defaults).forEach(function (key) {\n                  var desc = Object.getOwnPropertyDescriptor(_defaults, key);\n                  if (desc && desc.configurable && typeof obj[key] === \"undefined\") {\n                    Object.defineProperty(obj, key, desc);\n                  }\n                });\n\n                return obj;\n              },\n\n              // es7.objectRestSpread and react (JSX)\n              \"extends\": Object.assign || function (target) {\n                for (var i = 1; i < arguments.length; i++) {\n                  var source = arguments[i];\n                  for (var key in source) {\n                    if (hasOwn.call(source, key)) {\n                      target[key] = source[key];\n                    }\n                  }\n                }\n                return target;\n              },\n\n              // es6.destructuring\n              objectWithoutProperties: function objectWithoutProperties(obj, keys) {\n                var target = {};\n                outer: for (var i in obj) {\n                  if (!hasOwn.call(obj, i)) continue;\n                  for (var j = 0; j < keys.length; j++) {\n                    if (keys[j] === i) continue outer;\n                  }\n                  target[i] = obj[i];\n                }\n                return target;\n              },\n\n              // es6.destructuring\n              objectDestructuringEmpty: function objectDestructuringEmpty(obj) {\n                if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n              },\n\n              // es6.spread\n              bind: Function.prototype.bind || function () {\n                var isCallable = function isCallable(value) {\n                  return typeof value === 'function';\n                };\n                var $Object = Object;\n                var to_string = Object.prototype.toString;\n                var array_slice = Array.prototype.slice;\n                var array_concat = Array.prototype.concat;\n                var array_push = Array.prototype.push;\n                var max = Math.max;\n                var Empty = function Empty() {};\n\n                // Copied from es5-shim.js (3ac7942).  See original for more comments.\n                return function bind(that) {\n                  var target = this;\n                  if (!isCallable(target)) {\n                    throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n                  }\n\n                  var args = array_slice.call(arguments, 1);\n\n                  var bound;\n                  var binder = function binder() {\n\n                    if (this instanceof bound) {\n                      var result = target.apply(this, array_concat.call(args, array_slice.call(arguments)));\n                      if ($Object(result) === result) {\n                        return result;\n                      }\n                      return this;\n                    } else {\n                      return target.apply(that, array_concat.call(args, array_slice.call(arguments)));\n                    }\n                  };\n\n                  var boundLength = max(0, target.length - args.length);\n\n                  var boundArgs = [];\n                  for (var i = 0; i < boundLength; i++) {\n                    array_push.call(boundArgs, '$' + i);\n                  }\n\n                  // Create a Function from source code so that it has the right `.length`.\n                  // Probably not important for Babel.  This code violates CSPs that ban\n                  // `eval`, but the browsers that need this polyfill don't have CSP!\n                  bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n\n                  if (target.prototype) {\n                    Empty.prototype = target.prototype;\n                    bound.prototype = new Empty();\n                    Empty.prototype = null;\n                  }\n\n                  return bound;\n                };\n              }(),\n\n              toConsumableArray: function toConsumableArray(arr) {\n                if (Array.isArray(arr)) {\n                  for (var i = arr.length - 1, arr2 = Array(i + 1); i >= 0; --i) {\n                    arr2[i] = arr[i];\n                  }\n\n                  return arr2;\n                }\n\n                return Array.from(arr);\n              },\n\n              toArray: function toArray(arr) {\n                return Array.isArray(arr) ? arr : Array.from(arr);\n              },\n\n              slicedToArray: function slicedToArray(iterable, limit) {\n                if (Array.isArray(iterable)) {\n                  return iterable;\n                }\n\n                if (iterable) {\n                  var it = iterable[iteratorSymbol]();\n                  var result = [];\n                  var info;\n\n                  if (typeof limit !== \"number\") {\n                    limit = Infinity;\n                  }\n\n                  while (result.length < limit && !(info = it.next()).done) {\n                    result.push(info.value);\n                  }\n\n                  return result;\n                }\n\n                throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n              },\n\n              slice: Array.prototype.slice\n            };\n\n            // Use meteorInstall to install all of the above helper functions within\n            // node_modules/babel-runtime/helpers.\n            Object.keys(BabelRuntime).forEach(function (helperName) {\n              var helpers = {};\n\n              helpers[helperName + \".js\"] = function (require, exports, module) {\n                module.exports = BabelRuntime[helperName];\n              };\n\n              meteorInstall({\n                node_modules: {\n                  \"babel-runtime\": {\n                    helpers: helpers\n                  }\n                }\n              });\n            });\n\n            // Use meteorInstall to install the regenerator runtime at\n            // node_modules/babel-runtime/regenerator.\n            meteorInstall({\n              node_modules: {\n                \"babel-runtime\": {\n                  \"regenerator.js\": function regeneratorJs(r, e, module) {\n                    // Note that we use the require function provided to the\n                    // babel-runtime.js file, not the one named 'r' above.\n                    var runtime = require(\"regenerator-runtime\");\n\n                    // If Promise.asyncApply is defined, use it to wrap calls to\n                    // runtime.async so that the entire async function will run in its\n                    // own Fiber, not just the code that comes after the first await.\n                    if (typeof Promise === \"function\" && typeof Promise.asyncApply === \"function\") {\n                      var realAsync = runtime.async;\n                      runtime.async = function () {\n                        return Promise.asyncApply(realAsync, runtime, arguments);\n                      };\n                    }\n\n                    module.exports = runtime;\n                  }\n                }\n              }\n            });\n\n            /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n          }], \"node_modules\": { \"meteor-babel-helpers\": { \"package.json\": function packageJson(require, exports) {\n\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                //                                                                                                         //\n                // ../npm/node_modules/meteor-babel-helpers/package.json                                                   //\n                //                                                                                                         //\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                //\n                exports.name = \"meteor-babel-helpers\";\n                exports.version = \"0.0.3\";\n                exports.main = \"index.js\";\n\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n              }, \"index.js\": function indexJs(require, exports, module) {\n\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                //                                                                                                         //\n                // node_modules/meteor/babel-runtime/node_modules/meteor-babel-helpers/index.js                            //\n                //                                                                                                         //\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                //\n                function canDefineNonEnumerableProperties() {\n                  var testObj = {};\n                  var testPropName = \"t\";\n\n                  try {\n                    Object.defineProperty(testObj, testPropName, {\n                      enumerable: false,\n                      value: testObj\n                    });\n\n                    for (var k in testObj) {\n                      if (k === testPropName) {\n                        return false;\n                      }\n                    }\n                  } catch (e) {\n                    return false;\n                  }\n\n                  return testObj[testPropName] === testObj;\n                }\n\n                function sanitizeEasy(value) {\n                  return value;\n                }\n\n                function sanitizeHard(obj) {\n                  if (Array.isArray(obj)) {\n                    var newObj = {};\n                    var keys = Object.keys(obj);\n                    var keyCount = keys.length;\n                    for (var i = 0; i < keyCount; ++i) {\n                      var key = keys[i];\n                      newObj[key] = obj[key];\n                    }\n                    return newObj;\n                  }\n\n                  return obj;\n                }\n\n                meteorBabelHelpers = module.exports = {\n                  // Meteor-specific runtime helper for wrapping the object of for-in\n                  // loops, so that inherited Array methods defined by es5-shim can be\n                  // ignored in browsers where they cannot be defined as non-enumerable.\n                  sanitizeForInObject: canDefineNonEnumerableProperties() ? sanitizeEasy : sanitizeHard,\n\n                  // Exposed so that we can test sanitizeForInObject in environments that\n                  // support defining non-enumerable properties.\n                  _sanitizeForInObjectHard: sanitizeHard\n                };\n\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n              } }, \"regenerator-runtime\": { \"package.json\": function packageJson(require, exports, module) {\n\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                //                                                                                                         //\n                // ../npm/node_modules/regenerator-runtime/package.json                                                    //\n                //                                                                                                         //\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                //\n                exports.name = \"regenerator-runtime\";\n                exports.version = \"0.9.5\";\n                exports.main = \"runtime-module.js\";\n\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n              }, \"runtime-module.js\": [\"./runtime\", function (require, exports, module) {\n\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                //                                                                                                         //\n                // node_modules/meteor/babel-runtime/node_modules/regenerator-runtime/runtime-module.js                    //\n                //                                                                                                         //\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                //\n                // This method of obtaining a reference to the global object needs to be\n                // kept identical to the way it is obtained in runtime.js\n                var g = (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) === \"object\" ? global : (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\" ? window : (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === \"object\" ? self : this;\n\n                // Use `getOwnPropertyNames` because not all browsers support calling\n                // `hasOwnProperty` on the global `self` object in a worker. See #183.\n                var hadRuntime = g.regeneratorRuntime && Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n                // Save the old regeneratorRuntime in case it needs to be restored later.\n                var oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n                // Force reevalutation of runtime.js.\n                g.regeneratorRuntime = undefined;\n\n                module.exports = require(\"./runtime\");\n\n                if (hadRuntime) {\n                  // Restore the original runtime.\n                  g.regeneratorRuntime = oldRuntime;\n                } else {\n                  // Remove the global property added by runtime.js.\n                  try {\n                    delete g.regeneratorRuntime;\n                  } catch (e) {\n                    g.regeneratorRuntime = undefined;\n                  }\n                }\n\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n              }], \"runtime.js\": function runtimeJs(require, exports, module) {\n\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                //                                                                                                         //\n                // node_modules/meteor/babel-runtime/node_modules/regenerator-runtime/runtime.js                           //\n                //                                                                                                         //\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                //\n                /**\n                 * Copyright (c) 2014, Facebook, Inc.\n                 * All rights reserved.\n                 *\n                 * This source code is licensed under the BSD-style license found in the\n                 * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n                 * additional grant of patent rights can be found in the PATENTS file in\n                 * the same directory.\n                 */\n\n                !function (global) {\n                  \"use strict\";\n\n                  var hasOwn = Object.prototype.hasOwnProperty;\n                  var undefined; // More compressible than void 0.\n                  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n                  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n                  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n                  var inModule = (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) === \"object\";\n                  var runtime = global.regeneratorRuntime;\n                  if (runtime) {\n                    if (inModule) {\n                      // If regeneratorRuntime is defined globally and we're in a module,\n                      // make the exports object identical to regeneratorRuntime.\n                      module.exports = runtime;\n                    }\n                    // Don't bother evaluating the rest of this file if the runtime was\n                    // already defined globally.\n                    return;\n                  }\n\n                  // Define the runtime globally (as expected by generated code) as either\n                  // module.exports (if we're in a module) or a new, empty object.\n                  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n                  function wrap(innerFn, outerFn, self, tryLocsList) {\n                    // If outerFn provided, then outerFn.prototype instanceof Generator.\n                    var generator = Object.create((outerFn || Generator).prototype);\n                    var context = new Context(tryLocsList || []);\n\n                    // The ._invoke method unifies the implementations of the .next,\n                    // .throw, and .return methods.\n                    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n                    return generator;\n                  }\n                  runtime.wrap = wrap;\n\n                  // Try/catch helper to minimize deoptimizations. Returns a completion\n                  // record like context.tryEntries[i].completion. This interface could\n                  // have been (and was previously) designed to take a closure to be\n                  // invoked without arguments, but in all the cases we care about we\n                  // already have an existing method we want to call, so there's no need\n                  // to create a new function object. We can even get away with assuming\n                  // the method takes exactly one argument, since that happens to be true\n                  // in every case, so we don't have to touch the arguments object. The\n                  // only additional allocation required is the completion record, which\n                  // has a stable shape and so hopefully should be cheap to allocate.\n                  function tryCatch(fn, obj, arg) {\n                    try {\n                      return { type: \"normal\", arg: fn.call(obj, arg) };\n                    } catch (err) {\n                      return { type: \"throw\", arg: err };\n                    }\n                  }\n\n                  var GenStateSuspendedStart = \"suspendedStart\";\n                  var GenStateSuspendedYield = \"suspendedYield\";\n                  var GenStateExecuting = \"executing\";\n                  var GenStateCompleted = \"completed\";\n\n                  // Returning this object from the innerFn has the same effect as\n                  // breaking out of the dispatch switch statement.\n                  var ContinueSentinel = {};\n\n                  // Dummy constructor functions that we use as the .constructor and\n                  // .constructor.prototype properties for functions that return Generator\n                  // objects. For full spec compliance, you may wish to configure your\n                  // minifier not to mangle the names of these two functions.\n                  function Generator() {}\n                  function GeneratorFunction() {}\n                  function GeneratorFunctionPrototype() {}\n\n                  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n                  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n                  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n                  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n\n                  // Helper for defining the .next, .throw, and .return methods of the\n                  // Iterator interface in terms of a single ._invoke method.\n                  function defineIteratorMethods(prototype) {\n                    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n                      prototype[method] = function (arg) {\n                        return this._invoke(method, arg);\n                      };\n                    });\n                  }\n\n                  runtime.isGeneratorFunction = function (genFun) {\n                    var ctor = typeof genFun === \"function\" && genFun.constructor;\n                    return ctor ? ctor === GeneratorFunction ||\n                    // For the native GeneratorFunction constructor, the best we can\n                    // do is to check its .name property.\n                    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n                  };\n\n                  runtime.mark = function (genFun) {\n                    if (Object.setPrototypeOf) {\n                      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n                    } else {\n                      genFun.__proto__ = GeneratorFunctionPrototype;\n                      if (!(toStringTagSymbol in genFun)) {\n                        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n                      }\n                    }\n                    genFun.prototype = Object.create(Gp);\n                    return genFun;\n                  };\n\n                  // Within the body of any async function, `await x` is transformed to\n                  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n                  // `value instanceof AwaitArgument` to determine if the yielded value is\n                  // meant to be awaited. Some may consider the name of this method too\n                  // cutesy, but they are curmudgeons.\n                  runtime.awrap = function (arg) {\n                    return new AwaitArgument(arg);\n                  };\n\n                  function AwaitArgument(arg) {\n                    this.arg = arg;\n                  }\n\n                  function AsyncIterator(generator) {\n                    function invoke(method, arg, resolve, reject) {\n                      var record = tryCatch(generator[method], generator, arg);\n                      if (record.type === \"throw\") {\n                        reject(record.arg);\n                      } else {\n                        var result = record.arg;\n                        var value = result.value;\n                        if (value instanceof AwaitArgument) {\n                          return Promise.resolve(value.arg).then(function (value) {\n                            invoke(\"next\", value, resolve, reject);\n                          }, function (err) {\n                            invoke(\"throw\", err, resolve, reject);\n                          });\n                        }\n\n                        return Promise.resolve(value).then(function (unwrapped) {\n                          // When a yielded Promise is resolved, its final value becomes\n                          // the .value of the Promise<{value,done}> result for the\n                          // current iteration. If the Promise is rejected, however, the\n                          // result for this iteration will be rejected with the same\n                          // reason. Note that rejections of yielded Promises are not\n                          // thrown back into the generator function, as is the case\n                          // when an awaited Promise is rejected. This difference in\n                          // behavior between yield and await is important, because it\n                          // allows the consumer to decide what to do with the yielded\n                          // rejection (swallow it and continue, manually .throw it back\n                          // into the generator, abandon iteration, whatever). With\n                          // await, by contrast, there is no opportunity to examine the\n                          // rejection reason outside the generator function, so the\n                          // only option is to throw it from the await expression, and\n                          // let the generator function handle the exception.\n                          result.value = unwrapped;\n                          resolve(result);\n                        }, reject);\n                      }\n                    }\n\n                    if ((typeof process === \"undefined\" ? \"undefined\" : _typeof(process)) === \"object\" && process.domain) {\n                      invoke = process.domain.bind(invoke);\n                    }\n\n                    var previousPromise;\n\n                    function enqueue(method, arg) {\n                      function callInvokeWithMethodAndArg() {\n                        return new Promise(function (resolve, reject) {\n                          invoke(method, arg, resolve, reject);\n                        });\n                      }\n\n                      return previousPromise =\n                      // If enqueue has been called before, then we want to wait until\n                      // all previous Promises have been resolved before calling invoke,\n                      // so that results are always delivered in the correct order. If\n                      // enqueue has not been called before, then it is important to\n                      // call invoke immediately, without waiting on a callback to fire,\n                      // so that the async generator function has the opportunity to do\n                      // any necessary setup in a predictable way. This predictability\n                      // is why the Promise constructor synchronously invokes its\n                      // executor callback, and why async functions synchronously\n                      // execute code before the first await. Since we implement simple\n                      // async functions in terms of async generators, it is especially\n                      // important to get this right, even though it requires care.\n                      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg,\n                      // Avoid propagating failures to Promises returned by later\n                      // invocations of the iterator.\n                      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n                    }\n\n                    // Define the unified helper method that is used to implement .next,\n                    // .throw, and .return (see defineIteratorMethods).\n                    this._invoke = enqueue;\n                  }\n\n                  defineIteratorMethods(AsyncIterator.prototype);\n\n                  // Note that simple async functions are implemented on top of\n                  // AsyncIterator objects; they just return a Promise for the value of\n                  // the final result produced by the iterator.\n                  runtime.async = function (innerFn, outerFn, self, tryLocsList) {\n                    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n\n                    return runtime.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n                    : iter.next().then(function (result) {\n                      return result.done ? result.value : iter.next();\n                    });\n                  };\n\n                  function makeInvokeMethod(innerFn, self, context) {\n                    var state = GenStateSuspendedStart;\n\n                    return function invoke(method, arg) {\n                      if (state === GenStateExecuting) {\n                        throw new Error(\"Generator is already running\");\n                      }\n\n                      if (state === GenStateCompleted) {\n                        if (method === \"throw\") {\n                          throw arg;\n                        }\n\n                        // Be forgiving, per 25.3.3.3.3 of the spec:\n                        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n                        return doneResult();\n                      }\n\n                      while (true) {\n                        var delegate = context.delegate;\n                        if (delegate) {\n                          if (method === \"return\" || method === \"throw\" && delegate.iterator[method] === undefined) {\n                            // A return or throw (when the delegate iterator has no throw\n                            // method) always terminates the yield* loop.\n                            context.delegate = null;\n\n                            // If the delegate iterator has a return method, give it a\n                            // chance to clean up.\n                            var returnMethod = delegate.iterator[\"return\"];\n                            if (returnMethod) {\n                              var record = tryCatch(returnMethod, delegate.iterator, arg);\n                              if (record.type === \"throw\") {\n                                // If the return method threw an exception, let that\n                                // exception prevail over the original return or throw.\n                                method = \"throw\";\n                                arg = record.arg;\n                                continue;\n                              }\n                            }\n\n                            if (method === \"return\") {\n                              // Continue with the outer return, now that the delegate\n                              // iterator has been terminated.\n                              continue;\n                            }\n                          }\n\n                          var record = tryCatch(delegate.iterator[method], delegate.iterator, arg);\n\n                          if (record.type === \"throw\") {\n                            context.delegate = null;\n\n                            // Like returning generator.throw(uncaught), but without the\n                            // overhead of an extra function call.\n                            method = \"throw\";\n                            arg = record.arg;\n                            continue;\n                          }\n\n                          // Delegate generator ran and handled its own exceptions so\n                          // regardless of what the method was, we continue as if it is\n                          // \"next\" with an undefined arg.\n                          method = \"next\";\n                          arg = undefined;\n\n                          var info = record.arg;\n                          if (info.done) {\n                            context[delegate.resultName] = info.value;\n                            context.next = delegate.nextLoc;\n                          } else {\n                            state = GenStateSuspendedYield;\n                            return info;\n                          }\n\n                          context.delegate = null;\n                        }\n\n                        if (method === \"next\") {\n                          // Setting context._sent for legacy support of Babel's\n                          // function.sent implementation.\n                          context.sent = context._sent = arg;\n                        } else if (method === \"throw\") {\n                          if (state === GenStateSuspendedStart) {\n                            state = GenStateCompleted;\n                            throw arg;\n                          }\n\n                          if (context.dispatchException(arg)) {\n                            // If the dispatched exception was caught by a catch block,\n                            // then let that catch block handle the exception normally.\n                            method = \"next\";\n                            arg = undefined;\n                          }\n                        } else if (method === \"return\") {\n                          context.abrupt(\"return\", arg);\n                        }\n\n                        state = GenStateExecuting;\n\n                        var record = tryCatch(innerFn, self, context);\n                        if (record.type === \"normal\") {\n                          // If an exception is thrown from innerFn, we leave state ===\n                          // GenStateExecuting and loop back for another invocation.\n                          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n                          var info = {\n                            value: record.arg,\n                            done: context.done\n                          };\n\n                          if (record.arg === ContinueSentinel) {\n                            if (context.delegate && method === \"next\") {\n                              // Deliberately forget the last sent value so that we don't\n                              // accidentally pass it on to the delegate.\n                              arg = undefined;\n                            }\n                          } else {\n                            return info;\n                          }\n                        } else if (record.type === \"throw\") {\n                          state = GenStateCompleted;\n                          // Dispatch the exception by looping back around to the\n                          // context.dispatchException(arg) call above.\n                          method = \"throw\";\n                          arg = record.arg;\n                        }\n                      }\n                    };\n                  }\n\n                  // Define Generator.prototype.{next,throw,return} in terms of the\n                  // unified ._invoke helper method.\n                  defineIteratorMethods(Gp);\n\n                  Gp[iteratorSymbol] = function () {\n                    return this;\n                  };\n\n                  Gp[toStringTagSymbol] = \"Generator\";\n\n                  Gp.toString = function () {\n                    return \"[object Generator]\";\n                  };\n\n                  function pushTryEntry(locs) {\n                    var entry = { tryLoc: locs[0] };\n\n                    if (1 in locs) {\n                      entry.catchLoc = locs[1];\n                    }\n\n                    if (2 in locs) {\n                      entry.finallyLoc = locs[2];\n                      entry.afterLoc = locs[3];\n                    }\n\n                    this.tryEntries.push(entry);\n                  }\n\n                  function resetTryEntry(entry) {\n                    var record = entry.completion || {};\n                    record.type = \"normal\";\n                    delete record.arg;\n                    entry.completion = record;\n                  }\n\n                  function Context(tryLocsList) {\n                    // The root entry object (effectively a try statement without a catch\n                    // or a finally block) gives us a place to store values thrown from\n                    // locations where there is no enclosing try statement.\n                    this.tryEntries = [{ tryLoc: \"root\" }];\n                    tryLocsList.forEach(pushTryEntry, this);\n                    this.reset(true);\n                  }\n\n                  runtime.keys = function (object) {\n                    var keys = [];\n                    for (var key in object) {\n                      keys.push(key);\n                    }\n                    keys.reverse();\n\n                    // Rather than returning an object with a next method, we keep\n                    // things simple and return the next function itself.\n                    return function next() {\n                      while (keys.length) {\n                        var key = keys.pop();\n                        if (key in object) {\n                          next.value = key;\n                          next.done = false;\n                          return next;\n                        }\n                      }\n\n                      // To avoid creating an additional object, we just hang the .value\n                      // and .done properties off the next function object itself. This\n                      // also ensures that the minifier will not anonymize the function.\n                      next.done = true;\n                      return next;\n                    };\n                  };\n\n                  function values(iterable) {\n                    if (iterable) {\n                      var iteratorMethod = iterable[iteratorSymbol];\n                      if (iteratorMethod) {\n                        return iteratorMethod.call(iterable);\n                      }\n\n                      if (typeof iterable.next === \"function\") {\n                        return iterable;\n                      }\n\n                      if (!isNaN(iterable.length)) {\n                        var i = -1,\n                            next = function next() {\n                          while (++i < iterable.length) {\n                            if (hasOwn.call(iterable, i)) {\n                              next.value = iterable[i];\n                              next.done = false;\n                              return next;\n                            }\n                          }\n\n                          next.value = undefined;\n                          next.done = true;\n\n                          return next;\n                        };\n\n                        return next.next = next;\n                      }\n                    }\n\n                    // Return an iterator with no values.\n                    return { next: doneResult };\n                  }\n                  runtime.values = values;\n\n                  function doneResult() {\n                    return { value: undefined, done: true };\n                  }\n\n                  Context.prototype = {\n                    constructor: Context,\n\n                    reset: function reset(skipTempReset) {\n                      this.prev = 0;\n                      this.next = 0;\n                      // Resetting context._sent for legacy support of Babel's\n                      // function.sent implementation.\n                      this.sent = this._sent = undefined;\n                      this.done = false;\n                      this.delegate = null;\n\n                      this.tryEntries.forEach(resetTryEntry);\n\n                      if (!skipTempReset) {\n                        for (var name in this) {\n                          // Not sure about the optimal order of these conditions:\n                          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n                            this[name] = undefined;\n                          }\n                        }\n                      }\n                    },\n\n                    stop: function stop() {\n                      this.done = true;\n\n                      var rootEntry = this.tryEntries[0];\n                      var rootRecord = rootEntry.completion;\n                      if (rootRecord.type === \"throw\") {\n                        throw rootRecord.arg;\n                      }\n\n                      return this.rval;\n                    },\n\n                    dispatchException: function dispatchException(exception) {\n                      if (this.done) {\n                        throw exception;\n                      }\n\n                      var context = this;\n                      function handle(loc, caught) {\n                        record.type = \"throw\";\n                        record.arg = exception;\n                        context.next = loc;\n                        return !!caught;\n                      }\n\n                      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n                        var entry = this.tryEntries[i];\n                        var record = entry.completion;\n\n                        if (entry.tryLoc === \"root\") {\n                          // Exception thrown outside of any try block that could handle\n                          // it, so set the completion value of the entire function to\n                          // throw the exception.\n                          return handle(\"end\");\n                        }\n\n                        if (entry.tryLoc <= this.prev) {\n                          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n                          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n                          if (hasCatch && hasFinally) {\n                            if (this.prev < entry.catchLoc) {\n                              return handle(entry.catchLoc, true);\n                            } else if (this.prev < entry.finallyLoc) {\n                              return handle(entry.finallyLoc);\n                            }\n                          } else if (hasCatch) {\n                            if (this.prev < entry.catchLoc) {\n                              return handle(entry.catchLoc, true);\n                            }\n                          } else if (hasFinally) {\n                            if (this.prev < entry.finallyLoc) {\n                              return handle(entry.finallyLoc);\n                            }\n                          } else {\n                            throw new Error(\"try statement without catch or finally\");\n                          }\n                        }\n                      }\n                    },\n\n                    abrupt: function abrupt(type, arg) {\n                      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n                        var entry = this.tryEntries[i];\n                        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n                          var finallyEntry = entry;\n                          break;\n                        }\n                      }\n\n                      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n                        // Ignore the finally entry if control is not jumping to a\n                        // location outside the try/catch block.\n                        finallyEntry = null;\n                      }\n\n                      var record = finallyEntry ? finallyEntry.completion : {};\n                      record.type = type;\n                      record.arg = arg;\n\n                      if (finallyEntry) {\n                        this.next = finallyEntry.finallyLoc;\n                      } else {\n                        this.complete(record);\n                      }\n\n                      return ContinueSentinel;\n                    },\n\n                    complete: function complete(record, afterLoc) {\n                      if (record.type === \"throw\") {\n                        throw record.arg;\n                      }\n\n                      if (record.type === \"break\" || record.type === \"continue\") {\n                        this.next = record.arg;\n                      } else if (record.type === \"return\") {\n                        this.rval = record.arg;\n                        this.next = \"end\";\n                      } else if (record.type === \"normal\" && afterLoc) {\n                        this.next = afterLoc;\n                      }\n                    },\n\n                    finish: function finish(finallyLoc) {\n                      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n                        var entry = this.tryEntries[i];\n                        if (entry.finallyLoc === finallyLoc) {\n                          this.complete(entry.completion, entry.afterLoc);\n                          resetTryEntry(entry);\n                          return ContinueSentinel;\n                        }\n                      }\n                    },\n\n                    \"catch\": function _catch(tryLoc) {\n                      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n                        var entry = this.tryEntries[i];\n                        if (entry.tryLoc === tryLoc) {\n                          var record = entry.completion;\n                          if (record.type === \"throw\") {\n                            var thrown = record.arg;\n                            resetTryEntry(entry);\n                          }\n                          return thrown;\n                        }\n                      }\n\n                      // The context.catch method must only be called with a location\n                      // argument that corresponds to a known catch block.\n                      throw new Error(\"illegal catch attempt\");\n                    },\n\n                    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n                      this.delegate = {\n                        iterator: values(iterable),\n                        resultName: resultName,\n                        nextLoc: nextLoc\n                      };\n\n                      return ContinueSentinel;\n                    }\n                  };\n                }(\n                // Among the various tricks for obtaining a reference to the global\n                // object, this seems to be the most reliable technique that does not\n                // use indirect eval (which violates Content Security Policy).\n                (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) === \"object\" ? global : (typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\" ? window : (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) === \"object\" ? self : this);\n\n                /////////////////////////////////////////////////////////////////////////////////////////////////////////////\n              } } } } } } }, { \"extensions\": [\".js\", \".json\"] });\n  require(\"./node_modules/meteor/babel-runtime/babel-runtime.js\");\n\n  /* Exports */\n  if (typeof Package === 'undefined') Package = {};\n  (function (pkg, symbols) {\n    for (var s in symbols) {\n      s in pkg || (pkg[s] = symbols[s]);\n    }\n  })(Package['babel-runtime'] = {}, {\n    meteorBabelHelpers: meteorBabelHelpers\n  });\n})();\n\n//# sourceMappingURL=babel-runtime.js.map","ast":null,"map":{"version":3,"sources":["/bundle/programs/server/packages/babel-runtime.js"],"names":[],"mappings":"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","file":"/bundle/programs/server/packages/babel-runtime.js.map","sourcesContent":["(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Buffer = Package.modules.Buffer;\nvar process = Package.modules.process;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar meteorBabelHelpers;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"babel-runtime\":{\"babel-runtime.js\":[\"meteor-babel-helpers\",\"regenerator-runtime\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// packages/babel-runtime/babel-runtime.js                                                                 //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar S = typeof Symbol === \"function\" ? Symbol : {};\nvar iteratorSymbol = S.iterator || \"@@iterator\";\n\nmeteorBabelHelpers = require(\"meteor-babel-helpers\");\n\nvar BabelRuntime = {\n  // es6.templateLiterals\n  // Constructs the object passed to the tag function in a tagged\n  // template literal.\n  taggedTemplateLiteralLoose: function (strings, raw) {\n    // Babel's own version of this calls Object.freeze on `strings` and\n    // `strings.raw`, but it doesn't seem worth the compatibility and\n    // performance concerns.  If you're writing code against this helper,\n    // don't add properties to these objects.\n    strings.raw = raw;\n    return strings;\n  },\n\n  // es6.classes\n  // Checks that a class constructor is being called with `new`, and throws\n  // an error if it is not.\n  classCallCheck: function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  },\n\n  // es6.classes\n  inherits: function (subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    if (superClass) {\n      if (Object.create) {\n        // All but IE 8\n        subClass.prototype = Object.create(superClass.prototype, {\n          constructor: {\n            value: subClass,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n      } else {\n        // IE 8 path.  Slightly worse for modern browsers, because `constructor`\n        // is enumerable and shows up in the inspector unnecessarily.\n        // It's not an \"own\" property of any instance though.\n        //\n        // For correctness when writing code,\n        // don't enumerate all the own-and-inherited properties of an instance\n        // of a class and expect not to find `constructor` (but who does that?).\n        var F = function () {\n          this.constructor = subClass;\n        };\n        F.prototype = superClass.prototype;\n        subClass.prototype = new F();\n      }\n\n      // For modern browsers, this would be `subClass.__proto__ = superClass`,\n      // but IE <=10 don't support `__proto__`, and in this case the difference\n      // would be detectable; code that works in modern browsers could easily\n      // fail on IE 8 if we ever used the `__proto__` trick.\n      //\n      // There's no perfect way to make static methods inherited if they are\n      // assigned after declaration of the classes.  The best we can do is\n      // to copy them.  In other words, when you write `class Foo\n      // extends Bar`, we copy the static methods from Bar onto Foo, but future\n      // ones are not copied.\n      //\n      // For correctness when writing code, don't add static methods to a class\n      // after you subclass it.\n\n      // The ecmascript-runtime package provides adequate polyfills for\n      // all of these Object.* functions (and Array#forEach), and anyone\n      // using babel-runtime is almost certainly using it because of the\n      // ecmascript package, which also implies ecmascript-runtime.\n      Object.getOwnPropertyNames(superClass).forEach(function (k) {\n        // This property descriptor dance preserves getter/setter behavior\n        // in browsers that support accessor properties (all except\n        // IE8). In IE8, the superClass can't have accessor properties\n        // anyway, so this code is still safe.\n        var descriptor = Object.getOwnPropertyDescriptor(superClass, k);\n        if (descriptor && typeof descriptor === \"object\") {\n          if (Object.getOwnPropertyDescriptor(subClass, k)) {\n            // If subClass already has a property by this name, then it\n            // would not be inherited, so it should not be copied. This\n            // notably excludes properties like .prototype and .name.\n            return;\n          }\n\n          Object.defineProperty(subClass, k, descriptor);\n        }\n      });\n    }\n  },\n\n  createClass: (function () {\n    var hasDefineProperty = false;\n    try {\n      // IE 8 has a broken Object.defineProperty, so feature-test by\n      // trying to call it.\n      Object.defineProperty({}, 'x', {});\n      hasDefineProperty = true;\n    } catch (e) {}\n\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (! hasDefineProperty) {\n        // e.g. `class Foo { get bar() {} }`.  If you try to use getters and\n        // setters in IE 8, you will get a big nasty error, with or without\n        // Babel.  I don't know of any other syntax features besides getters\n        // and setters that will trigger this error.\n        throw new Error(\n          \"Your browser does not support this type of class property.  \" +\n            \"For example, Internet Explorer 8 does not support getters and \" +\n            \"setters.\");\n      }\n\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  })(),\n\n  \"typeof\": function (obj) {\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  },\n\n  possibleConstructorReturn: function (self, call) {\n    if (! self) {\n      throw new ReferenceError(\n        \"this hasn't been initialised - super() hasn't been called\"\n      );\n    }\n\n    var callType = typeof call;\n    if (call &&\n        callType === \"function\" ||\n        callType === \"object\") {\n      return call;\n    }\n\n    return self;\n  },\n\n  interopRequireDefault: function (obj) {\n    return obj && obj.__esModule ? obj : { 'default': obj };\n  },\n\n  interopRequireWildcard: function (obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    }\n\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (hasOwn.call(obj, key)) {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n\n    newObj[\"default\"] = obj;\n    return newObj;\n  },\n\n  interopExportWildcard: function (obj, defaults) {\n    var newObj = defaults({}, obj);\n    delete newObj[\"default\"];\n    return newObj;\n  },\n\n  defaults: function (obj, defaults) {\n    Object.getOwnPropertyNames(defaults).forEach(function (key) {\n      var desc = Object.getOwnPropertyDescriptor(defaults, key);\n      if (desc && desc.configurable && typeof obj[key] === \"undefined\") {\n        Object.defineProperty(obj, key, desc);\n      }\n    });\n\n    return obj;\n  },\n\n  // es7.objectRestSpread and react (JSX)\n  \"extends\": Object.assign || (function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (hasOwn.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }),\n\n  // es6.destructuring\n  objectWithoutProperties: function (obj, keys) {\n    var target = {};\n    outer: for (var i in obj) {\n      if (! hasOwn.call(obj, i)) continue;\n      for (var j = 0; j < keys.length; j++) {\n        if (keys[j] === i) continue outer;\n      }\n      target[i] = obj[i];\n    }\n    return target;\n  },\n\n  // es6.destructuring\n  objectDestructuringEmpty: function (obj) {\n    if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n  },\n\n  // es6.spread\n  bind: Function.prototype.bind || (function () {\n    var isCallable = function (value) { return typeof value === 'function'; };\n    var $Object = Object;\n    var to_string = Object.prototype.toString;\n    var array_slice = Array.prototype.slice;\n    var array_concat = Array.prototype.concat;\n    var array_push = Array.prototype.push;\n    var max = Math.max;\n    var Empty = function Empty() {};\n\n    // Copied from es5-shim.js (3ac7942).  See original for more comments.\n    return function bind(that) {\n      var target = this;\n      if (!isCallable(target)) {\n        throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n      }\n\n      var args = array_slice.call(arguments, 1);\n\n      var bound;\n      var binder = function () {\n\n        if (this instanceof bound) {\n          var result = target.apply(\n            this,\n            array_concat.call(args, array_slice.call(arguments))\n          );\n          if ($Object(result) === result) {\n            return result;\n          }\n          return this;\n        } else {\n          return target.apply(\n            that,\n            array_concat.call(args, array_slice.call(arguments))\n          );\n        }\n      };\n\n      var boundLength = max(0, target.length - args.length);\n\n      var boundArgs = [];\n      for (var i = 0; i < boundLength; i++) {\n        array_push.call(boundArgs, '$' + i);\n      }\n\n      // Create a Function from source code so that it has the right `.length`.\n      // Probably not important for Babel.  This code violates CSPs that ban\n      // `eval`, but the browsers that need this polyfill don't have CSP!\n      bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n\n      if (target.prototype) {\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n      }\n\n      return bound;\n    };\n\n  })(),\n\n  toConsumableArray: function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = arr.length - 1, arr2 = Array(i + 1); i >= 0; --i) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    }\n\n    return Array.from(arr);\n  },\n\n  toArray: function (arr) {\n    return Array.isArray(arr) ? arr : Array.from(arr);\n  },\n\n  slicedToArray: function (iterable, limit) {\n    if (Array.isArray(iterable)) {\n      return iterable;\n    }\n\n    if (iterable) {\n      var it = iterable[iteratorSymbol]();\n      var result = [];\n      var info;\n\n      if (typeof limit !== \"number\") {\n        limit = Infinity;\n      }\n\n      while (result.length < limit &&\n             ! (info = it.next()).done) {\n        result.push(info.value);\n      }\n\n      return result;\n    }\n\n    throw new TypeError(\n      \"Invalid attempt to destructure non-iterable instance\"\n    );\n  },\n\n  slice: Array.prototype.slice\n};\n\n// Use meteorInstall to install all of the above helper functions within\n// node_modules/babel-runtime/helpers.\nObject.keys(BabelRuntime).forEach(function (helperName) {\n  var helpers = {};\n\n  helpers[helperName + \".js\"] = function (require, exports, module) {\n    module.exports = BabelRuntime[helperName];\n  };\n\n  meteorInstall({\n    node_modules: {\n      \"babel-runtime\": {\n        helpers: helpers\n      }\n    }\n  });\n});\n\n// Use meteorInstall to install the regenerator runtime at\n// node_modules/babel-runtime/regenerator.\nmeteorInstall({\n  node_modules: {\n    \"babel-runtime\": {\n      \"regenerator.js\": function (r, e, module) {\n        // Note that we use the require function provided to the\n        // babel-runtime.js file, not the one named 'r' above.\n        var runtime = require(\"regenerator-runtime\");\n\n        // If Promise.asyncApply is defined, use it to wrap calls to\n        // runtime.async so that the entire async function will run in its\n        // own Fiber, not just the code that comes after the first await.\n        if (typeof Promise === \"function\" &&\n            typeof Promise.asyncApply === \"function\") {\n          var realAsync = runtime.async;\n          runtime.async = function () {\n            return Promise.asyncApply(realAsync, runtime, arguments);\n          };\n        }\n\n        module.exports = runtime;\n      }\n    }\n  }\n});\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"node_modules\":{\"meteor-babel-helpers\":{\"package.json\":function(require,exports){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// ../npm/node_modules/meteor-babel-helpers/package.json                                                   //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nexports.name = \"meteor-babel-helpers\";\nexports.version = \"0.0.3\";\nexports.main = \"index.js\";\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// node_modules/meteor/babel-runtime/node_modules/meteor-babel-helpers/index.js                            //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nfunction canDefineNonEnumerableProperties() {\n  var testObj = {};\n  var testPropName = \"t\";\n\n  try {\n    Object.defineProperty(testObj, testPropName, {\n      enumerable: false,\n      value: testObj\n    });\n\n    for (var k in testObj) {\n      if (k === testPropName) {\n        return false;\n      }\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return testObj[testPropName] === testObj;\n}\n\nfunction sanitizeEasy(value) {\n  return value;\n}\n\nfunction sanitizeHard(obj) {\n  if (Array.isArray(obj)) {\n    var newObj = {};\n    var keys = Object.keys(obj);\n    var keyCount = keys.length;\n    for (var i = 0; i < keyCount; ++i) {\n      var key = keys[i];\n      newObj[key] = obj[key];\n    }\n    return newObj;\n  }\n\n  return obj;\n}\n\nmeteorBabelHelpers = module.exports = {\n  // Meteor-specific runtime helper for wrapping the object of for-in\n  // loops, so that inherited Array methods defined by es5-shim can be\n  // ignored in browsers where they cannot be defined as non-enumerable.\n  sanitizeForInObject: canDefineNonEnumerableProperties()\n    ? sanitizeEasy\n    : sanitizeHard,\n\n  // Exposed so that we can test sanitizeForInObject in environments that\n  // support defining non-enumerable properties.\n  _sanitizeForInObjectHard: sanitizeHard\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"regenerator-runtime\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// ../npm/node_modules/regenerator-runtime/package.json                                                    //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\nexports.name = \"regenerator-runtime\";\nexports.version = \"0.9.5\";\nexports.main = \"runtime-module.js\";\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"runtime-module.js\":[\"./runtime\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// node_modules/meteor/babel-runtime/node_modules/regenerator-runtime/runtime-module.js                    //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"runtime.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                         //\n// node_modules/meteor/babel-runtime/node_modules/regenerator-runtime/runtime.js                           //\n//                                                                                                         //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                           //\n/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided, then outerFn.prototype instanceof Generator.\n    var generator = Object.create((outerFn || Generator).prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype;\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `value instanceof AwaitArgument` to determine if the yielded value is\n  // meant to be awaited. Some may consider the name of this method too\n  // cutesy, but they are curmudgeons.\n  runtime.awrap = function(arg) {\n    return new AwaitArgument(arg);\n  };\n\n  function AwaitArgument(arg) {\n    this.arg = arg;\n  }\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value instanceof AwaitArgument) {\n          return Promise.resolve(value.arg).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          if (method === \"return\" ||\n              (method === \"throw\" && delegate.iterator[method] === undefined)) {\n            // A return or throw (when the delegate iterator has no throw\n            // method) always terminates the yield* loop.\n            context.delegate = null;\n\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            var returnMethod = delegate.iterator[\"return\"];\n            if (returnMethod) {\n              var record = tryCatch(returnMethod, delegate.iterator, arg);\n              if (record.type === \"throw\") {\n                // If the return method threw an exception, let that\n                // exception prevail over the original return or throw.\n                method = \"throw\";\n                arg = record.arg;\n                continue;\n              }\n            }\n\n            if (method === \"return\") {\n              // Continue with the outer return, now that the delegate\n              // iterator has been terminated.\n              continue;\n            }\n          }\n\n          var record = tryCatch(\n            delegate.iterator[method],\n            delegate.iterator,\n            arg\n          );\n\n          if (record.type === \"throw\") {\n            context.delegate = null;\n\n            // Like returning generator.throw(uncaught), but without the\n            // overhead of an extra function call.\n            method = \"throw\";\n            arg = record.arg;\n            continue;\n          }\n\n          // Delegate generator ran and handled its own exceptions so\n          // regardless of what the method was, we continue as if it is\n          // \"next\" with an undefined arg.\n          method = \"next\";\n          arg = undefined;\n\n          var info = record.arg;\n          if (info.done) {\n            context[delegate.resultName] = info.value;\n            context.next = delegate.nextLoc;\n          } else {\n            state = GenStateSuspendedYield;\n            return info;\n          }\n\n          context.delegate = null;\n        }\n\n        if (method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = arg;\n\n        } else if (method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw arg;\n          }\n\n          if (context.dispatchException(arg)) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            method = \"next\";\n            arg = undefined;\n          }\n\n        } else if (method === \"return\") {\n          context.abrupt(\"return\", arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          var info = {\n            value: record.arg,\n            done: context.done\n          };\n\n          if (record.arg === ContinueSentinel) {\n            if (context.delegate && method === \"next\") {\n              // Deliberately forget the last sent value so that we don't\n              // accidentally pass it on to the delegate.\n              arg = undefined;\n            }\n          } else {\n            return info;\n          }\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(arg) call above.\n          method = \"throw\";\n          arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.next = finallyEntry.finallyLoc;\n      } else {\n        this.complete(record);\n      }\n\n      return ContinueSentinel;\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = record.arg;\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./node_modules/meteor/babel-runtime/babel-runtime.js\");\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['babel-runtime'] = {}, {\n  meteorBabelHelpers: meteorBabelHelpers\n});\n\n})();\n\n//# sourceMappingURL=babel-runtime.js.map\n"]},"hash":"c458c32494a3374f62fdf3336abf4bf9b2f6aaa2"}

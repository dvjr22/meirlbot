{"metadata":{"usedHelpers":["typeof"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/bundle/programs/server/packages/mongo-id.js","filenameRelative":"/bundle/programs/server/packages/mongo-id.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/bundle/programs/server/packages/mongo-id.js.map","sourceFileName":"/bundle/programs/server/packages/mongo-id.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"mongo-id"},"ignored":false,"code":"var _typeof;module.import(\"babel-runtime/helpers/typeof\",{\"default\":function(v){_typeof=v}});\n(function () {\n\n  /* Imports */\n  var Meteor = Package.meteor.Meteor;\n  var global = Package.meteor.global;\n  var meteorEnv = Package.meteor.meteorEnv;\n  var EJSON = Package.ejson.EJSON;\n  var IdMap = Package['id-map'].IdMap;\n  var Random = Package.random.Random;\n\n  /* Package-scope variables */\n  var MongoID;\n\n  (function () {\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //                                                                                                    //\n    // packages/mongo-id/id.js                                                                            //\n    //                                                                                                    //\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////\n    //\n    MongoID = {};\n\n    MongoID._looksLikeObjectID = function (str) {\n      return str.length === 24 && str.match(/^[0-9a-f]*$/);\n    };\n\n    MongoID.ObjectID = function (hexString) {\n      //random-based impl of Mongo ObjectID\n      var self = this;\n      if (hexString) {\n        hexString = hexString.toLowerCase();\n        if (!MongoID._looksLikeObjectID(hexString)) {\n          throw new Error(\"Invalid hexadecimal string for creating an ObjectID\");\n        }\n        // meant to work with _.isEqual(), which relies on structural equality\n        self._str = hexString;\n      } else {\n        self._str = Random.hexString(24);\n      }\n    };\n\n    MongoID.ObjectID.prototype.toString = function () {\n      var self = this;\n      return \"ObjectID(\\\"\" + self._str + \"\\\")\";\n    };\n\n    MongoID.ObjectID.prototype.equals = function (other) {\n      var self = this;\n      return other instanceof MongoID.ObjectID && self.valueOf() === other.valueOf();\n    };\n\n    MongoID.ObjectID.prototype.clone = function () {\n      var self = this;\n      return new MongoID.ObjectID(self._str);\n    };\n\n    MongoID.ObjectID.prototype.typeName = function () {\n      return \"oid\";\n    };\n\n    MongoID.ObjectID.prototype.getTimestamp = function () {\n      var self = this;\n      return parseInt(self._str.substr(0, 8), 16);\n    };\n\n    MongoID.ObjectID.prototype.valueOf = MongoID.ObjectID.prototype.toJSONValue = MongoID.ObjectID.prototype.toHexString = function () {\n      return this._str;\n    };\n\n    EJSON.addType(\"oid\", function (str) {\n      return new MongoID.ObjectID(str);\n    });\n\n    MongoID.idStringify = function (id) {\n      if (id instanceof MongoID.ObjectID) {\n        return id.valueOf();\n      } else if (typeof id === 'string') {\n        if (id === \"\") {\n          return id;\n        } else if (id.substr(0, 1) === \"-\" || // escape previously dashed strings\n        id.substr(0, 1) === \"~\" || // escape escaped numbers, true, false\n        MongoID._looksLikeObjectID(id) || // escape object-id-form strings\n        id.substr(0, 1) === '{') {\n          // escape object-form strings, for maybe implementing later\n          return \"-\" + id;\n        } else {\n          return id; // other strings go through unchanged.\n        }\n      } else if (id === undefined) {\n          return '-';\n        } else if ((typeof id === \"undefined\" ? \"undefined\" : _typeof(id)) === 'object' && id !== null) {\n          throw new Error(\"Meteor does not currently support objects other than ObjectID as ids\");\n        } else {\n          // Numbers, true, false, null\n          return \"~\" + JSON.stringify(id);\n        }\n    };\n\n    MongoID.idParse = function (id) {\n      if (id === \"\") {\n        return id;\n      } else if (id === '-') {\n        return undefined;\n      } else if (id.substr(0, 1) === '-') {\n        return id.substr(1);\n      } else if (id.substr(0, 1) === '~') {\n        return JSON.parse(id.substr(1));\n      } else if (MongoID._looksLikeObjectID(id)) {\n        return new MongoID.ObjectID(id);\n      } else {\n        return id;\n      }\n    };\n\n    ////////////////////////////////////////////////////////////////////////////////////////////////////////\n  }).call(this);\n\n  /* Exports */\n  if (typeof Package === 'undefined') Package = {};\n  (function (pkg, symbols) {\n    for (var s in symbols) {\n      s in pkg || (pkg[s] = symbols[s]);\n    }\n  })(Package['mongo-id'] = {}, {\n    MongoID: MongoID\n  });\n})();\n\n//# sourceMappingURL=mongo-id.js.map","ast":null,"map":{"version":3,"sources":["/bundle/programs/server/packages/mongo-id.js"],"names":[],"mappings":"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","file":"/bundle/programs/server/packages/mongo-id.js.map","sourcesContent":["(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar EJSON = Package.ejson.EJSON;\nvar IdMap = Package['id-map'].IdMap;\nvar Random = Package.random.Random;\n\n/* Package-scope variables */\nvar MongoID;\n\n(function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                    //\n// packages/mongo-id/id.js                                                                            //\n//                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                      //\nMongoID = {};\n\nMongoID._looksLikeObjectID = function (str) {\n  return str.length === 24 && str.match(/^[0-9a-f]*$/);\n};\n\nMongoID.ObjectID = function (hexString) {\n  //random-based impl of Mongo ObjectID\n  var self = this;\n  if (hexString) {\n    hexString = hexString.toLowerCase();\n    if (!MongoID._looksLikeObjectID(hexString)) {\n      throw new Error(\"Invalid hexadecimal string for creating an ObjectID\");\n    }\n    // meant to work with _.isEqual(), which relies on structural equality\n    self._str = hexString;\n  } else {\n    self._str = Random.hexString(24);\n  }\n};\n\nMongoID.ObjectID.prototype.toString = function () {\n  var self = this;\n  return \"ObjectID(\\\"\" + self._str + \"\\\")\";\n};\n\nMongoID.ObjectID.prototype.equals = function (other) {\n  var self = this;\n  return other instanceof MongoID.ObjectID &&\n    self.valueOf() === other.valueOf();\n};\n\nMongoID.ObjectID.prototype.clone = function () {\n  var self = this;\n  return new MongoID.ObjectID(self._str);\n};\n\nMongoID.ObjectID.prototype.typeName = function() {\n  return \"oid\";\n};\n\nMongoID.ObjectID.prototype.getTimestamp = function() {\n  var self = this;\n  return parseInt(self._str.substr(0, 8), 16);\n};\n\nMongoID.ObjectID.prototype.valueOf =\n    MongoID.ObjectID.prototype.toJSONValue =\n    MongoID.ObjectID.prototype.toHexString =\n    function () { return this._str; };\n\nEJSON.addType(\"oid\",  function (str) {\n  return new MongoID.ObjectID(str);\n});\n\nMongoID.idStringify = function (id) {\n  if (id instanceof MongoID.ObjectID) {\n    return id.valueOf();\n  } else if (typeof id === 'string') {\n    if (id === \"\") {\n      return id;\n    } else if (id.substr(0, 1) === \"-\" || // escape previously dashed strings\n               id.substr(0, 1) === \"~\" || // escape escaped numbers, true, false\n               MongoID._looksLikeObjectID(id) || // escape object-id-form strings\n               id.substr(0, 1) === '{') { // escape object-form strings, for maybe implementing later\n      return \"-\" + id;\n    } else {\n      return id; // other strings go through unchanged.\n    }\n  } else if (id === undefined) {\n    return '-';\n  } else if (typeof id === 'object' && id !== null) {\n    throw new Error(\"Meteor does not currently support objects other than ObjectID as ids\");\n  } else { // Numbers, true, false, null\n    return \"~\" + JSON.stringify(id);\n  }\n};\n\n\nMongoID.idParse = function (id) {\n  if (id === \"\") {\n    return id;\n  } else if (id === '-') {\n    return undefined;\n  } else if (id.substr(0, 1) === '-') {\n    return id.substr(1);\n  } else if (id.substr(0, 1) === '~') {\n    return JSON.parse(id.substr(1));\n  } else if (MongoID._looksLikeObjectID(id)) {\n    return new MongoID.ObjectID(id);\n  } else {\n    return id;\n  }\n};\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['mongo-id'] = {}, {\n  MongoID: MongoID\n});\n\n})();\n\n//# sourceMappingURL=mongo-id.js.map\n"]},"hash":"4890d290ac2689732db2290676be3875c03a9b00"}

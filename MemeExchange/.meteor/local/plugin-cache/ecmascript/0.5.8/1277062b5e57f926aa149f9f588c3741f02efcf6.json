{"metadata":{"usedHelpers":["typeof"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/bundle/programs/server/npm-require.js","filenameRelative":"/bundle/programs/server/npm-require.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/bundle/programs/server/npm-require.js.map","sourceFileName":"/bundle/programs/server/npm-require.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"npm-require"},"ignored":false,"code":"var _typeof;module.import(\"babel-runtime/helpers/typeof\",{\"default\":function(v){_typeof=v}});\nvar assert = require(\"assert\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar _ = require('underscore');\nvar files = require('./mini-files.js');\nvar serverJson = require(\"./server-json.js\");\nvar topLevelIdPattern = /^[^./]/;\n\nfunction statOrNull(path) {\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction findAppDirHelper(absOSPath) {\n  if (fs.statSync(absOSPath).isDirectory() && statOrNull(path.join(absOSPath, \".meteor\"))) {\n    return absOSPath;\n  }\n\n  var parentDir = path.dirname(absOSPath);\n  if (parentDir !== absOSPath) {\n    return findAppDirHelper(parentDir);\n  }\n\n  throw new Error(\"Cannot find application root directory\");\n}\n\nfunction findAppDir(absPath) {\n  return files.convertToPosixPath(findAppDirHelper(files.convertToOSPath(absPath)));\n}\n\n// Map from virtual module identifiers for node_modules directories (like\n// \"/node_modules/meteor/blaze/node_modules\") to the absolute paths of the\n// read node_modules directories on disk. The npmRequire function below\n// needs to look up absolute paths using virtual identifiers as input.\nvar nodeModulesRegistry = Object.create(null);\n\n_.each(serverJson.load, function (fileInfo) {\n  if (fileInfo.node_modules) {\n    var match = /^(packages|app)\\/(\\S+)?\\.js/.exec(fileInfo.path);\n    if (match) {\n      if (match[1] === \"packages\") {\n        registerNodeModules(match[2], fileInfo.node_modules);\n      } else if (match[1] === \"app\") {\n        registerNodeModules(null, fileInfo.node_modules);\n      }\n    }\n  }\n});\n\nfunction registerNodeModules(name, node_modules) {\n  if (typeof node_modules === \"string\") {\n    addByPath(node_modules);\n  } else {\n    Object.keys(node_modules).forEach(addByPath);\n  }\n\n  function addByPath(node_modules) {\n    assert.strictEqual(typeof node_modules === \"undefined\" ? \"undefined\" : _typeof(node_modules), \"string\");\n\n    var parts = node_modules.split(files.pathSep);\n    if (parts[0] === \"\") parts.shift();\n\n    if (files.pathIsAbsolute(node_modules)) {\n      if (!name) {\n        var appDir = findAppDir(node_modules);\n        var relPathWithinApp = files.pathRelative(appDir, node_modules);\n        addByParts(relPathWithinApp.split(files.pathSep), node_modules);\n        return;\n      }\n\n      parts.forEach(function (part, i) {\n        if (part === \"npm\") {\n          addByParts(parts.slice(i + 1), node_modules);\n        } else if (part === \".npm\") {\n          if (parts[i + 1] === \"package\") {\n            addByParts(parts.slice(i + 2), node_modules);\n          } else if (parts[i + 1] === \"plugin\") {\n            assert.strictEqual(parts[i + 2], name);\n            addByParts(parts.slice(i + 3), node_modules);\n          }\n        }\n      });\n    } else if (parts[0] === \"npm\") {\n      var absPath = files.pathResolve(__dirname, parts.join(files.pathSep));\n      addByParts(parts.slice(1), absPath);\n    } else {\n      throw new Error(\"unknown node_modules path: \" + node_modules);\n    }\n  }\n\n  function addByParts(parts, absPath) {\n    assert.ok(parts.length > 0);\n    assert.notEqual(parts[0], \"\");\n    assert.notEqual(parts[0], \"..\");\n\n    if (name) {\n      parts.unshift(\"node_modules\", \"meteor\", name);\n    }\n\n    // Ensure a leading / character.\n    parts.unshift(\"\");\n\n    nodeModulesRegistry[parts.join(\"/\")] = absPath;\n  }\n}\n\nfunction getRelID(id) {\n  assert.strictEqual(id.charAt(0), \"/\");\n  return \"./npm\" + id.replace(/:/g, \"_\");\n}\n\n// Sort the keys in reverse alphabetical order so that longer paths will\n// come before their prefixes.\nvar sortedNodeModulesPaths = Object.keys(nodeModulesRegistry).sort(function (a, b) {\n  if (a < b) return 1;\n  if (b < a) return -1;\n  return 0;\n});\n\nfunction npmRequire(id) {\n  return require(resolve(id));\n}\n\nvar resolveCache = Object.create(null);\n\nfunction resolve(id) {\n  var res = resolveCache[id];\n\n  if (typeof res === \"string\") {\n    return res;\n  }\n\n  if (res === null) {\n    var idParts = id.split(\"/\");\n    var meteorAddTip = \"\";\n    // If it looks like `meteor/xxx`, the user may forgot to add the\n    // package before importing it.\n    if (idParts.length === 2 && idParts[0] === \"meteor\") {\n      meteorAddTip = \". Try `meteor add \" + idParts[1] + \"` \" + \"as it looks like you tried to import it without adding \" + \"to the project.\";\n    }\n    res = new Error(\"Cannot find module '\" + id + \"'\" + meteorAddTip);\n    res.code = \"MODULE_NOT_FOUND\";\n    throw res;\n  }\n\n  resolveCache[id] = resolveInLocalBuild(id) || resolveInNodeModules(id) || resolveInDevBundle(id) || null;\n\n  return resolve(id);\n}\n\nfunction resolveInLocalBuild(id) {\n  return tryResolve(getRelID(id));\n}\n\nfunction resolveInNodeModules(id) {\n  var absId;\n\n  sortedNodeModulesPaths.some(function (prefix) {\n    var relId = files.pathRelative(files.pathJoin(\".\", prefix), files.pathJoin(\".\", id));\n\n    if (relId.slice(0, 2) !== \"..\") {\n      return absId = files.pathJoin(nodeModulesRegistry[prefix], relId);\n    }\n  });\n\n  return absId && tryResolve(files.convertToOSPath(absId));\n}\n\nfunction resolveInDevBundle(id) {\n  // Fall back to dev_bundle/lib/node_modules and built-in modules.\n  return topLevelIdPattern.test(id) && tryResolve(id);\n}\n\nfunction tryResolve(id) {\n  try {\n    return require.resolve(id);\n  } catch (e) {\n    return null;\n  }\n}\n\nexports.require = npmRequire;\nexports.resolve = npmRequire.resolve = resolve;","ast":null,"map":{"version":3,"sources":["/bundle/programs/server/npm-require.js"],"names":[],"mappings":"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","file":"/bundle/programs/server/npm-require.js.map","sourcesContent":["var assert = require(\"assert\");\nvar fs = require(\"fs\");\nvar path = require(\"path\");\nvar _ = require('underscore');\nvar files = require('./mini-files.js');\nvar serverJson = require(\"./server-json.js\");\nvar topLevelIdPattern = /^[^./]/;\n\nfunction statOrNull(path) {\n  try {\n    return fs.statSync(path);\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction findAppDirHelper(absOSPath) {\n  if (fs.statSync(absOSPath).isDirectory() &&\n      statOrNull(path.join(absOSPath, \".meteor\"))) {\n    return absOSPath;\n  }\n\n  var parentDir = path.dirname(absOSPath);\n  if (parentDir !== absOSPath) {\n    return findAppDirHelper(parentDir);\n  }\n\n  throw new Error(\"Cannot find application root directory\");\n}\n\nfunction findAppDir(absPath) {\n  return files.convertToPosixPath(\n    findAppDirHelper(files.convertToOSPath(absPath)));\n}\n\n// Map from virtual module identifiers for node_modules directories (like\n// \"/node_modules/meteor/blaze/node_modules\") to the absolute paths of the\n// read node_modules directories on disk. The npmRequire function below\n// needs to look up absolute paths using virtual identifiers as input.\nvar nodeModulesRegistry = Object.create(null);\n\n_.each(serverJson.load, function (fileInfo) {\n  if (fileInfo.node_modules) {\n    var match = /^(packages|app)\\/(\\S+)?\\.js/.exec(fileInfo.path);\n    if (match) {\n      if (match[1] === \"packages\") {\n        registerNodeModules(match[2], fileInfo.node_modules);\n      } else if (match[1] === \"app\") {\n        registerNodeModules(null, fileInfo.node_modules);\n      }\n    }\n  }\n});\n\nfunction registerNodeModules(name, node_modules) {\n  if (typeof node_modules === \"string\") {\n    addByPath(node_modules);\n  } else {\n    Object.keys(node_modules).forEach(addByPath);\n  }\n\n  function addByPath(node_modules) {\n    assert.strictEqual(typeof node_modules, \"string\");\n\n    var parts = node_modules.split(files.pathSep);\n    if (parts[0] === \"\") parts.shift();\n\n    if (files.pathIsAbsolute(node_modules)) {\n      if (! name) {\n        var appDir = findAppDir(node_modules);\n        var relPathWithinApp = files.pathRelative(appDir, node_modules);\n        addByParts(relPathWithinApp.split(files.pathSep), node_modules);\n        return;\n      }\n\n      parts.forEach(function (part, i) {\n        if (part === \"npm\") {\n          addByParts(parts.slice(i + 1), node_modules);\n        } else if (part === \".npm\") {\n          if (parts[i + 1] === \"package\") {\n            addByParts(parts.slice(i + 2), node_modules);\n          } else if (parts[i + 1] === \"plugin\") {\n            assert.strictEqual(parts[i + 2], name);\n            addByParts(parts.slice(i + 3), node_modules);\n          }\n        }\n      });\n\n    } else if (parts[0] === \"npm\") {\n      var absPath = files.pathResolve(__dirname, parts.join(files.pathSep));\n      addByParts(parts.slice(1), absPath);\n\n    } else {\n      throw new Error(\"unknown node_modules path: \" + node_modules);\n    }\n  }\n\n  function addByParts(parts, absPath) {\n    assert.ok(parts.length > 0);\n    assert.notEqual(parts[0], \"\");\n    assert.notEqual(parts[0], \"..\");\n\n    if (name) {\n      parts.unshift(\"node_modules\", \"meteor\", name);\n    }\n\n    // Ensure a leading / character.\n    parts.unshift(\"\");\n\n    nodeModulesRegistry[parts.join(\"/\")] = absPath;\n  }\n}\n\nfunction getRelID(id) {\n  assert.strictEqual(id.charAt(0), \"/\");\n  return \"./npm\" + id.replace(/:/g, \"_\");\n}\n\n// Sort the keys in reverse alphabetical order so that longer paths will\n// come before their prefixes.\nvar sortedNodeModulesPaths =\n  Object.keys(nodeModulesRegistry).sort(function (a, b) {\n    if (a < b) return 1;\n    if (b < a) return -1;\n    return 0;\n  });\n\nfunction npmRequire(id) {\n  return require(resolve(id));\n}\n\nvar resolveCache = Object.create(null);\n\nfunction resolve(id) {\n  var res = resolveCache[id];\n\n  if (typeof res === \"string\") {\n    return res;\n  }\n\n  if (res === null) {\n    var idParts = id.split(\"/\");\n    var meteorAddTip = \"\";\n    // If it looks like `meteor/xxx`, the user may forgot to add the \n    // package before importing it.\n    if (idParts.length === 2 &&\n        idParts[0] === \"meteor\") {\n          meteorAddTip = \". Try `meteor add \" + idParts[1] + \"` \" +\n          \"as it looks like you tried to import it without adding \" +\n          \"to the project.\";\n    }\n    res = new Error(\"Cannot find module '\" + id + \"'\" + meteorAddTip);\n    res.code = \"MODULE_NOT_FOUND\";\n    throw res;\n  }\n\n  resolveCache[id] =\n    resolveInLocalBuild(id) ||\n    resolveInNodeModules(id) ||\n    resolveInDevBundle(id) ||\n    null;\n\n  return resolve(id);\n}\n\nfunction resolveInLocalBuild(id) {\n  return tryResolve(getRelID(id));\n}\n\nfunction resolveInNodeModules(id) {\n  var absId;\n\n  sortedNodeModulesPaths.some(function (prefix) {\n    var relId = files.pathRelative(\n      files.pathJoin(\".\", prefix),\n      files.pathJoin(\".\", id)\n    );\n\n    if (relId.slice(0, 2) !== \"..\") {\n      return absId =\n        files.pathJoin(nodeModulesRegistry[prefix], relId);\n    }\n  });\n\n  return absId && tryResolve(files.convertToOSPath(absId));\n}\n\nfunction resolveInDevBundle(id) {\n  // Fall back to dev_bundle/lib/node_modules and built-in modules.\n  return topLevelIdPattern.test(id) && tryResolve(id);\n}\n\nfunction tryResolve(id) {\n  try {\n    return require.resolve(id);\n  } catch (e) {\n    return null;\n  }\n}\n\nexports.require = npmRequire;\nexports.resolve = npmRequire.resolve = resolve;\n"]},"hash":"1277062b5e57f926aa149f9f588c3741f02efcf6"}

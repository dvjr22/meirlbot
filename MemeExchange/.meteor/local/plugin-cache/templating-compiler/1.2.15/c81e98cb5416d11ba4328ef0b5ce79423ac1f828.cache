{"head":"","body":"","js":"\nTemplate.__checkName(\"commandline\");\nTemplate[\"commandline\"] = new Template(\"Template.commandline\", (function() {\n  var view = this;\n  return HTML.DIV(\"\\n\", Spacebars.include(view.lookupTemplate(\"better_markdown\"), function() {\n    return [ \"\\n\\n\", Blaze._TemplateWith(function() {\n      return \"commandline\";\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"api_section\"), function() {\n        return \"Command line\";\n      });\n    }), \"\\n\\n\", HTML.Comment(\" XXX some intro text? \"), \"\\n\\n\", HTML.H3({\n      id: \"meteorhelp\"\n    }, \"meteor help\"), \"\\n\\nGet help on meteor command line usage. Running `meteor\\nhelp` by itself will list the common meteor\\ncommands. Running \", HTML.CODE(\"meteor help \", HTML.I(\"command\")), \" will print\\ndetailed help about the command.\\n\\n\\n\", HTML.H3({\n      id: \"meteorrun\"\n    }, \"meteor run\"), \"\\n\\nRun a meteor development server in the current project. Searches\\nupward from the current directory for the root directory of a Meteor\\nproject. Whenever you change any of the application's source files, the\\nchanges are automatically detected and applied to the running\\napplication.\\n\\nYou can use the application by pointing your web browser at\\n\", HTML.A({\n      href: \"http://localhost:3000\"\n    }, \"localhost:3000\"), \". No internet connection is\\nrequired.\\n\\nThis is the default command. Simply running `meteor` is the\\nsame as `meteor run`.\\n\\nRun `meteor help run` to see the full list of options.\\n\\n\\n\", HTML.H3({\n      id: \"meteorcreate\"\n    }, \"meteor create \", HTML.I(\"name\")), \"\\n\\nCreate a new Meteor project. Makes a subdirectory named *name*\\nand copies in the template app. You can pass an absolute or relative\\npath.\\n\\n\\n\", HTML.H3({\n      id: \"meteordeploy\"\n    }, \"meteor deploy \", HTML.I(\"site\")), \"\\n\\nDeploy the project in your current directory to Meteor's servers.\\n\\n\\nYou can deploy to any available name\\nunder `meteor.com` without any additional\\nconfiguration, for example, `myapp.meteor.com`.  If\\nyou deploy to a custom domain, such as `myapp.mydomain.com`,\\nthen you'll need to make sure the DNS for that domain is configured to\\npoint at `origin.meteor.com`.\\n\\n\\n\\nYou can deploy in debug mode by passing `--debug`. This\\nwill leave your source code readable by your favorite in-browser\\ndebugger, just like it is in local development mode.\\n\\n\\n\\nTo delete an application you've deployed, specify\\nthe `--delete` option along with the site.\\n\\n\\n\\nTo add an administrative password to your deployment, include\\nthe `--password` option.  Meteor will prompt\\nfor a password.  Once set, any future `meteor deploy` to\\nthe same domain will require that you provide the password.  The same\\npassword protects access to `meteor mongo`\\nand `meteor logs`.  You can change the password by\\nrunning `meteor deploy --password` again,\\nwhich will first prompt for the current password, then for a new\\npassword.\\n\\n\\n\", Spacebars.include(view.lookupTemplate(\"warning\"), function() {\n      return \"\\nPassword protection only applies to administrative actions with the\\nMeteor command.  It does not prevent access to your deployed\\nwebsite.  Also, this all is a temporary hack until we have\\nfull-featured Meteor accounts.\\n\";\n    }), \"\\n\\n\", Spacebars.include(view.lookupTemplate(\"warning\"), function() {\n      return \"\\nIf you use a domain name other than `meteor.com`\\nyou must ensure that the name resolves\\nto `origin.meteor.com`.  If you want a top-level\\ndomain like myapp.com, you'll need a DNS A record, matching the IP\\naddress of origin.meteor.com.\\n\";\n    }), \"\\n\\n\", HTML.H3({\n      id: \"meteorlogs\"\n    }, \"meteor logs \", HTML.I(\"site\")), \"\\n\\nRetrieves the server logs for the named Meteor application.\\n\\n\\nMeteor redirects the output of `console.log()` in your\\nserver code into a logging server.  `meteor logs`\\ndisplays those logs.  In client code, the output\\nof `console.log()` is available in your web browser's\\ninspector, just like any other client-side JavaScript.\\n\\n\\n\", HTML.H3({\n      id: \"meteorupdate\"\n    }, \"meteor update\"), \"\\n\\nUpgrade to the latest Meteor version. Checks to see if a new\\nversion of Meteor is available, and if so, downloads and installs\\nit. You must be connected to the internet.\\n\\n\\n\", HTML.H3({\n      id: \"meteoradd\"\n    }, \"meteor add \", HTML.I(\"package\")), \"\\n\\nAdd packages to your Meteor project. You can add multiple packages\\nwith one command. For a list of the available packages, run `meteor\\nlist`.\\n\\n\\n\", HTML.H3({\n      id: \"meteorremove\"\n    }, \"meteor remove \", HTML.I(\"package\")), \"\\n\\nRemoves a package previously added to your Meteor project. For a\\nlist of the packages that your application is currently using, run\\n`meteor list --using`.\\n\\n\\n\", HTML.H3({\n      id: \"meteorlist\"\n    }, \"meteor list\"), \"\\n\\nWithout arguments, lists all available Meteor packages. To add one of\\nthese packages to your project, run \", HTML.CODE(\"meteor add \", HTML.I(\"package\")), \".\\n\\nWith `--using`, list the packages that you have added to your project.\\n\\n\\n\", HTML.H3({\n      id: \"meteormongo\"\n    }, \"meteor mongo\"), \"\\n\\nOpen a MongoDB shell on your local development database, so that you\\ncan view or manipulate it directly.\\n\\n\", Spacebars.include(view.lookupTemplate(\"warning\"), function() {\n      return \"\\nFor now, you must already have your application running locally\\nwith `meteor run`. This will be easier in the future.\\n\";\n    }), \"\\n\\n\\n\", HTML.H3({\n      id: \"meteorreset\"\n    }, \"meteor reset\"), \"\\n\\nReset the current project to a fresh state. Removes the local\\nmongo database.\\n\\n\", Spacebars.include(view.lookupTemplate(\"warning\"), function() {\n      return [ \"\\nThis deletes your data! Make sure you do not have any information you\\ncare about in your local mongo database by running `meteor\\nmongo`. From the mongo shell, use `show collections`\\nand \", HTML.CODE(\"db.\", HTML.I(\"collection\"), \".find()\"), \" to inspect your data.\\n\" ];\n    }), \"\\n\\n\", Spacebars.include(view.lookupTemplate(\"warning\"), function() {\n      return \"\\nFor now, you can not run this while a development server is\\nrunning. Quit all running meteor applications before running this.\\n\";\n    }), \"\\n\\n\\n\", HTML.H3({\n      id: \"meteorbundle\"\n    }, \"meteor bundle\"), \"\\n\\nPackage the application up for deployment. The output is a tarball\\nthat includes everything necessary to run the\\napplication. See `README` in the tarball for details.\\n\\nYou can use this to host a Meteor application on your own server,\\ninstead of deploying to Meteor's servers.  You will have to deal with\\nlogging, monitoring, backups, load-balancing, etc, all of which we\\nhandle for you if you use `meteor deploy`.\\n\\n\" ];\n  }), \"\\n\");\n}));\n","bodyAttrs":{}}